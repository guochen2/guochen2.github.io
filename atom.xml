<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>斑驳记忆</title>
  
  <subtitle>斑驳记忆</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://guochen2.github.io/"/>
  <updated>2021-07-01T12:28:19.804Z</updated>
  <id>https://guochen2.github.io/</id>
  
  <author>
    <name>Guo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>固定长度验证码训练识别</title>
    <link href="https://guochen2.github.io/2021/07/01/ai/%E5%9B%BA%E5%AE%9A%E9%95%BF%E5%BA%A6%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AE%AD%E7%BB%83%E8%AF%86%E5%88%AB/"/>
    <id>https://guochen2.github.io/2021/07/01/ai/%E5%9B%BA%E5%AE%9A%E9%95%BF%E5%BA%A6%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AE%AD%E7%BB%83%E8%AF%86%E5%88%AB/</id>
    <published>2021-07-01T11:49:09.000Z</published>
    <updated>2021-07-01T12:28:19.804Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="训练"><a href="#训练" class="headerlink" title="训练"></a>训练</h2><h4 id="开源地址"><a href="#开源地址" class="headerlink" title="开源地址"></a>开源地址</h4><p><a href="https://github.com/kerlomz/captcha_trainer/tree/cnn">https://github.com/kerlomz/captcha_trainer/tree/cnn</a></p><h5 id="训练集与测试集"><a href="#训练集与测试集" class="headerlink" title="训练集与测试集"></a>训练集与测试集</h5><p><em>样本可以先做灰度处理，能提高识别率</em></p><h6 id="训练集"><a href="#训练集" class="headerlink" title="训练集"></a>训练集</h6><p>数据尽量多，注意文件命名规范 值_任意名称.png<br><img src="/2021/07/01/ai/%E5%9B%BA%E5%AE%9A%E9%95%BF%E5%BA%A6%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AE%AD%E7%BB%83%E8%AF%86%E5%88%AB/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20210701200544.png" alt="a"></p><h6 id="测试集"><a href="#测试集" class="headerlink" title="测试集"></a>测试集</h6><p>文件个数需要大于500个<br><img src="/2021/07/01/ai/%E5%9B%BA%E5%AE%9A%E9%95%BF%E5%BA%A6%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AE%AD%E7%BB%83%E8%AF%86%E5%88%AB/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20210701200759.png" alt="a"></p><h4 id="训练配置"><a href="#训练配置" class="headerlink" title="训练配置"></a>训练配置</h4><h5 id="config-yaml"><a href="#config-yaml" class="headerlink" title="config.yaml"></a>config.yaml</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Device: [gpu:0, cpu:0] The default device is GPU.</span><br><span class="line"># - requirement.txt  -  GPU: tensorflow-gpu, CPU: tensorflow</span><br><span class="line"># - If you use the GPU version, you need to install some additional applications.</span><br><span class="line"># TrainRegex and TestRegex: Default matching apple_20181010121212.jpg file.</span><br><span class="line"># TrainsPath and TestPath: The local absolute path of your training and testing set.</span><br><span class="line">System:</span><br><span class="line">  NeuralNet: &#x27;CNNNet&#x27;</span><br><span class="line">  Device: &#x27;cpu:0&#x27;</span><br><span class="line">  DeviceUsage: 0.9</span><br><span class="line">  TrainsPath: &#x27;D:\train\1\&#x27;</span><br><span class="line">  TrainRegex: &#x27;.*?(?=_.*\.)&#x27;</span><br><span class="line">  TestPath: &#x27;D:\train\2\&#x27;</span><br><span class="line">  TestRegex: &#x27;.*?(?=_.*\.)&#x27;</span><br><span class="line"></span><br><span class="line"># SavedStep: A Session.run() execution is called a Step,</span><br><span class="line"># - Used to save training progress, Default value is 100.</span><br><span class="line"># TestNum: The number of samples for each test batch.</span><br><span class="line"># - A test for every saved steps.</span><br><span class="line"># CompileAcc: When the accuracy reaches the set threshold,</span><br><span class="line"># - the model will be compiled together each time it is archived.</span><br><span class="line"># - Available for specific usage scenarios.</span><br><span class="line"># EndAcc: Finish the training when the accuracy reaches [EndAcc*100]%.</span><br><span class="line"># EndStep: Finish the training when the step is greater than the [-1: Off, EndStep &gt;0: On] step.</span><br><span class="line"># LearningRate: Find the fastest relationship between the loss decline and the learning rate.</span><br><span class="line">Trains:</span><br><span class="line">  SavedStep: 100</span><br><span class="line">  TestNum: 500</span><br><span class="line">  CompileAcc: 0.9</span><br><span class="line">  EndAcc: 0.95</span><br><span class="line">  EndStep: -1</span><br><span class="line">  LearningRate: 0.001</span><br></pre></td></tr></table></figure><h5 id="model-yaml"><a href="#model-yaml" class="headerlink" title="model.yaml"></a>model.yaml</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Convolution: The number of layers is at least 3.</span><br><span class="line"># - The number below corresponds to the size of each layer of convolution.</span><br><span class="line"># Provide flexible neural network construction,</span><br><span class="line"># Adjust the neural network structure that suits you best</span><br><span class="line"># [Convolution, Pool, Optimization: &#123;Dropout&#125;]</span><br><span class="line">CNNNet:</span><br><span class="line">  Layer:</span><br><span class="line">    - Convolution: 32</span><br><span class="line">    - Pool: [1, 2, 2, 1]</span><br><span class="line">    - Optimization: Dropout</span><br><span class="line">    - Convolution: 64</span><br><span class="line">    - Pool: [1, 2, 2, 1]</span><br><span class="line">    - Optimization: Dropout</span><br><span class="line">    - Convolution: 64</span><br><span class="line">    - Pool: [1, 2, 2, 1]</span><br><span class="line">    - Optimization: Dropout</span><br><span class="line">  ConvCoreSize: 3</span><br><span class="line">  FullConnect: 1024</span><br><span class="line"></span><br><span class="line"># ModelName: Corresponding to the model file in the model directory,</span><br><span class="line"># - such as YourModelName.pb, fill in YourModelName here.</span><br><span class="line"># CharSet: Provides a default optional built-in solution:</span><br><span class="line"># - [ALPHANUMERIC, ALPHANUMERIC_LOWER, ALPHANUMERIC_UPPER, NUMERIC]</span><br><span class="line"># - Or you can use your own customized character set like: [&#x27;a&#x27;, &#x27;1&#x27;, &#x27;2&#x27;].</span><br><span class="line"># ImageChannel: [1 - Gray Scale, 3 - RGB].</span><br><span class="line"># CharLength: Captcha Length.</span><br><span class="line">Model:</span><br><span class="line">  ModelName: GuoModel</span><br><span class="line">  ImageChannel: 1</span><br><span class="line">  CharLength: 5</span><br><span class="line">  CharSet: NUMERIC</span><br><span class="line"></span><br><span class="line"># Magnification: [ x2 -&gt; from size(50, 50) to size(100,100)].</span><br><span class="line"># OriginalColor: [false - Gray Scale, true - RGB].</span><br><span class="line"># Binaryzation: [-1: Off, &gt;0 and &lt; 255: On].</span><br><span class="line"># Smoothing: [-1: Off, &gt;0: On].</span><br><span class="line"># Blur: [-1: Off, &gt;0: On].</span><br><span class="line"># Resize: [WIDTH, HEIGHT].</span><br><span class="line">Pretreatment:</span><br><span class="line">  Magnification: 0</span><br><span class="line">  OriginalColor: false</span><br><span class="line">  Binaryzation: 240</span><br><span class="line">  Smoothing: 3</span><br><span class="line">  Invert: false</span><br><span class="line">  Blur: 5</span><br><span class="line">#  Resize: [160, 60]</span><br></pre></td></tr></table></figure><h4 id="开始训练"><a href="#开始训练" class="headerlink" title="开始训练"></a>开始训练</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 trains.py</span><br></pre></td></tr></table></figure><h4 id="打包好的gpu-exe训练程序，可配置好后直接cmd运行"><a href="#打包好的gpu-exe训练程序，可配置好后直接cmd运行" class="headerlink" title="打包好的gpu exe训练程序，可配置好后直接cmd运行"></a>打包好的gpu exe训练程序，可配置好后直接cmd运行</h4><p>链接：<a href="https://pan.baidu.com/s/1rvZ4FBJ94iC9rZJ0yQtyvg">https://pan.baidu.com/s/1rvZ4FBJ94iC9rZJ0yQtyvg</a><br>提取码：my4i</p><h2 id="部署识别"><a href="#部署识别" class="headerlink" title="部署识别"></a>部署识别</h2><h4 id="开源地址-1"><a href="#开源地址-1" class="headerlink" title="开源地址"></a>开源地址</h4><p><a href="https://github.com/kerlomz/captcha_platform/tree/cnn">https://github.com/kerlomz/captcha_platform/tree/cnn</a><br><em>注意config.py有一行错误 可能会导致运行异常 需要注释掉</em><br><img src="/2021/07/01/ai/%E5%9B%BA%E5%AE%9A%E9%95%BF%E5%BA%A6%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AE%AD%E7%BB%83%E8%AF%86%E5%88%AB/Image.png" alt="a"></p><h5 id="model-yaml-1"><a href="#model-yaml-1" class="headerlink" title="model.yaml"></a>model.yaml</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Device: [gpu:0, cpu:0]</span><br><span class="line">System:</span><br><span class="line">  Device: &#x27;gpu:0&#x27;</span><br><span class="line"></span><br><span class="line"># ModelName: Corresponding to the model file in the model directory,</span><br><span class="line"># - such as YourModelName.pb, fill in YourModelName here.</span><br><span class="line"># CharSet: Provides a default optional built-in solution:</span><br><span class="line"># - [ALPHANUMERIC, ALPHANUMERIC_LOWER, ALPHANUMERIC_UPPER, NUMERIC]</span><br><span class="line"># - Or you can use your own customized char set like: [&#x27;a&#x27;, &#x27;1&#x27;, &#x27;2&#x27;].</span><br><span class="line"># ImageChannel: [1 - Gray Scale, 3 - RGB].</span><br><span class="line"># CharLength: Captcha Length.</span><br><span class="line">Model:</span><br><span class="line">  ModelName: GuoModel</span><br><span class="line">  ImageChannel: 1</span><br><span class="line">  CharLength: 5</span><br><span class="line">  CharSet: NUMERIC</span><br><span class="line"></span><br><span class="line"># Magnification: [ x2 -&gt; from size(50, 50) to size(100,100)].</span><br><span class="line"># OriginalColor: [false - Gray Scale, true - RGB].</span><br><span class="line"># Binaryzation: [-1: Off, &gt;0 and &lt; 255: On].</span><br><span class="line"># Smoothing: [-1: Off, &gt;0: On].</span><br><span class="line"># Invert [Binaryzation Color Invert]</span><br><span class="line"># Blur: [-1: Off, &gt;0: On].</span><br><span class="line"># Resize: [WIDTH, HEIGHT].</span><br><span class="line">Pretreatment:</span><br><span class="line">  Magnification: 0</span><br><span class="line">  OriginalColor: false</span><br><span class="line">  Binaryzation: 240</span><br><span class="line">  Smoothing: 3</span><br><span class="line">  Invert: false</span><br><span class="line">  Blur: 5</span><br><span class="line">#  Resize: [160, 60]</span><br></pre></td></tr></table></figure><h4 id="端口可以更改-通过命令行"><a href="#端口可以更改-通过命令行" class="headerlink" title="端口可以更改 通过命令行"></a>端口可以更改 通过命令行</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python flask_server.py -p 8888</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install -r requirements.txt  -i https://pypi.tuna.tsinghua.edu.cn/simple   </span><br></pre></td></tr></table></figure><p>tensorflow版本未限制 可能会异常 要加一下限制  完整的txt版本</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tensorflow==1.6.0</span><br><span class="line">flask&gt;=0.12.3</span><br><span class="line">gevent&gt;=1.2.2</span><br><span class="line">Flask-Caching&gt;=1.3.3</span><br><span class="line">gevent-websocket&gt;=0.10.1</span><br><span class="line">futures&gt;=3.1.1</span><br><span class="line">tensorflow&gt;=1.6.0</span><br><span class="line">pillow&gt;=4.3.0</span><br><span class="line">opencv-python&gt;=3.3.0.10</span><br><span class="line">numpy==1.14.1</span><br><span class="line">grpcio&gt;=1.14.2</span><br><span class="line">grpcio_tools&gt;=1.14.2</span><br><span class="line">requests&gt;=2.18.4</span><br><span class="line">pyyaml&gt;=3.13</span><br><span class="line">tornado&gt;=5.1.1</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="ai" scheme="https://guochen2.github.io/categories/ai/"/>
    
    
      <category term="ai" scheme="https://guochen2.github.io/tags/ai/"/>
    
      <category term="cnn" scheme="https://guochen2.github.io/tags/cnn/"/>
    
      <category term="验证码" scheme="https://guochen2.github.io/tags/%E9%AA%8C%E8%AF%81%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>vscode远程ssh服务器</title>
    <link href="https://guochen2.github.io/2020/06/19/other/vscode+Remotessh/"/>
    <id>https://guochen2.github.io/2020/06/19/other/vscode+Remotessh/</id>
    <published>2020-06-19T08:50:29.000Z</published>
    <updated>2020-11-23T13:46:49.721Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="使用vscode插件Remote-ssh-远程ssh服务器进行便捷开发"><a href="#使用vscode插件Remote-ssh-远程ssh服务器进行便捷开发" class="headerlink" title="使用vscode插件Remote ssh 远程ssh服务器进行便捷开发"></a>使用vscode插件Remote ssh 远程ssh服务器进行便捷开发</h2><h4 id="vscode-安装remote-ssh插件"><a href="#vscode-安装remote-ssh插件" class="headerlink" title="vscode 安装remote ssh插件"></a>vscode 安装remote ssh插件</h4><p><img src="/2020/06/19/other/vscode+Remotessh/TIM%E6%88%AA%E5%9B%BE20200619165803.jpg" alt="a"></p><h4 id="生成公私钥用于免密登录"><a href="#生成公私钥用于免密登录" class="headerlink" title="生成公私钥用于免密登录"></a>生成公私钥用于免密登录</h4><p>cmd执行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096</span><br></pre></td></tr></table></figure><p>输入密钥名称<br>直接回车输入空密码 生成密钥对<br><img src="/2020/06/19/other/vscode+Remotessh/TIM%E6%88%AA%E5%9B%BE20200619165631.jpg" alt="a"></p><h4 id="服务端设置"><a href="#服务端设置" class="headerlink" title="服务端设置"></a>服务端设置</h4><ul><li>上传公钥至服务器 /root/.ssh 目录下<br>公钥是.pub后缀文件<br><img src="/2020/06/19/other/vscode+Remotessh/TIM%E6%88%AA%E5%9B%BE20200619170004.jpg" alt="a"></li><li>设置sshd文件<br>vim /etc/ssh/sshd_config<br><img src="/2020/06/19/other/vscode+Remotessh/TIM%E6%88%AA%E5%9B%BE20200619170215.jpg" alt="a"></li><li>重启ssh服务<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service ssh restart</span><br></pre></td></tr></table></figure></li><li>客户端测试是否可用私钥登录<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -i 私钥文件路径 -p 端口 用户名@host</span><br></pre></td></tr></table></figure><h4 id="客户端设置"><a href="#客户端设置" class="headerlink" title="客户端设置"></a>客户端设置</h4></li><li>打开remotessh配置文件</li></ul><p><img src="/2020/06/19/other/vscode+Remotessh/TIM%E6%88%AA%E5%9B%BE20200619170614.jpg" alt="a"><br><img src="/2020/06/19/other/vscode+Remotessh/TIM%E6%88%AA%E5%9B%BE20200619170631.jpg" alt="a"><br><img src="/2020/06/19/other/vscode+Remotessh/TIM%E6%88%AA%E5%9B%BE20200619170647.jpg" alt="a"></p><ul><li>添加远程服务配置</li></ul><p>Host 名称随意设置<br>  HostName 远程的host地址<br>  User 登录用户名<br>  Port 端口<br>  IdentityFile “私钥全路径”<br>示例</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Host berttrainserver</span><br><span class="line">  HostName 8.8.8.8</span><br><span class="line">  User root</span><br><span class="line">  Port 10011</span><br><span class="line">  IdentityFile &quot;C:\Users\GUO\.ssh\GUO&quot;</span><br></pre></td></tr></table></figure><h4 id="开始连接"><a href="#开始连接" class="headerlink" title="开始连接"></a>开始连接</h4><ul><li>选择需要远程的对象<br><img src="/2020/06/19/other/vscode+Remotessh/TIM%E6%88%AA%E5%9B%BE20200619171103.jpg" alt="a"></li><li>右键开始打开连接<br><img src="/2020/06/19/other/vscode+Remotessh/TIM%E6%88%AA%E5%9B%BE20200619171118.jpg" alt="a"></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="工具" scheme="https://guochen2.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="vscode" scheme="https://guochen2.github.io/tags/vscode/"/>
    
      <category term="ssh" scheme="https://guochen2.github.io/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>创建ca证书</title>
    <link href="https://guochen2.github.io/2020/04/13/linux/%E5%88%9B%E5%BB%BAca%E8%AF%81%E4%B9%A6/"/>
    <id>https://guochen2.github.io/2020/04/13/linux/%E5%88%9B%E5%BB%BAca%E8%AF%81%E4%B9%A6/</id>
    <published>2020-04-13T13:21:40.000Z</published>
    <updated>2020-11-23T13:46:49.664Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="创建sh文件"><a href="#创建sh文件" class="headerlink" title="创建sh文件"></a>创建sh文件</h3><p>内容如下</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash -e</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># * 为必改项</span></span><br><span class="line"><span class="comment"># * 更换为你自己的域名</span></span><br><span class="line">CN=<span class="string">&#x27;&#x27;</span> <span class="comment"># 例如: demo.rancher.com</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 扩展信任IP或域名</span></span><br><span class="line"><span class="comment">## 一般ssl证书只信任域名的访问请求，有时候需要使用ip去访问server，那么需要给ssl证书添加扩展IP，</span></span><br><span class="line"><span class="comment">## 多个IP用逗号隔开。如果想多个域名访问，则添加扩展域名（SSL_DNS）,多个SSL_DNS用逗号隔开</span></span><br><span class="line">SSL_IP=<span class="string">&#x27;&#x27;</span> <span class="comment"># 例如: 1.2.3.4</span></span><br><span class="line">SSL_DNS=<span class="string">&#x27;&#x27;</span> <span class="comment"># 例如: demo.rancher.com</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 国家名(2个字母的代号)</span></span><br><span class="line">C=CN</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 证书加密位数</span></span><br><span class="line">SSL_SIZE=2048</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 证书有效期</span></span><br><span class="line">DATE=<span class="variable">$&#123;DATE:-3650&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置文件</span></span><br><span class="line">SSL_CONFIG=<span class="string">&#x27;openssl.cnf&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ -z <span class="variable">$SILENT</span> ]]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;----------------------------&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;| SSL Cert Generator |&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;----------------------------&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> CA_KEY=<span class="variable">$&#123;CA_KEY-&quot;cakey.pem&quot;&#125;</span></span><br><span class="line"><span class="built_in">export</span> CA_CERT=<span class="variable">$&#123;CA_CERT-&quot;cacerts.pem&quot;&#125;</span></span><br><span class="line"><span class="built_in">export</span> CA_SUBJECT=ca-<span class="variable">$CN</span></span><br><span class="line"><span class="built_in">export</span> CA_EXPIRE=<span class="variable">$&#123;DATE&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> SSL_CONFIG=<span class="variable">$&#123;SSL_CONFIG&#125;</span></span><br><span class="line"><span class="built_in">export</span> SSL_KEY=<span class="variable">$CN</span>.key</span><br><span class="line"><span class="built_in">export</span> SSL_CSR=<span class="variable">$CN</span>.csr</span><br><span class="line"><span class="built_in">export</span> SSL_CERT=<span class="variable">$CN</span>.crt</span><br><span class="line"><span class="built_in">export</span> SSL_EXPIRE=<span class="variable">$&#123;DATE&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> SSL_SUBJECT=<span class="variable">$&#123;CN&#125;</span></span><br><span class="line"><span class="built_in">export</span> SSL_DNS=<span class="variable">$&#123;SSL_DNS&#125;</span></span><br><span class="line"><span class="built_in">export</span> SSL_IP=<span class="variable">$&#123;SSL_IP&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> K8S_SECRET_COMBINE_CA=<span class="variable">$&#123;K8S_SECRET_COMBINE_CA:-&#x27;true&#x27;&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[[ -z <span class="variable">$SILENT</span> ]] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;--&gt; Certificate Authority&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ -e ./<span class="variable">$&#123;CA_KEY&#125;</span> ]]; <span class="keyword">then</span></span><br><span class="line">    [[ -z <span class="variable">$SILENT</span> ]] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;====&gt; Using existing CA Key <span class="variable">$&#123;CA_KEY&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    [[ -z <span class="variable">$SILENT</span> ]] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;====&gt; Generating new CA key <span class="variable">$&#123;CA_KEY&#125;</span>&quot;</span></span><br><span class="line">    openssl genrsa -out <span class="variable">$&#123;CA_KEY&#125;</span> <span class="variable">$&#123;SSL_SIZE&#125;</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ -e ./<span class="variable">$&#123;CA_CERT&#125;</span> ]]; <span class="keyword">then</span></span><br><span class="line">    [[ -z <span class="variable">$SILENT</span> ]] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;====&gt; Using existing CA Certificate <span class="variable">$&#123;CA_CERT&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    [[ -z <span class="variable">$SILENT</span> ]] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;====&gt; Generating new CA Certificate <span class="variable">$&#123;CA_CERT&#125;</span>&quot;</span></span><br><span class="line">    openssl req -x509 -sha256 -new -nodes -key <span class="variable">$&#123;CA_KEY&#125;</span> \</span><br><span class="line">    -days <span class="variable">$&#123;CA_EXPIRE&#125;</span> -out <span class="variable">$&#123;CA_CERT&#125;</span> -subj <span class="string">&quot;/CN=<span class="variable">$&#123;CA_SUBJECT&#125;</span>&quot;</span> &gt; /dev/null || <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;====&gt; Generating new config file <span class="variable">$&#123;SSL_CONFIG&#125;</span>&quot;</span></span><br><span class="line">cat &gt; <span class="variable">$&#123;SSL_CONFIG&#125;</span> &lt;&lt;<span class="string">EOM</span></span><br><span class="line"><span class="string">[req]</span></span><br><span class="line"><span class="string">req_extensions = v3_req</span></span><br><span class="line"><span class="string">distinguished_name = req_distinguished_name</span></span><br><span class="line"><span class="string">[req_distinguished_name]</span></span><br><span class="line"><span class="string">[ v3_req ]</span></span><br><span class="line"><span class="string">basicConstraints = CA:FALSE</span></span><br><span class="line"><span class="string">keyUsage = nonRepudiation, digitalSignature, keyEncipherment</span></span><br><span class="line"><span class="string">extendedKeyUsage = clientAuth, serverAuth</span></span><br><span class="line"><span class="string">EOM</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ -n <span class="variable">$&#123;SSL_DNS&#125;</span> || -n <span class="variable">$&#123;SSL_IP&#125;</span> ]]; <span class="keyword">then</span></span><br><span class="line">    cat &gt;&gt; <span class="variable">$&#123;SSL_CONFIG&#125;</span> &lt;&lt;<span class="string">EOM</span></span><br><span class="line"><span class="string">subjectAltName = @alt_names</span></span><br><span class="line"><span class="string">[alt_names]</span></span><br><span class="line"><span class="string">EOM</span></span><br><span class="line">    IFS=<span class="string">&quot;,&quot;</span></span><br><span class="line">    dns=(<span class="variable">$&#123;SSL_DNS&#125;</span>)</span><br><span class="line">    dns+=(<span class="variable">$&#123;SSL_SUBJECT&#125;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;!dns[@]&#125;</span>&quot;</span>; <span class="keyword">do</span></span><br><span class="line">      <span class="built_in">echo</span> DNS.$((i+<span class="number">1</span>)) = <span class="variable">$&#123;dns[$i]&#125;</span> &gt;&gt; <span class="variable">$&#123;SSL_CONFIG&#125;</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [[ -n <span class="variable">$&#123;SSL_IP&#125;</span> ]]; <span class="keyword">then</span></span><br><span class="line">        ip=(<span class="variable">$&#123;SSL_IP&#125;</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;!ip[@]&#125;</span>&quot;</span>; <span class="keyword">do</span></span><br><span class="line">          <span class="built_in">echo</span> IP.$((i+<span class="number">1</span>)) = <span class="variable">$&#123;ip[$i]&#125;</span> &gt;&gt; <span class="variable">$&#123;SSL_CONFIG&#125;</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[[ -z <span class="variable">$SILENT</span> ]] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;====&gt; Generating new SSL KEY <span class="variable">$&#123;SSL_KEY&#125;</span>&quot;</span></span><br><span class="line">openssl genrsa -out <span class="variable">$&#123;SSL_KEY&#125;</span> <span class="variable">$&#123;SSL_SIZE&#125;</span> &gt; /dev/null || <span class="built_in">exit</span> 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[[ -z <span class="variable">$SILENT</span> ]] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;====&gt; Generating new SSL CSR <span class="variable">$&#123;SSL_CSR&#125;</span>&quot;</span></span><br><span class="line">openssl req -sha256 -new -key <span class="variable">$&#123;SSL_KEY&#125;</span> -out <span class="variable">$&#123;SSL_CSR&#125;</span> \</span><br><span class="line">-subj <span class="string">&quot;/CN=<span class="variable">$&#123;SSL_SUBJECT&#125;</span>&quot;</span> -config <span class="variable">$&#123;SSL_CONFIG&#125;</span> &gt; /dev/null || <span class="built_in">exit</span> 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[[ -z <span class="variable">$SILENT</span> ]] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;====&gt; Generating new SSL CERT <span class="variable">$&#123;SSL_CERT&#125;</span>&quot;</span></span><br><span class="line">openssl x509 -sha256 -req -<span class="keyword">in</span> <span class="variable">$&#123;SSL_CSR&#125;</span> -CA <span class="variable">$&#123;CA_CERT&#125;</span> \</span><br><span class="line">    -CAkey <span class="variable">$&#123;CA_KEY&#125;</span> -CAcreateserial -out <span class="variable">$&#123;SSL_CERT&#125;</span> \</span><br><span class="line">    -days <span class="variable">$&#123;SSL_EXPIRE&#125;</span> -extensions v3_req \</span><br><span class="line">    -extfile <span class="variable">$&#123;SSL_CONFIG&#125;</span> &gt; /dev/null || <span class="built_in">exit</span> 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ -z <span class="variable">$SILENT</span> ]]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;====&gt; Complete&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;keys can be found in volume mapped to <span class="subst">$(pwd)</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;====&gt; Output results as YAML&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;---&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ca_key: |&quot;</span></span><br><span class="line">cat <span class="variable">$CA_KEY</span> | sed <span class="string">&#x27;s/^/  /&#x27;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ca_cert: |&quot;</span></span><br><span class="line">cat <span class="variable">$CA_CERT</span> | sed <span class="string">&#x27;s/^/  /&#x27;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ssl_key: |&quot;</span></span><br><span class="line">cat <span class="variable">$SSL_KEY</span> | sed <span class="string">&#x27;s/^/  /&#x27;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ssl_csr: |&quot;</span></span><br><span class="line">cat <span class="variable">$SSL_CSR</span> | sed <span class="string">&#x27;s/^/  /&#x27;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ssl_cert: |&quot;</span></span><br><span class="line">cat <span class="variable">$SSL_CERT</span> | sed <span class="string">&#x27;s/^/  /&#x27;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ -n <span class="variable">$K8S_SECRET_NAME</span> ]]; <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> [[ -n <span class="variable">$K8S_SECRET_COMBINE_CA</span> ]]; <span class="keyword">then</span></span><br><span class="line">    [[ -z <span class="variable">$SILENT</span> ]] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;====&gt; Adding CA to Cert file&quot;</span></span><br><span class="line">    cat <span class="variable">$&#123;CA_CERT&#125;</span> &gt;&gt; <span class="variable">$&#123;SSL_CERT&#125;</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  [[ -z <span class="variable">$SILENT</span> ]] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;====&gt; Creating Kubernetes secret: <span class="variable">$K8S_SECRET_NAME</span>&quot;</span></span><br><span class="line">  kubectl delete secret <span class="variable">$K8S_SECRET_NAME</span> --ignore-not-found</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> [[ -n <span class="variable">$K8S_SECRET_SEPARATE_CA</span> ]]; <span class="keyword">then</span></span><br><span class="line">    kubectl create secret generic \</span><br><span class="line">    <span class="variable">$K8S_SECRET_NAME</span> \</span><br><span class="line">    --from-file=<span class="string">&quot;tls.crt=<span class="variable">$&#123;SSL_CERT&#125;</span>&quot;</span> \</span><br><span class="line">    --from-file=<span class="string">&quot;tls.key=<span class="variable">$&#123;SSL_KEY&#125;</span>&quot;</span> \</span><br><span class="line">    --from-file=<span class="string">&quot;ca.crt=<span class="variable">$&#123;CA_CERT&#125;</span>&quot;</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    kubectl create secret tls \</span><br><span class="line">    <span class="variable">$K8S_SECRET_NAME</span> \</span><br><span class="line">    --cert=<span class="variable">$&#123;SSL_CERT&#125;</span> \</span><br><span class="line">    --key=<span class="variable">$&#123;SSL_KEY&#125;</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> [[ -n <span class="variable">$K8S_SECRET_LABELS</span> ]]; <span class="keyword">then</span></span><br><span class="line">    [[ -z <span class="variable">$SILENT</span> ]] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;====&gt; Labeling Kubernetes secret&quot;</span></span><br><span class="line">    IFS=$<span class="string">&#x27; \n\t&#x27;</span> <span class="comment"># We have to reset IFS or label secret will misbehave on some systems</span></span><br><span class="line">    kubectl label secret \</span><br><span class="line">      <span class="variable">$K8S_SECRET_NAME</span> \</span><br><span class="line">      <span class="variable">$K8S_SECRET_LABELS</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;4. 重命名服务证书&quot;</span></span><br><span class="line">mv <span class="variable">$&#123;CN&#125;</span>.key tls.key</span><br><span class="line">mv <span class="variable">$&#123;CN&#125;</span>.crt tls.crt</span><br></pre></td></tr></table></figure><p><strong>修改代码开头的CN(域名)，如果需要使用ip去访问rancher server，那么需要给ssl证书添加扩展IP，多个IP用逗号隔开。如果想实现多个域名访问rancher server，则添加扩展域名(SSL_DNS),多个SSL_DNS用逗号隔开。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="linux" scheme="https://guochen2.github.io/categories/linux/"/>
    
    
      <category term="ca" scheme="https://guochen2.github.io/tags/ca/"/>
    
  </entry>
  
  <entry>
    <title>部署docker私有仓库harbor</title>
    <link href="https://guochen2.github.io/2020/04/13/docker/%E9%83%A8%E7%BD%B2docker%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93harbor/"/>
    <id>https://guochen2.github.io/2020/04/13/docker/%E9%83%A8%E7%BD%B2docker%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93harbor/</id>
    <published>2020-04-13T13:12:04.000Z</published>
    <updated>2020-11-23T13:46:49.628Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="系统要求"><a href="#系统要求" class="headerlink" title="系统要求"></a>系统要求</h3><p>ubuntu 16.04及其以上<br>centos 7.0 及其以上<br>suse 13及其以上</p><p>官网 <a href="https://goharbor.io/">https://goharbor.io/</a></p><h3 id="安装-以下已ubuntu为例"><a href="#安装-以下已ubuntu为例" class="headerlink" title="安装 以下已ubuntu为例"></a>安装 以下已ubuntu为例</h3><h4 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt install docker.io</span><br></pre></td></tr></table></figure><h4 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装docker-compose</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -L https://github.com/docker/compose/releases/download/1.25.4/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose</span><br><span class="line">chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p><a href="https://github.com/docker/compose/releases">https://github.com/docker/compose/releases</a></p><h4 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h4><p><a href="https://github.com/goharbor/harbor/releases">https://github.com/goharbor/harbor/releases</a><br>解压</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -xvf harbor-offline-installer-v1.2.2.tgz</span><br></pre></td></tr></table></figure><p>修改 harbor.yml<br>这里的hostname 一定要是用户端能访问到的 否则docker login会失败<br>运行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./install.sh</span><br></pre></td></tr></table></figure><p>访问 <a href="http://127.0.0.1:8080/">http://127.0.0.1:8080/</a> 密码在配置文件里 用户名admin<br><img src="/2020/04/13/docker/%E9%83%A8%E7%BD%B2docker%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93harbor/TIM%E6%88%AA%E5%9B%BE20200413213049.jpg" alt="a"><br><img src="/2020/04/13/docker/%E9%83%A8%E7%BD%B2docker%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93harbor/TIM%E6%88%AA%E5%9B%BE20200413213137.jpg" alt="a"></p><h4 id="停止harbor"><a href="#停止harbor" class="headerlink" title="停止harbor"></a>停止harbor</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker-compose stop</span><br></pre></td></tr></table></figure><h4 id="删除harbor"><a href="#删除harbor" class="headerlink" title="删除harbor"></a>删除harbor</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker-compose down </span><br></pre></td></tr></table></figure><h4 id="可选-创建ca证书"><a href="#可选-创建ca证书" class="headerlink" title="可选 创建ca证书"></a>可选 <a href="../../linux/创建ca证书/">创建ca证书</a></h4><h3 id="可能出现问题"><a href="#可能出现问题" class="headerlink" title="可能出现问题"></a>可能出现问题</h3><h5 id="登录镜像仓库时提示Http-server-gave-HTTP-response-to-HTTPS-client-解决方法"><a href="#登录镜像仓库时提示Http-server-gave-HTTP-response-to-HTTPS-client-解决方法" class="headerlink" title="登录镜像仓库时提示Http: server gave HTTP response to HTTPS client 解决方法"></a>登录镜像仓库时提示Http: server gave HTTP response to HTTPS client 解决方法</h5><p>原因是使用的http</p><p>在docker用户端</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123; <span class="attr">&quot;insecure-registries&quot;</span>: [<span class="string">&quot;registry的IP地址:端口号&quot;</span>] &#125; <span class="comment">// 多个私服的写法 &#123; &quot;insecure-registries&quot;: [&quot;registry1的IP地址:端口号&quot;,&quot;registry2的IP地址:端口号&quot;] &#125;</span></span><br></pre></td></tr></table></figure><p>重启docker</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server docker restart</span><br></pre></td></tr></table></figure><h4 id="certificate-signed-by-unknown-authority-处理方式同上-证书不被信任-需要信任一下"><a href="#certificate-signed-by-unknown-authority-处理方式同上-证书不被信任-需要信任一下" class="headerlink" title="certificate signed by unknown authority 处理方式同上 证书不被信任 需要信任一下"></a>certificate signed by unknown authority 处理方式同上 证书不被信任 需要信任一下</h4><h5 id="若因为服务器重启或docker导致访问时出现502异常，可能需要重新执行安装程序-之前的数据不会丢失"><a href="#若因为服务器重启或docker导致访问时出现502异常，可能需要重新执行安装程序-之前的数据不会丢失" class="headerlink" title="若因为服务器重启或docker导致访问时出现502异常，可能需要重新执行安装程序 之前的数据不会丢失"></a>若因为服务器重启或docker导致访问时出现502异常，可能需要重新执行安装程序 之前的数据不会丢失</h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="docker" scheme="https://guochen2.github.io/categories/docker/"/>
    
    
      <category term="仓库" scheme="https://guochen2.github.io/tags/%E4%BB%93%E5%BA%93/"/>
    
      <category term="harbor" scheme="https://guochen2.github.io/tags/harbor/"/>
    
  </entry>
  
  <entry>
    <title>netcore集成consul配置中心</title>
    <link href="https://guochen2.github.io/2020/04/13/netcore/netcore%E9%9B%86%E6%88%90consul%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/"/>
    <id>https://guochen2.github.io/2020/04/13/netcore/netcore%E9%9B%86%E6%88%90consul%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/</id>
    <published>2020-04-13T12:19:05.000Z</published>
    <updated>2020-11-23T13:46:49.676Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="引用nuget包"><a href="#引用nuget包" class="headerlink" title="引用nuget包"></a>引用nuget包</h3><p>winton.extensions.configuration.consul</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="控制台程序"><a href="#控制台程序" class="headerlink" title="控制台程序"></a>控制台程序</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> var configbuild = new ConfigurationBuilder()</span><br><span class="line">              .SetBasePath(Directory.GetCurrentDirectory())</span><br><span class="line">              .AddJsonFile(&quot;appsettings.json&quot;, optional: true);</span><br><span class="line">string consuleurl=&quot;http://127.0.0.1:8500&quot;;</span><br><span class="line"> var cancellationTokenSource = new CancellationTokenSource();</span><br><span class="line">                configbuild.AddConsul($&quot;&#123;PlatformServices.Default.Application.ApplicationName&#125;/appsettings.json&quot;,</span><br><span class="line">                                    cancellationTokenSource.Token,</span><br><span class="line">                                    options =&gt;</span><br><span class="line">                                    &#123;</span><br><span class="line">                                        options.Optional = true;</span><br><span class="line">                                        options.ReloadOnChange = true;</span><br><span class="line">                                        options.OnLoadException = exceptionContext =&gt; &#123; exceptionContext.Ignore = true; &#125;;</span><br><span class="line">                                        options.ConsulConfigurationOptions = cco =&gt; &#123; cco.Address = new Uri(consuleurl); &#125;;//若不设置 默认http://127.0.0.1:8500</span><br><span class="line">                                    &#125;);</span><br><span class="line"> IConfiguration config = configbuild.Build();</span><br></pre></td></tr></table></figure><h4 id="asp-net-core"><a href="#asp-net-core" class="headerlink" title="asp.net core"></a>asp.net core</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public static void Main(string[] args)</span><br><span class="line">        &#123;</span><br><span class="line">            CreateWebHostBuilder(args).Build().Run();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        public static IWebHostBuilder CreateWebHostBuilder(string[] args)</span><br><span class="line">        &#123;</span><br><span class="line">            var cancellationTokenSource = new CancellationTokenSource();</span><br><span class="line">            return WebHost.CreateDefaultBuilder(args)</span><br><span class="line">                .ConfigureAppConfiguration((hostingContext, config) =&gt;</span><br><span class="line">                &#123;</span><br><span class="line">                    var env = hostingContext.HostingEnvironment;</span><br><span class="line">                    hostingContext.Configuration = config.Build();</span><br><span class="line">                    string consul_url = hostingContext.Configuration[&quot;Consul_Url&quot;];</span><br><span class="line">                    config.AddConsul(</span><br><span class="line">                                $&quot;&#123;env.ApplicationName&#125;/appsettings.&#123;env.EnvironmentName&#125;.json&quot;,</span><br><span class="line">                                cancellationTokenSource.Token,</span><br><span class="line">                                options =&gt;</span><br><span class="line">                                &#123;</span><br><span class="line">                                    options.Optional = true;</span><br><span class="line">                                    options.ReloadOnChange = true;</span><br><span class="line">                                    options.OnLoadException = exceptionContext =&gt; &#123; exceptionContext.Ignore = true; &#125;;</span><br><span class="line">                                    options.ConsulConfigurationOptions = cco =&gt; &#123; cco.Address = new Uri(consul_url); &#125;;</span><br><span class="line">                                &#125;</span><br><span class="line">                                ).AddEnvironmentVariables();</span><br><span class="line"> </span><br><span class="line">                    hostingContext.Configuration = config.Build();</span><br><span class="line">                &#125;).UseUrls(&quot;http://localhost:5012&quot;)</span><br><span class="line">                 .UseStartup&lt;Startup&gt;();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="consul配置"><a href="#consul配置" class="headerlink" title="consul配置"></a>consul配置</h3><p>配置同物理json文件一致<br><img src="/2020/04/13/netcore/netcore%E9%9B%86%E6%88%90consul%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/TIM%E6%88%AA%E5%9B%BE20200413203910.jpg" alt="a"><br><img src="/2020/04/13/netcore/netcore%E9%9B%86%E6%88%90consul%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/TIM%E6%88%AA%E5%9B%BE20200413203930.jpg" alt="a"></p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>使用方式同IConfiguration，consul配置更改会自动更新IConfiguration里的数据</p><h4 id="配置里获取实体类"><a href="#配置里获取实体类" class="headerlink" title="配置里获取实体类"></a>配置里获取实体类</h4><p>nuget引用Microsoft.Extensions.Configuration.Binder</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">config.GetSection(&quot;FileCleanup:Config&quot;).Get&amp;lt; T &amp;gt;();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="c#" scheme="https://guochen2.github.io/categories/c/"/>
    
    
      <category term="consul" scheme="https://guochen2.github.io/tags/consul/"/>
    
      <category term="netcore" scheme="https://guochen2.github.io/tags/netcore/"/>
    
  </entry>
  
  <entry>
    <title>consul集群与多数据中心</title>
    <link href="https://guochen2.github.io/2020/02/17/consul/consul%E9%9B%86%E7%BE%A4%E4%B8%8E%E5%A4%9A%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/"/>
    <id>https://guochen2.github.io/2020/02/17/consul/consul%E9%9B%86%E7%BE%A4%E4%B8%8E%E5%A4%9A%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/</id>
    <published>2020-02-17T09:48:26.000Z</published>
    <updated>2020-11-23T13:46:49.621Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="集群"><a href="#集群" class="headerlink" title="集群"></a>集群</h3><h4 id="下载consul包"><a href="#下载consul包" class="headerlink" title="下载consul包"></a>下载consul包</h4><p><a href="https://www.consul.io/downloads.html">https://www.consul.io/downloads.html</a><br>测试consul版本1.5.3</p><h5 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h5><p>自定义端口-可用于单机测试 生产环境不建议修改端口 集群开3-5个</p><h6 id="配置1"><a href="#配置1" class="headerlink" title="配置1"></a>配置1</h6><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;datacenter&quot;</span>: <span class="string">&quot;us-east-1&quot;</span>, <span class="comment">//数据中心名称 同一集群名称需相同</span></span><br><span class="line">    <span class="attr">&quot;data_dir&quot;</span>: <span class="string">&quot;./data1/&quot;</span>,</span><br><span class="line"><span class="attr">&quot;node_name&quot;</span>: <span class="string">&quot;dc1&quot;</span>,<span class="comment">//节点名称  相同集群名称不能冲突</span></span><br><span class="line"><span class="attr">&quot;bootstrap_expect&quot;</span>: <span class="number">2</span>,</span><br><span class="line"><span class="attr">&quot;bind_addr&quot;</span>: <span class="string">&quot;0.0.0.0&quot;</span>,</span><br><span class="line"><span class="attr">&quot;retry_join&quot;</span>:[<span class="string">&quot;127.0.0.1:9301&quot;</span>],<span class="comment">//启动自动加入节点</span></span><br><span class="line"><span class="attr">&quot;retry_interval&quot;</span>: <span class="string">&quot;10s&quot;</span>,</span><br><span class="line"><span class="attr">&quot;retry_max&quot;</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">&quot;server&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;addresses&quot;</span>: &#123; </span><br><span class="line">        <span class="attr">&quot;http&quot;</span>: <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="attr">&quot;client_addr&quot;</span>:<span class="string">&quot;0.0.0.0&quot;</span>,</span><br><span class="line"><span class="attr">&quot;ui&quot;</span>:<span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;ports&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;http&quot;</span>: <span class="number">9500</span>,</span><br><span class="line"><span class="attr">&quot;gRPC&quot;</span>: <span class="number">9502</span>,</span><br><span class="line"><span class="attr">&quot;DNS&quot;</span>: <span class="number">9600</span>,</span><br><span class="line"><span class="attr">&quot;server&quot;</span>: <span class="number">9300</span> ,</span><br><span class="line"><span class="attr">&quot;serf_lan&quot;</span>: <span class="number">9301</span>,</span><br><span class="line"><span class="attr">&quot;serf_wan&quot;</span>: <span class="number">9302</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="attr">&quot;acl&quot;</span> : &#123;</span><br><span class="line">        <span class="attr">&quot;enabled&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">&quot;default_policy&quot;</span>: <span class="string">&quot;deny&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;down_policy&quot;</span>: <span class="string">&quot;extend-cache&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;tokens&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;master&quot;</span> : <span class="string">&quot;b1gs33cr3t&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="配置2"><a href="#配置2" class="headerlink" title="配置2"></a>配置2</h6><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;datacenter&quot;</span>: <span class="string">&quot;us-east-1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;data_dir&quot;</span>: <span class="string">&quot;./data2/&quot;</span>,</span><br><span class="line"><span class="attr">&quot;node_name&quot;</span>: <span class="string">&quot;dc2&quot;</span>,</span><br><span class="line"><span class="attr">&quot;bootstrap_expect&quot;</span>: <span class="number">2</span>,</span><br><span class="line"><span class="attr">&quot;bind_addr&quot;</span>: <span class="string">&quot;0.0.0.0&quot;</span>,</span><br><span class="line"><span class="attr">&quot;retry_join&quot;</span>:[<span class="string">&quot;127.0.0.1:9301&quot;</span>],</span><br><span class="line"><span class="attr">&quot;retry_interval&quot;</span>: <span class="string">&quot;10s&quot;</span>,</span><br><span class="line"><span class="attr">&quot;retry_max&quot;</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">&quot;server&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;addresses&quot;</span>: &#123; </span><br><span class="line">        <span class="attr">&quot;http&quot;</span>: <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="attr">&quot;client_addr&quot;</span>:<span class="string">&quot;0.0.0.0&quot;</span>,</span><br><span class="line"><span class="attr">&quot;ui&quot;</span>:<span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;ports&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;http&quot;</span>: <span class="number">10500</span>,</span><br><span class="line"><span class="attr">&quot;gRPC&quot;</span>: <span class="number">10502</span>,</span><br><span class="line"><span class="attr">&quot;DNS&quot;</span>: <span class="number">10600</span>,</span><br><span class="line"><span class="attr">&quot;server&quot;</span>: <span class="number">10300</span> ,</span><br><span class="line"><span class="attr">&quot;serf_lan&quot;</span>: <span class="number">10301</span>,</span><br><span class="line"><span class="attr">&quot;serf_wan&quot;</span>: <span class="number">10302</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="attr">&quot;acl&quot;</span> : &#123;</span><br><span class="line">        <span class="attr">&quot;enabled&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">&quot;default_policy&quot;</span>: <span class="string">&quot;deny&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;down_policy&quot;</span>: <span class="string">&quot;extend-cache&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;tokens&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;master&quot;</span> : <span class="string">&quot;b1gs33cr3t&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="配置3"><a href="#配置3" class="headerlink" title="配置3"></a>配置3</h6><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;datacenter&quot;</span>: <span class="string">&quot;us-east-1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;data_dir&quot;</span>: <span class="string">&quot;./data3/&quot;</span>,</span><br><span class="line"><span class="attr">&quot;node_name&quot;</span>: <span class="string">&quot;dc3&quot;</span>,</span><br><span class="line"><span class="attr">&quot;bootstrap_expect&quot;</span>: <span class="number">2</span>,</span><br><span class="line"><span class="attr">&quot;bind_addr&quot;</span>: <span class="string">&quot;0.0.0.0&quot;</span>,</span><br><span class="line"><span class="attr">&quot;retry_join&quot;</span>:[<span class="string">&quot;127.0.0.1:9301&quot;</span>],</span><br><span class="line"><span class="attr">&quot;retry_interval&quot;</span>: <span class="string">&quot;10s&quot;</span>,</span><br><span class="line"><span class="attr">&quot;retry_max&quot;</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">&quot;server&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;addresses&quot;</span>: &#123; </span><br><span class="line">        <span class="attr">&quot;http&quot;</span>: <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="attr">&quot;client_addr&quot;</span>:<span class="string">&quot;0.0.0.0&quot;</span>,</span><br><span class="line"><span class="attr">&quot;ui&quot;</span>:<span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;ports&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;http&quot;</span>: <span class="number">11500</span>,</span><br><span class="line"><span class="attr">&quot;gRPC&quot;</span>: <span class="number">11502</span>,</span><br><span class="line"><span class="attr">&quot;DNS&quot;</span>: <span class="number">11600</span>,</span><br><span class="line"><span class="attr">&quot;server&quot;</span>: <span class="number">11300</span> ,</span><br><span class="line"><span class="attr">&quot;serf_lan&quot;</span>: <span class="number">11301</span>,</span><br><span class="line"><span class="attr">&quot;serf_wan&quot;</span>: <span class="number">11302</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="attr">&quot;acl&quot;</span> : &#123;</span><br><span class="line">        <span class="attr">&quot;enabled&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">&quot;default_policy&quot;</span>: <span class="string">&quot;deny&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;down_policy&quot;</span>: <span class="string">&quot;extend-cache&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;tokens&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;master&quot;</span> : <span class="string">&quot;b1gs33cr3t&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">consul agent -config-file=consul1.json</span><br></pre></td></tr></table></figure><p>访问地址 <a href="http://127.0.0.1:9500">http://127.0.0.1:9500</a><br><img src="/2020/02/17/consul/consul%E9%9B%86%E7%BE%A4%E4%B8%8E%E5%A4%9A%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/TIM%E6%88%AA%E5%9B%BE20200219135404.png" alt="a"></p><h3 id="多数据中心"><a href="#多数据中心" class="headerlink" title="多数据中心"></a>多数据中心</h3><h6 id="配置1-1"><a href="#配置1-1" class="headerlink" title="配置1"></a>配置1</h6><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;datacenter&quot;</span>: <span class="string">&quot;china&quot;</span>,<span class="comment">//数据中心名称</span></span><br><span class="line">    <span class="attr">&quot;data_dir&quot;</span>: <span class="string">&quot;./data5/&quot;</span>,</span><br><span class="line"><span class="attr">&quot;node_name&quot;</span>: <span class="string">&quot;chinadc1&quot;</span>,<span class="comment">//节点名字</span></span><br><span class="line"><span class="attr">&quot;bootstrap_expect&quot;</span>: <span class="number">2</span>,</span><br><span class="line"><span class="attr">&quot;bind_addr&quot;</span>: <span class="string">&quot;0.0.0.0&quot;</span>,</span><br><span class="line"><span class="attr">&quot;retry_join&quot;</span>:[<span class="string">&quot;127.0.0.1:12301&quot;</span>],<span class="comment">//集群自动加入</span></span><br><span class="line"><span class="attr">&quot;retry_join_wan&quot;</span>:[<span class="string">&quot;127.0.0.1:9302&quot;</span>],<span class="comment">//数据中心自动加入</span></span><br><span class="line"><span class="attr">&quot;retry_interval&quot;</span>: <span class="string">&quot;10s&quot;</span>,</span><br><span class="line"><span class="attr">&quot;retry_max&quot;</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">&quot;server&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;addresses&quot;</span>: &#123; </span><br><span class="line">        <span class="attr">&quot;http&quot;</span>: <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="attr">&quot;client_addr&quot;</span>:<span class="string">&quot;0.0.0.0&quot;</span>,</span><br><span class="line"><span class="attr">&quot;ui&quot;</span>:<span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;ports&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;http&quot;</span>: <span class="number">12500</span>,</span><br><span class="line"><span class="attr">&quot;gRPC&quot;</span>: <span class="number">12502</span>,</span><br><span class="line"><span class="attr">&quot;DNS&quot;</span>: <span class="number">12600</span>,</span><br><span class="line"><span class="attr">&quot;server&quot;</span>: <span class="number">12300</span> ,</span><br><span class="line"><span class="attr">&quot;serf_lan&quot;</span>: <span class="number">12301</span>,</span><br><span class="line"><span class="attr">&quot;serf_wan&quot;</span>: <span class="number">12302</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="attr">&quot;acl&quot;</span> : &#123;</span><br><span class="line">        <span class="attr">&quot;enabled&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">&quot;default_policy&quot;</span>: <span class="string">&quot;deny&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;down_policy&quot;</span>: <span class="string">&quot;extend-cache&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;tokens&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;master&quot;</span> : <span class="string">&quot;b1gs33cr3t&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="配置2-1"><a href="#配置2-1" class="headerlink" title="配置2"></a>配置2</h6><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;datacenter&quot;</span>: <span class="string">&quot;china&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;data_dir&quot;</span>: <span class="string">&quot;./data6/&quot;</span>,</span><br><span class="line"><span class="attr">&quot;node_name&quot;</span>: <span class="string">&quot;chinadc2&quot;</span>,</span><br><span class="line"><span class="attr">&quot;bootstrap_expect&quot;</span>: <span class="number">2</span>,</span><br><span class="line"><span class="attr">&quot;bind_addr&quot;</span>: <span class="string">&quot;0.0.0.0&quot;</span>,</span><br><span class="line"><span class="attr">&quot;retry_join&quot;</span>:[<span class="string">&quot;127.0.0.1:12301&quot;</span>],</span><br><span class="line"><span class="attr">&quot;retry_join_wan&quot;</span>:[<span class="string">&quot;127.0.0.1:9302&quot;</span>],</span><br><span class="line"><span class="attr">&quot;retry_interval&quot;</span>: <span class="string">&quot;10s&quot;</span>,</span><br><span class="line"><span class="attr">&quot;retry_max&quot;</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">&quot;server&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;addresses&quot;</span>: &#123; </span><br><span class="line">        <span class="attr">&quot;http&quot;</span>: <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="attr">&quot;client_addr&quot;</span>:<span class="string">&quot;0.0.0.0&quot;</span>,</span><br><span class="line"><span class="attr">&quot;ui&quot;</span>:<span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;ports&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;http&quot;</span>: <span class="number">14500</span>,</span><br><span class="line"><span class="attr">&quot;gRPC&quot;</span>: <span class="number">14502</span>,</span><br><span class="line"><span class="attr">&quot;DNS&quot;</span>: <span class="number">14600</span>,</span><br><span class="line"><span class="attr">&quot;server&quot;</span>: <span class="number">14300</span> ,</span><br><span class="line"><span class="attr">&quot;serf_lan&quot;</span>: <span class="number">14301</span>,</span><br><span class="line"><span class="attr">&quot;serf_wan&quot;</span>: <span class="number">14302</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="attr">&quot;acl&quot;</span> : &#123;</span><br><span class="line">        <span class="attr">&quot;enabled&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">&quot;default_policy&quot;</span>: <span class="string">&quot;deny&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;down_policy&quot;</span>: <span class="string">&quot;extend-cache&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;tokens&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;master&quot;</span> : <span class="string">&quot;b1gs33cr3t&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="配置3-1"><a href="#配置3-1" class="headerlink" title="配置3"></a>配置3</h6><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;datacenter&quot;</span>: <span class="string">&quot;china&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;data_dir&quot;</span>: <span class="string">&quot;./data7/&quot;</span>,</span><br><span class="line"><span class="attr">&quot;node_name&quot;</span>: <span class="string">&quot;chinadc3&quot;</span>,</span><br><span class="line"><span class="attr">&quot;bootstrap_expect&quot;</span>: <span class="number">2</span>,</span><br><span class="line"><span class="attr">&quot;bind_addr&quot;</span>: <span class="string">&quot;0.0.0.0&quot;</span>,</span><br><span class="line"><span class="attr">&quot;retry_join&quot;</span>:[<span class="string">&quot;127.0.0.1:12301&quot;</span>],</span><br><span class="line"><span class="attr">&quot;retry_join_wan&quot;</span>:[<span class="string">&quot;127.0.0.1:9302&quot;</span>],</span><br><span class="line"><span class="attr">&quot;retry_interval&quot;</span>: <span class="string">&quot;10s&quot;</span>,</span><br><span class="line"><span class="attr">&quot;retry_max&quot;</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">&quot;server&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;addresses&quot;</span>: &#123; </span><br><span class="line">        <span class="attr">&quot;http&quot;</span>: <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="attr">&quot;client_addr&quot;</span>:<span class="string">&quot;0.0.0.0&quot;</span>,</span><br><span class="line"><span class="attr">&quot;ui&quot;</span>:<span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;ports&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;http&quot;</span>: <span class="number">15500</span>,</span><br><span class="line"><span class="attr">&quot;gRPC&quot;</span>: <span class="number">15502</span>,</span><br><span class="line"><span class="attr">&quot;DNS&quot;</span>: <span class="number">15600</span>,</span><br><span class="line"><span class="attr">&quot;server&quot;</span>: <span class="number">15300</span> ,</span><br><span class="line"><span class="attr">&quot;serf_lan&quot;</span>: <span class="number">15301</span>,</span><br><span class="line"><span class="attr">&quot;serf_wan&quot;</span>: <span class="number">15302</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="attr">&quot;acl&quot;</span> : &#123;</span><br><span class="line">        <span class="attr">&quot;enabled&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">&quot;default_policy&quot;</span>: <span class="string">&quot;deny&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;down_policy&quot;</span>: <span class="string">&quot;extend-cache&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;tokens&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;master&quot;</span> : <span class="string">&quot;b1gs33cr3t&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">consul agent -config-file=consul1.json</span><br></pre></td></tr></table></figure><p><img src="/2020/02/17/consul/consul%E9%9B%86%E7%BE%A4%E4%B8%8E%E5%A4%9A%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/TIM%E6%88%AA%E5%9B%BE20200219135707.png" alt="a"></p><p><img src="/2020/02/17/consul/consul%E9%9B%86%E7%BE%A4%E4%B8%8E%E5%A4%9A%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/TIM%E6%88%AA%E5%9B%BE20200219135733.png" alt="a"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="consul" scheme="https://guochen2.github.io/categories/consul/"/>
    
    
      <category term="集群" scheme="https://guochen2.github.io/tags/%E9%9B%86%E7%BE%A4/"/>
    
      <category term="consul" scheme="https://guochen2.github.io/tags/consul/"/>
    
  </entry>
  
  <entry>
    <title>spring-boot-admin结合consul实现动态client监控</title>
    <link href="https://guochen2.github.io/2020/02/17/java/springbootadmin%E7%BB%93%E5%90%88consul/"/>
    <id>https://guochen2.github.io/2020/02/17/java/springbootadmin%E7%BB%93%E5%90%88consul/</id>
    <published>2020-02-17T03:33:58.000Z</published>
    <updated>2020-11-23T13:46:49.654Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h5 id="目的：使用springboot-admin作为监控端监控springboot节点-将springboot-admin-server注册到consul-客户端自动发现-自动注册"><a href="#目的：使用springboot-admin作为监控端监控springboot节点-将springboot-admin-server注册到consul-客户端自动发现-自动注册" class="headerlink" title="目的：使用springboot-admin作为监控端监控springboot节点 将springboot-admin-server注册到consul   客户端自动发现 自动注册"></a>目的：使用springboot-admin作为监控端监控springboot节点 将springboot-admin-server注册到consul   客户端自动发现 自动注册</h5><h3 id="创建springboot-admin-server服务"><a href="#创建springboot-admin-server服务" class="headerlink" title="创建springboot-admin-server服务"></a>创建springboot-admin-server服务</h3><p>pom</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0&lt;<span class="symbol">&amp;#47;</span>modelVersion&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot&lt;<span class="symbol">&amp;#47;</span>groupId&gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent&lt;<span class="symbol">&amp;#47;</span>artifactId&gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.2.RELEASE&lt;<span class="symbol">&amp;#47;</span>version&gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    &lt;<span class="symbol">&amp;#47;</span>parent&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.guochen&lt;<span class="symbol">&amp;#47;</span>groupId&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>adminserver&lt;<span class="symbol">&amp;#47;</span>artifactId&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT&lt;<span class="symbol">&amp;#47;</span>version&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>adminserver&lt;<span class="symbol">&amp;#47;</span>name&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot&lt;<span class="symbol">&amp;#47;</span>description&gt;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8&lt;<span class="symbol">&amp;#47;</span>java.version&gt;</span><br><span class="line">    &lt;<span class="symbol">&amp;#47;</span>properties&gt;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>de.codecentric&lt;<span class="symbol">&amp;#47;</span>groupId&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-admin-starter-server&lt;<span class="symbol">&amp;#47;</span>artifactId&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.2&lt;<span class="symbol">&amp;#47;</span>version&gt;</span><br><span class="line">        &lt;<span class="symbol">&amp;#47;</span>dependency&gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot&lt;<span class="symbol">&amp;#47;</span>groupId&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web&lt;<span class="symbol">&amp;#47;</span>artifactId&gt;</span><br><span class="line">        &lt;<span class="symbol">&amp;#47;</span>dependency&gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud&lt;<span class="symbol">&amp;#47;</span>groupId&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-consul-all&lt;<span class="symbol">&amp;#47;</span>artifactId&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.1.RELEASE&lt;<span class="symbol">&amp;#47;</span>version&gt;</span><br><span class="line">        &lt;<span class="symbol">&amp;#47;</span>dependency&gt;</span><br><span class="line"><span class="comment">&lt;!--        &lt;dependency&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;groupId&gt;org.springframework.boot&lt;&amp;#47;groupId&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;artifactId&gt;spring-boot-starter-security&lt;&amp;#47;artifactId&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;&amp;#47;dependency&gt;--&gt;</span></span><br><span class="line">    &lt;<span class="symbol">&amp;#47;</span>dependencies&gt;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot&lt;<span class="symbol">&amp;#47;</span>groupId&gt;</span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin&lt;<span class="symbol">&amp;#47;</span>artifactId&gt;</span><br><span class="line">            &lt;<span class="symbol">&amp;#47;</span>plugin&gt;</span><br><span class="line">        &lt;<span class="symbol">&amp;#47;</span>plugins&gt;</span><br><span class="line">    &lt;<span class="symbol">&amp;#47;</span>build&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="symbol">&amp;#47;</span>project&gt;</span><br></pre></td></tr></table></figure><p>启动类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableAdminServer</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AdminserverApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(AdminserverApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>application.yml配置</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8777</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">admin-server</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">consul:</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">localhost</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8500</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="comment"># 启用服务发现</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">        <span class="comment"># 启用服务注册</span></span><br><span class="line">        <span class="attr">register:</span> <span class="literal">true</span></span><br><span class="line">        <span class="comment"># 服务停止时取消注册</span></span><br><span class="line">        <span class="attr">deregister:</span> <span class="literal">true</span></span><br><span class="line">        <span class="comment"># 表示注册时使用IP而不是hostname</span></span><br><span class="line">        <span class="attr">prefer-ip-address:</span> <span class="literal">true</span></span><br><span class="line">        <span class="comment"># 执行监控检查的频率</span></span><br><span class="line">        <span class="attr">health-check-interval:</span> <span class="string">30s</span></span><br><span class="line">        <span class="comment"># 设置健康检查失败多长时间后，取消注册</span></span><br><span class="line">        <span class="attr">health-check-critical-timeout:</span> <span class="string">30s</span></span><br><span class="line">        <span class="comment"># 健康检查的路径</span></span><br><span class="line">        <span class="attr">health-check-path:</span> <span class="string">/actuator/info</span></span><br><span class="line">        <span class="comment"># 服务注册标识，格式为：应用名称+服务器IP+端口</span></span><br><span class="line">        <span class="attr">instance-id:</span> <span class="string">$&#123;spring.application.name&#125;:$&#123;spring.cloud.client.ip-address&#125;:$&#123;server.port&#125;</span></span><br><span class="line"><span class="comment">#        tags: management.context-path=/foo, health.path=/ping, user.name=admin, user.password=123</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#监控监控</span></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">health:</span></span><br><span class="line">    <span class="attr">redis:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">consul:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">binders:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">&quot;*&quot;</span></span><br><span class="line">  <span class="attr">endpoint:</span></span><br><span class="line">    <span class="attr">health:</span></span><br><span class="line">      <span class="attr">show-details:</span> <span class="string">always</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#  security:</span></span><br><span class="line"><span class="comment">#    user:</span></span><br><span class="line"><span class="comment">#      name: &quot;admin&quot;</span></span><br><span class="line"><span class="comment">#      password: &quot;123&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="创建springboot-admin-client服务"><a href="#创建springboot-admin-client服务" class="headerlink" title="创建springboot-admin-client服务"></a>创建springboot-admin-client服务</h3><p>pom</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0&lt;<span class="symbol">&amp;#47;</span>modelVersion&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot&lt;<span class="symbol">&amp;#47;</span>groupId&gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent&lt;<span class="symbol">&amp;#47;</span>artifactId&gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.2.RELEASE&lt;<span class="symbol">&amp;#47;</span>version&gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    &lt;<span class="symbol">&amp;#47;</span>parent&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.guochen&lt;<span class="symbol">&amp;#47;</span>groupId&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>consuldemo&lt;<span class="symbol">&amp;#47;</span>artifactId&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT&lt;<span class="symbol">&amp;#47;</span>version&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>consuldemo&lt;<span class="symbol">&amp;#47;</span>name&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot&lt;<span class="symbol">&amp;#47;</span>description&gt;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8&lt;<span class="symbol">&amp;#47;</span>java.version&gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Hoxton.SR1&lt;<span class="symbol">&amp;#47;</span>spring-cloud.version&gt;</span><br><span class="line">    &lt;<span class="symbol">&amp;#47;</span>properties&gt;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot&lt;<span class="symbol">&amp;#47;</span>groupId&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web&lt;<span class="symbol">&amp;#47;</span>artifactId&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot&lt;<span class="symbol">&amp;#47;</span>groupId&gt;</span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat&lt;<span class="symbol">&amp;#47;</span>artifactId&gt;</span><br><span class="line">                &lt;<span class="symbol">&amp;#47;</span>exclusion&gt;</span><br><span class="line">            &lt;<span class="symbol">&amp;#47;</span>exclusions&gt;</span><br><span class="line">        &lt;<span class="symbol">&amp;#47;</span>dependency&gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud&lt;<span class="symbol">&amp;#47;</span>groupId&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-consul-config&lt;<span class="symbol">&amp;#47;</span>artifactId&gt;</span><br><span class="line">        &lt;<span class="symbol">&amp;#47;</span>dependency&gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud&lt;<span class="symbol">&amp;#47;</span>groupId&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-consul-discovery&lt;<span class="symbol">&amp;#47;</span>artifactId&gt;</span><br><span class="line">        &lt;<span class="symbol">&amp;#47;</span>dependency&gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud&lt;<span class="symbol">&amp;#47;</span>groupId&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-hystrix&lt;<span class="symbol">&amp;#47;</span>artifactId&gt;</span><br><span class="line">        &lt;<span class="symbol">&amp;#47;</span>dependency&gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot&lt;<span class="symbol">&amp;#47;</span>groupId&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator&lt;<span class="symbol">&amp;#47;</span>artifactId&gt;</span><br><span class="line">        &lt;<span class="symbol">&amp;#47;</span>dependency&gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>de.codecentric&lt;<span class="symbol">&amp;#47;</span>groupId&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-admin-starter-client&lt;<span class="symbol">&amp;#47;</span>artifactId&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.2&lt;<span class="symbol">&amp;#47;</span>version&gt;</span><br><span class="line">        &lt;<span class="symbol">&amp;#47;</span>dependency&gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot&lt;<span class="symbol">&amp;#47;</span>groupId&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jetty&lt;<span class="symbol">&amp;#47;</span>artifactId&gt;</span><br><span class="line">        &lt;<span class="symbol">&amp;#47;</span>dependency&gt;</span><br><span class="line">    &lt;<span class="symbol">&amp;#47;</span>dependencies&gt;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud&lt;<span class="symbol">&amp;#47;</span>groupId&gt;</span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies&lt;<span class="symbol">&amp;#47;</span>artifactId&gt;</span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;&lt;<span class="symbol">&amp;#47;</span>version&gt;</span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom&lt;<span class="symbol">&amp;#47;</span>type&gt;</span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import&lt;<span class="symbol">&amp;#47;</span>scope&gt;</span><br><span class="line">            &lt;<span class="symbol">&amp;#47;</span>dependency&gt;</span><br><span class="line">        &lt;<span class="symbol">&amp;#47;</span>dependencies&gt;</span><br><span class="line">    &lt;<span class="symbol">&amp;#47;</span>dependencyManagement&gt;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot&lt;<span class="symbol">&amp;#47;</span>groupId&gt;</span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin&lt;<span class="symbol">&amp;#47;</span>artifactId&gt;</span><br><span class="line">            &lt;<span class="symbol">&amp;#47;</span>plugin&gt;</span><br><span class="line">        &lt;<span class="symbol">&amp;#47;</span>plugins&gt;</span><br><span class="line">    &lt;<span class="symbol">&amp;#47;</span>build&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="symbol">&amp;#47;</span>project&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>启动类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br></pre></td></tr></table></figure><p>重点 bootstrap.yml</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">consul:</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">localhost</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8500</span></span><br><span class="line">      <span class="comment">#enabled将此值设置为“false”禁用Consul配置</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span>   <span class="comment">#默认是true --</span></span><br><span class="line">        <span class="attr">format:</span> <span class="string">YAML</span>    <span class="comment"># 表示consul上面文件的格式 有四种 YAML PROPERTIES KEY-VALUE FILES</span></span><br><span class="line">        <span class="attr">data-key:</span> <span class="string">data</span>    <span class="comment">#表示consul上面的KEY值(或者说文件的名字) 默认是data</span></span><br><span class="line">        <span class="comment"># watch选项为配置监视功能，主要监视配置的改变</span></span><br><span class="line">        <span class="attr">watch:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">delay:</span> <span class="number">10000</span></span><br><span class="line">          <span class="attr">wait-time:</span> <span class="number">30</span></span><br></pre></td></tr></table></figure><h3 id="consul-配置中心配置"><a href="#consul-配置中心配置" class="headerlink" title="consul 配置中心配置"></a>consul 配置中心配置</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span> </span><br><span class="line"> <span class="attr">boot:</span></span><br><span class="line">  <span class="attr">admin:</span></span><br><span class="line">   <span class="attr">client:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">admin-server</span></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line"> <span class="attr">endpoints:</span></span><br><span class="line">  <span class="attr">web:</span></span><br><span class="line">   <span class="attr">exposure:</span></span><br><span class="line">    <span class="attr">include:</span> <span class="string">&#x27;*&#x27;</span></span><br><span class="line"> <span class="attr">endpoint:</span></span><br><span class="line">  <span class="attr">health:</span></span><br><span class="line">   <span class="attr">show-details:</span> <span class="string">ALWAYS</span></span><br></pre></td></tr></table></figure><p><img src="/2020/02/17/java/springbootadmin%E7%BB%93%E5%90%88consul/TIM%E6%88%AA%E5%9B%BE20200217114130.jpg" alt="consul截图"></p><h3 id="运行成功截图"><a href="#运行成功截图" class="headerlink" title="运行成功截图"></a>运行成功截图</h3><p><img src="/2020/02/17/java/springbootadmin%E7%BB%93%E5%90%88consul/consul%E4%B8%BB%E7%95%8C%E9%9D%A2.jpg" alt="a"><br><img src="/2020/02/17/java/springbootadmin%E7%BB%93%E5%90%88consul/springbootadminserver%E4%B8%BB%E7%95%8C%E9%9D%A2.jpg" alt="a"><br><img src="/2020/02/17/java/springbootadmin%E7%BB%93%E5%90%88consul/TIM%E6%88%AA%E5%9B%BE20200217114444.jpg" alt="a"></p><h3 id="客户端信息"><a href="#客户端信息" class="headerlink" title="客户端信息"></a>客户端信息</h3><p><img src="/2020/02/17/java/springbootadmin%E7%BB%93%E5%90%88consul/TIM%E6%88%AA%E5%9B%BE20200217114719.jpg" alt="a"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="java" scheme="https://guochen2.github.io/categories/java/"/>
    
    
      <category term="consul" scheme="https://guochen2.github.io/tags/consul/"/>
    
      <category term="springcloudadmin" scheme="https://guochen2.github.io/tags/springcloudadmin/"/>
    
  </entry>
  
  <entry>
    <title>spring-cloud使用consul作为配置中心和注册中心</title>
    <link href="https://guochen2.github.io/2020/02/15/java/spring-cloud%E4%BD%BF%E7%94%A8consul%E4%BD%9C%E4%B8%BA%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%E5%92%8C%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/"/>
    <id>https://guochen2.github.io/2020/02/15/java/spring-cloud%E4%BD%BF%E7%94%A8consul%E4%BD%9C%E4%B8%BA%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%E5%92%8C%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/</id>
    <published>2020-02-15T12:56:37.000Z</published>
    <updated>2020-11-23T13:46:49.646Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>启动类上需要设置@EnableScheduling注解 配置才能自动刷新</li><li>启动类上需要设置@EnableConfigurationProperties({StudentConfig.class})</li><li>model类上设置@ConfigurationProperties(prefix = “student”) //前缀：对应consul 配置中心的 student 前缀</li><li>通过@Value注入的属性，修改consul的配置后，属性不能立即生效，需要服务重启。而通过@ConfigurationProperties注入的属性，修改consul的配置后，属性会立即生效，所以建议如果需要动态生效的配置，最好使用@ConfigurationProperties进行属性的注入。</li><li>consul可以作为配置中心和注册中心<br>pom.xml<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0&lt;<span class="symbol">&amp;#47;</span>modelVersion&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot&lt;<span class="symbol">&amp;#47;</span>groupId&gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent&lt;<span class="symbol">&amp;#47;</span>artifactId&gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.4.RELEASE&lt;<span class="symbol">&amp;#47;</span>version&gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    &lt;<span class="symbol">&amp;#47;</span>parent&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.guochen&lt;<span class="symbol">&amp;#47;</span>groupId&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>consuldemo&lt;<span class="symbol">&amp;#47;</span>artifactId&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT&lt;<span class="symbol">&amp;#47;</span>version&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>consuldemo&lt;<span class="symbol">&amp;#47;</span>name&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot&lt;<span class="symbol">&amp;#47;</span>description&gt;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8&lt;<span class="symbol">&amp;#47;</span>java.version&gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Hoxton.SR1&lt;<span class="symbol">&amp;#47;</span>spring-cloud.version&gt;</span><br><span class="line">    &lt;<span class="symbol">&amp;#47;</span>properties&gt;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot&lt;<span class="symbol">&amp;#47;</span>groupId&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web&lt;<span class="symbol">&amp;#47;</span>artifactId&gt;</span><br><span class="line">        &lt;<span class="symbol">&amp;#47;</span>dependency&gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud&lt;<span class="symbol">&amp;#47;</span>groupId&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-consul-config&lt;<span class="symbol">&amp;#47;</span>artifactId&gt;</span><br><span class="line">        &lt;<span class="symbol">&amp;#47;</span>dependency&gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud&lt;<span class="symbol">&amp;#47;</span>groupId&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-consul-discovery&lt;<span class="symbol">&amp;#47;</span>artifactId&gt;</span><br><span class="line">        &lt;<span class="symbol">&amp;#47;</span>dependency&gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud&lt;<span class="symbol">&amp;#47;</span>groupId&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-hystrix&lt;<span class="symbol">&amp;#47;</span>artifactId&gt;</span><br><span class="line">        &lt;<span class="symbol">&amp;#47;</span>dependency&gt; </span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot&lt;<span class="symbol">&amp;#47;</span>groupId&gt;</span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator&lt;<span class="symbol">&amp;#47;</span>artifactId&gt;</span><br><span class="line">        &lt;<span class="symbol">&amp;#47;</span>dependency&gt;</span><br><span class="line">    &lt;<span class="symbol">&amp;#47;</span>dependencies&gt;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud&lt;<span class="symbol">&amp;#47;</span>groupId&gt;</span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies&lt;<span class="symbol">&amp;#47;</span>artifactId&gt;</span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;&lt;<span class="symbol">&amp;#47;</span>version&gt;</span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom&lt;<span class="symbol">&amp;#47;</span>type&gt;</span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import&lt;<span class="symbol">&amp;#47;</span>scope&gt;</span><br><span class="line">            &lt;<span class="symbol">&amp;#47;</span>dependency&gt;</span><br><span class="line">        &lt;<span class="symbol">&amp;#47;</span>dependencies&gt;</span><br><span class="line">    &lt;<span class="symbol">&amp;#47;</span>dependencyManagement&gt;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot&lt;<span class="symbol">&amp;#47;</span>groupId&gt;</span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin&lt;<span class="symbol">&amp;#47;</span>artifactId&gt;</span><br><span class="line">            &lt;<span class="symbol">&amp;#47;</span>plugin&gt;</span><br><span class="line">        &lt;<span class="symbol">&amp;#47;</span>plugins&gt;</span><br><span class="line">    &lt;<span class="symbol">&amp;#47;</span>build&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="symbol">&amp;#47;</span>project&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>bootstrap.yml<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">consul:</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">localhost</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8500</span></span><br><span class="line">      <span class="comment">#enabled将此值设置为“false”禁用Consul配置</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span>   <span class="comment">#默认是true --</span></span><br><span class="line">        <span class="attr">format:</span> <span class="string">YAML</span>    <span class="comment"># 表示consul上面文件的格式 有四种 YAML PROPERTIES KEY-VALUE FILES</span></span><br><span class="line">        <span class="attr">data-key:</span> <span class="string">data</span>    <span class="comment">#表示consul上面的KEY值(或者说文件的名字) 默认是data</span></span><br><span class="line">        <span class="comment"># watch选项为配置监视功能，主要监视配置的改变</span></span><br><span class="line">        <span class="attr">watch:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">delay:</span> <span class="number">10000</span></span><br><span class="line">          <span class="attr">wait-time:</span> <span class="number">30</span></span><br></pre></td></tr></table></figure>application.yml<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">consul-service</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">consul:</span></span><br><span class="line">      <span class="comment"># 服务发现配置</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="comment"># 启用服务发现</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">        <span class="comment"># 启用服务注册</span></span><br><span class="line">        <span class="attr">register:</span> <span class="literal">true</span></span><br><span class="line">        <span class="comment"># 服务停止时取消注册</span></span><br><span class="line">        <span class="attr">deregister:</span> <span class="literal">true</span></span><br><span class="line">        <span class="comment"># 表示注册时使用IP而不是hostname</span></span><br><span class="line">        <span class="attr">prefer-ip-address:</span> <span class="literal">true</span></span><br><span class="line">        <span class="comment"># 执行监控检查的频率</span></span><br><span class="line">        <span class="attr">health-check-interval:</span> <span class="string">30s</span></span><br><span class="line">        <span class="comment"># 设置健康检查失败多长时间后，取消注册</span></span><br><span class="line">        <span class="attr">health-check-critical-timeout:</span> <span class="string">30s</span></span><br><span class="line">        <span class="comment"># 健康检查的路径</span></span><br><span class="line">        <span class="attr">health-check-path:</span> <span class="string">/actuator/info</span></span><br><span class="line">        <span class="comment"># 服务注册标识，格式为：应用名称+服务器IP+端口</span></span><br><span class="line">        <span class="attr">instance-id:</span> <span class="string">$&#123;spring.application.name&#125;:$&#123;spring.cloud.client.ip-address&#125;:$&#123;server.port&#125;</span></span><br></pre></td></tr></table></figure></li></ul><p>启动类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@EnableScheduling</span>  <span class="comment">//启用后，会定时拉取配置</span></span><br><span class="line"><span class="meta">@EnableConfigurationProperties(&#123;StudentConfig.class&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApplicationStart</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ApplicationStart.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>model类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> io.guochen.consuldemo.model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;student&quot;)</span> <span class="comment">//前缀：对应consul 配置中心的 student 前缀</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentConfig</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSex</span><span class="params">(String sex)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.sex = sex;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> io.guochen.consuldemo.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.guochen.consuldemo.model.StudentConfig;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> StudentConfig studentConfig;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;test.name&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span>  String testname;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> StudentConfig <span class="title">testDescription</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> studentConfig;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>添加consul配置<br>注意：</p><ul><li>默认情况下，consul配置默认存储在/config文件夹中</li><li>myconsul为spring.application.name值，dev为spring.profiles.active值，data为data-key值</li><li>value用的是yml格式的配置，冒号后面有一个空格。<br><img src="/2020/02/15/java/spring-cloud%E4%BD%BF%E7%94%A8consul%E4%BD%9C%E4%B8%BA%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%E5%92%8C%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/TIM%E6%88%AA%E5%9B%BE20200215211341.jpg" alt="a"></li></ul><p><img src="/2020/02/15/java/spring-cloud%E4%BD%BF%E7%94%A8consul%E4%BD%9C%E4%B8%BA%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%E5%92%8C%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/TIM%E6%88%AA%E5%9B%BE20200215211145.jpg" alt="a"></p><p>程序启动后可以看到consul里已经注册成功<br><img src="/2020/02/15/java/spring-cloud%E4%BD%BF%E7%94%A8consul%E4%BD%9C%E4%B8%BA%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%E5%92%8C%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/TIM%E6%88%AA%E5%9B%BE20200215211745.jpg" alt="a"></p><p>且配置可以正常读取<br><img src="/2020/02/15/java/spring-cloud%E4%BD%BF%E7%94%A8consul%E4%BD%9C%E4%B8%BA%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%E5%92%8C%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/TIM%E6%88%AA%E5%9B%BE20200215211902.jpg" alt="a"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="java" scheme="https://guochen2.github.io/categories/java/"/>
    
    
      <category term="consul" scheme="https://guochen2.github.io/tags/consul/"/>
    
      <category term="springcloud" scheme="https://guochen2.github.io/tags/springcloud/"/>
    
  </entry>
  
  <entry>
    <title>jenkins部分注意事项</title>
    <link href="https://guochen2.github.io/2020/02/15/java/jenkins%E9%83%A8%E5%88%86%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <id>https://guochen2.github.io/2020/02/15/java/jenkins%E9%83%A8%E5%88%86%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</id>
    <published>2020-02-15T07:33:56.000Z</published>
    <updated>2020-11-23T13:46:49.643Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><img src="/2020/02/15/java/jenkins%E9%83%A8%E5%88%86%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/Image.png" alt="a"><br>安装其他插件重启Jenkins后，又出现了部分中文简体不翻译的情况。<br>尝试以下方法，可以完美修复。</p><ul><li><p>将语言设定为zh_US，Jenkins切换为英文。</p></li><li><p>调用restart重启Jenkins：http://域名/restart。</p></li><li><p>再次语言设定为zh_CN，刷新即可。</p></li></ul><p>从问题分析上看，在简体中文上restart Jenkins就会发生部分简体中文不显示的现象。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="java" scheme="https://guochen2.github.io/categories/java/"/>
    
    
      <category term="jenkins" scheme="https://guochen2.github.io/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>jenkins自动构建netcore项目</title>
    <link href="https://guochen2.github.io/2020/02/15/java/jenkins%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BAnetcore%E9%A1%B9%E7%9B%AE/"/>
    <id>https://guochen2.github.io/2020/02/15/java/jenkins%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BAnetcore%E9%A1%B9%E7%9B%AE/</id>
    <published>2020-02-15T07:27:41.000Z</published>
    <updated>2020-11-23T13:46:49.633Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>netcore项目提交到github后 jenkins自动构建，自动发布，自动运行</p><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li><p>netcore项目根目录下的Dockerfile需设置正确，在docker里直接执行docker build -t name . 能正常创建成一个镜像</p></li><li><p>需要有公网ip能访问到jenkins，用于push代码后git能通过webhook到jenkins</p></li><li><p>jenkins需要安装Git、GitHub 插件</p></li><li><p>项目设置里勾选<br><img src="/2020/02/15/java/jenkins%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BAnetcore%E9%A1%B9%E7%9B%AE/Image.png" alt="a"></p></li><li><p>系统设置里需要设置github hookurl<br><img src="/2020/02/15/java/jenkins%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BAnetcore%E9%A1%B9%E7%9B%AE/Image1.png" alt="a"></p></li><li><p>github里项目的设置webhook<br><img src="/2020/02/15/java/jenkins%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BAnetcore%E9%A1%B9%E7%9B%AE/Image2.png" alt="a"><br><img src="/2020/02/15/java/jenkins%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BAnetcore%E9%A1%B9%E7%9B%AE/Image3.png" alt="a"></p></li><li><p>jenkins项目设置里 构建 执行shell<br><img src="/2020/02/15/java/jenkins%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BAnetcore%E9%A1%B9%E7%9B%AE/Image4.png" alt="a"></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker build --rm -t web.d/webapi:2.1.1 -f Dockerfile . #根据Dockerfile构建 </span><br><span class="line">docker ps -a | grep webapi | awk &#x27;&#123;print $1&#125;&#x27; | xargs -r docker stop | xargs -r docker rm #查询容器 找到容器名称为 webapi的容器 先stop 再删除 </span><br><span class="line">docker run -d -p 5001:5000 --name webapi --restart always web.d/webapi:2.1.1 #运行一个新的容器</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="java" scheme="https://guochen2.github.io/categories/java/"/>
    
    
      <category term="jenkins" scheme="https://guochen2.github.io/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>mongodb常用注意事项</title>
    <link href="https://guochen2.github.io/2020/02/15/mongodb/mongodb%E5%B8%B8%E7%94%A8%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <id>https://guochen2.github.io/2020/02/15/mongodb/mongodb%E5%B8%B8%E7%94%A8%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</id>
    <published>2020-02-15T07:23:01.000Z</published>
    <updated>2020-11-23T13:46:49.666Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="删除或新增一列"><a href="#删除或新增一列" class="headerlink" title="删除或新增一列"></a>删除或新增一列</h4><p>比如在product 这个表中，要删除shop这个字段，用以下命令即可（在cmd中，或者robo 3T中）。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">db.getCollection(&#x27;product&#x27;).update(&#123;&#125;,&#123;&#x27;$unset&#x27;:&#123;&#x27;shop&#x27;:1&#125;&#125;,false, true)</span><br></pre></td></tr></table></figure><p>最后一个true 表示对整个表都执行</p><p> 如果要新增shop字段，并且赋值为空，则：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">db.getCollection(&#x27;product&#x27;).update(&#123;&#125;,&#123;&#x27;$set&#x27;:&#123;&#x27;shop&#x27;:&#x27;&#x27;&#125;&#125;,false, true) </span><br></pre></td></tr></table></figure><h4 id="高版本node-执行mongodb的command-需使用"><a href="#高版本node-执行mongodb的command-需使用" class="headerlink" title="高版本node 执行mongodb的command 需使用"></a>高版本node 执行mongodb的command 需使用</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">client.db(&quot;admin&quot;).admin().command()</span><br></pre></td></tr></table></figure><h4 id="某参数自增1或自减"><a href="#某参数自增1或自减" class="headerlink" title="某参数自增1或自减"></a>某参数自增1或自减</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">update &#123;$inc:&#123;count:1&#125;&#125;   count为参数</span><br></pre></td></tr></table></figure><h4 id="释放内存"><a href="#释放内存" class="headerlink" title="释放内存"></a>释放内存</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">db.runCommand(&#123;closeAllDatabases:1&#125;)</span><br></pre></td></tr></table></figure><h4 id="删除数据库后磁盘还留有预分配的空间，需要执行"><a href="#删除数据库后磁盘还留有预分配的空间，需要执行" class="headerlink" title="删除数据库后磁盘还留有预分配的空间，需要执行"></a>删除数据库后磁盘还留有预分配的空间，需要执行</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">db.repairDatabase()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="mongodb" scheme="https://guochen2.github.io/categories/mongodb/"/>
    
    
  </entry>
  
  <entry>
    <title>nginx tar安装</title>
    <link href="https://guochen2.github.io/2020/02/15/nginx/ubuntu%E5%AE%89%E8%A3%85nginxtar%E5%8C%85/"/>
    <id>https://guochen2.github.io/2020/02/15/nginx/ubuntu%E5%AE%89%E8%A3%85nginxtar%E5%8C%85/</id>
    <published>2020-02-15T07:05:35.000Z</published>
    <updated>2020-11-23T13:46:49.718Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget http://nginx.org/download/nginx-1.13.6.tar.gz#解压：</span><br><span class="line">tar -zxvf nginx-1.13.6.tar.gz</span><br><span class="line">#进入解压目录：</span><br><span class="line">cd nginx-1.13.6</span><br><span class="line">#配置：</span><br><span class="line">./configure --prefix=/usr/local/nginx</span><br><span class="line">#编译：</span><br><span class="line">make</span><br><span class="line">#安装：</span><br><span class="line">sudo make install</span><br><span class="line">#启动：</span><br><span class="line">sudo /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf</span><br><span class="line">注意：-c 指定配置文件的路径，不加的话，nginx会自动加载默认路径的配置文件，可以通过-h查看帮助命令。</span><br><span class="line">#查看进程：</span><br><span class="line">ps -ef | grep nginx</span><br></pre></td></tr></table></figure><p>配置软链接</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo ln -s /usr/local/nginx/sbin/nginx /usr/bin/nginx</span><br></pre></td></tr></table></figure><p>现在就可以不用路径直接输入nginx启动。<br>配置开机启动服务<br>在/etc/init.d/下创建nginx文件，sudo vim /etc/init.d/nginx，内容如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"></span><br><span class="line">### BEGIN INIT INFO</span><br><span class="line"># Provides: nginx</span><br><span class="line"># Required-Start: $local_fs $remote_fs $network $syslog $named</span><br><span class="line"># Required-Stop: $local_fs $remote_fs $network $syslog $named</span><br><span class="line"># Default-Start: 2 3 4 5</span><br><span class="line"># Default-Stop: 0 1 6</span><br><span class="line"># Short-Description: starts the nginx web server</span><br><span class="line"># Description: starts nginx using start-stop-daemon</span><br><span class="line">### END INIT INFO</span><br><span class="line"></span><br><span class="line">PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class="line">DAEMON=/usr/local/nginx/sbin/nginx</span><br><span class="line">NAME=nginx</span><br><span class="line">DESC=nginx</span><br><span class="line"></span><br><span class="line"># Include nginx defaults if available</span><br><span class="line">if [ -r /etc/default/nginx ]; then</span><br><span class="line">. /etc/default/nginx</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">STOP_SCHEDULE=&quot;$&#123;STOP_SCHEDULE:-QUIT/5/TERM/5/KILL/5&#125;&quot;</span><br><span class="line"></span><br><span class="line">test -x $DAEMON || exit 0</span><br><span class="line"></span><br><span class="line">. /lib/init/vars.sh</span><br><span class="line">. /lib/lsb/init-functions</span><br><span class="line"></span><br><span class="line"># Try to extract nginx pidfile</span><br><span class="line">PID=$(cat /usr/local/nginx/conf/nginx.conf | grep -Ev &#x27;^\s*#&#x27; | awk &#x27;BEGIN &#123; RS=&quot;[;&#123;&#125;]&quot; &#125; &#123; if ($1 == &quot;pid&quot;) print $2 &#125;&#x27; | head -n1)</span><br><span class="line">if [ -z &quot;$PID&quot; ]; then</span><br><span class="line">PID=/run/nginx.pid</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if [ -n &quot;$ULIMIT&quot; ]; then</span><br><span class="line"># Set ulimit if it is set in /etc/default/nginx</span><br><span class="line">ulimit $ULIMIT</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">start_nginx() &#123;</span><br><span class="line"># Start the daemon/service</span><br><span class="line">#</span><br><span class="line"># Returns:</span><br><span class="line"># 0 if daemon has been started</span><br><span class="line"># 1 if daemon was already running</span><br><span class="line"># 2 if daemon could not be started</span><br><span class="line">start-stop-daemon --start --quiet --pidfile $PID --exec $DAEMON --test &gt; /dev/null \</span><br><span class="line">|| return 1</span><br><span class="line">start-stop-daemon --start --quiet --pidfile $PID --exec $DAEMON -- \</span><br><span class="line">$DAEMON_OPTS 2&gt;/dev/null \</span><br><span class="line">|| return 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">test_config() &#123;</span><br><span class="line"># Test the nginx configuration</span><br><span class="line">$DAEMON -t $DAEMON_OPTS &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">stop_nginx() &#123;</span><br><span class="line"># Stops the daemon/service</span><br><span class="line">#</span><br><span class="line"># Return</span><br><span class="line"># 0 if daemon has been stopped</span><br><span class="line"># 1 if daemon was already stopped</span><br><span class="line"># 2 if daemon could not be stopped</span><br><span class="line"># other if a failure occurred</span><br><span class="line">start-stop-daemon --stop --quiet --retry=$STOP_SCHEDULE --pidfile $PID --name $NAME</span><br><span class="line">RETVAL=&quot;$?&quot;</span><br><span class="line">sleep 1</span><br><span class="line">return &quot;$RETVAL&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">reload_nginx() &#123;</span><br><span class="line"># Function that sends a SIGHUP to the daemon/service</span><br><span class="line">start-stop-daemon --stop --signal HUP --quiet --pidfile $PID --name $NAME</span><br><span class="line">return 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rotate_logs() &#123;</span><br><span class="line"># Rotate log files</span><br><span class="line">start-stop-daemon --stop --signal USR1 --quiet --pidfile $PID --name $NAME</span><br><span class="line">return 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upgrade_nginx() &#123;</span><br><span class="line"># Online upgrade nginx executable</span><br><span class="line"># http://nginx.org/en/docs/control.html #</span><br><span class="line"># Return</span><br><span class="line"># 0 if nginx has been successfully upgraded</span><br><span class="line"># 1 if nginx is not running</span><br><span class="line"># 2 if the pid files were not created on time</span><br><span class="line"># 3 if the old master could not be killed</span><br><span class="line">if start-stop-daemon --stop --signal USR2 --quiet --pidfile $PID --name $NAME; then</span><br><span class="line"># Wait for both old and new master to write their pid file</span><br><span class="line">while [ ! -s &quot;$&#123;PID&#125;.oldbin&quot; ] || [ ! -s &quot;$&#123;PID&#125;&quot; ]; do</span><br><span class="line">cnt=`expr $cnt + 1`</span><br><span class="line">if [ $cnt -gt 10 ]; then</span><br><span class="line">return 2</span><br><span class="line">fi</span><br><span class="line">sleep 1</span><br><span class="line">done</span><br><span class="line"># Everything is ready, gracefully stop the old master</span><br><span class="line">if start-stop-daemon --stop --signal QUIT --quiet --pidfile &quot;$&#123;PID&#125;.oldbin&quot; --name $NAME; then</span><br><span class="line">return 0</span><br><span class="line">else</span><br><span class="line">return 3</span><br><span class="line">fi</span><br><span class="line">else</span><br><span class="line">return 1</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line">start)</span><br><span class="line">log_daemon_msg &quot;Starting $DESC&quot; &quot;$NAME&quot;</span><br><span class="line">start_nginx</span><br><span class="line">case &quot;$?&quot; in</span><br><span class="line">0|1) log_end_msg 0 ;;</span><br><span class="line">2) log_end_msg 1 ;;</span><br><span class="line">esac</span><br><span class="line">;;</span><br><span class="line">stop)</span><br><span class="line">log_daemon_msg &quot;Stopping $DESC&quot; &quot;$NAME&quot;</span><br><span class="line">stop_nginx</span><br><span class="line">case &quot;$?&quot; in</span><br><span class="line">0|1) log_end_msg 0 ;;</span><br><span class="line">2) log_end_msg 1 ;;</span><br><span class="line">esac</span><br><span class="line">;;</span><br><span class="line">restart)</span><br><span class="line">log_daemon_msg &quot;Restarting $DESC&quot; &quot;$NAME&quot;</span><br><span class="line"></span><br><span class="line"># Check configuration before stopping nginx</span><br><span class="line">if ! test_config; then</span><br><span class="line">log_end_msg 1 # Configuration error</span><br><span class="line">exit $?</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">stop_nginx</span><br><span class="line">case &quot;$?&quot; in</span><br><span class="line">0|1)</span><br><span class="line">start_nginx</span><br><span class="line">case &quot;$?&quot; in</span><br><span class="line">0) log_end_msg 0 ;;</span><br><span class="line">1) log_end_msg 1 ;; # Old process is still running</span><br><span class="line">*) log_end_msg 1 ;; # Failed to start</span><br><span class="line">esac</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"># Failed to stop</span><br><span class="line">log_end_msg 1</span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line">;;</span><br><span class="line">reload|force-reload)</span><br><span class="line">log_daemon_msg &quot;Reloading $DESC configuration&quot; &quot;$NAME&quot;</span><br><span class="line"></span><br><span class="line"># Check configuration before stopping nginx</span><br><span class="line">#</span><br><span class="line"># This is not entirely correct since the on-disk nginx binary</span><br><span class="line"># may differ from the in-memory one, but that&#x27;s not common. # We prefer to check the configuration and return an error</span><br><span class="line"># to the administrator.</span><br><span class="line">if ! test_config; then</span><br><span class="line">log_end_msg 1 # Configuration error</span><br><span class="line">exit $?</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">reload_nginx</span><br><span class="line">log_end_msg $?</span><br><span class="line">;;</span><br><span class="line">configtest|testconfig)</span><br><span class="line">log_daemon_msg &quot;Testing $DESC configuration&quot;</span><br><span class="line">test_config</span><br><span class="line">log_end_msg $?</span><br><span class="line">;;</span><br><span class="line">status)</span><br><span class="line">status_of_proc -p $PID &quot;$DAEMON&quot; &quot;$NAME&quot; &amp;&amp; exit 0 || exit $?</span><br><span class="line">;;</span><br><span class="line">upgrade)</span><br><span class="line">log_daemon_msg &quot;Upgrading binary&quot; &quot;$NAME&quot;</span><br><span class="line">upgrade_nginx</span><br><span class="line">log_end_msg $?</span><br><span class="line">;;</span><br><span class="line">rotate)</span><br><span class="line">log_daemon_msg &quot;Re-opening $DESC log files&quot; &quot;$NAME&quot;</span><br><span class="line">rotate_logs</span><br><span class="line">log_end_msg $?</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">echo &quot;Usage: $NAME &#123;start|stop|restart|reload|force-reload|status|configtest|rotate|upgrade&#125;&quot; &gt;&amp;2</span><br><span class="line">exit 3</span><br><span class="line">;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#设置服务脚本有执行权限</span><br><span class="line">sudo chmod +x /etc/init.d/nginx</span><br><span class="line">#注册服务</span><br><span class="line">cd /etc/init.d/</span><br><span class="line">sudo update-rc.d nginx defaults</span><br></pre></td></tr></table></figure><p>现在基本上就可以开机启动了，常用的命令如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo service nginx &#123;start|stop|restart|reload|force-reload|status|configtest|rotate|upgrade&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="nginx" scheme="https://guochen2.github.io/categories/nginx/"/>
    
    
      <category term="tar" scheme="https://guochen2.github.io/tags/tar/"/>
    
  </entry>
  
  <entry>
    <title>nginx日志切割</title>
    <link href="https://guochen2.github.io/2020/02/15/nginx/%E6%97%A5%E5%BF%97%E5%88%87%E5%89%B2/"/>
    <id>https://guochen2.github.io/2020/02/15/nginx/%E6%97%A5%E5%BF%97%E5%88%87%E5%89%B2/</id>
    <published>2020-02-15T06:59:27.000Z</published>
    <updated>2020-11-23T13:46:49.719Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>设定每日运行计划</p><p>bat文件内容如下</p><figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="comment">rem @echo off   </span></span><br><span class="line"><span class="comment">rem 取1天之前的日期  </span></span><br><span class="line"><span class="built_in">echo</span> wscript.<span class="built_in">echo</span> dateadd(&quot;d&quot;,-<span class="number">1</span>,<span class="built_in">date</span>) &gt;<span class="variable">%tmp%</span>\tmp.vbs</span><br><span class="line"><span class="keyword">for</span> /f &quot;tokens=<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>* delims=/&quot; <span class="variable">%%i</span> <span class="keyword">in</span> (&#x27;cscript /nologo <span class="variable">%tmp%</span>\tmp.vbs&#x27;) <span class="keyword">do</span> <span class="built_in">set</span> y=<span class="variable">%%i</span></span><br><span class="line"><span class="keyword">for</span> /f &quot;tokens=<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>* delims=/&quot; <span class="variable">%%i</span> <span class="keyword">in</span> (&#x27;cscript /nologo <span class="variable">%tmp%</span>\tmp.vbs&#x27;) <span class="keyword">do</span> <span class="built_in">set</span> m=<span class="variable">%%j</span></span><br><span class="line"><span class="keyword">for</span> /f &quot;tokens=<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>* delims=/&quot; <span class="variable">%%i</span> <span class="keyword">in</span> (&#x27;cscript /nologo <span class="variable">%tmp%</span>\tmp.vbs&#x27;) <span class="keyword">do</span> <span class="built_in">set</span> d=<span class="variable">%%k</span></span><br><span class="line"><span class="keyword">if</span> <span class="variable">%m%</span> <span class="keyword">LSS</span> <span class="number">9</span> <span class="built_in">set</span> m=<span class="number">0</span><span class="variable">%m%</span></span><br><span class="line"><span class="keyword">if</span> <span class="variable">%d%</span> <span class="keyword">LSS</span> <span class="number">9</span> <span class="built_in">set</span> d=<span class="number">0</span><span class="variable">%d%</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%y%</span>-<span class="variable">%m%</span>-<span class="variable">%d%</span></span><br><span class="line"><span class="comment">  </span></span><br><span class="line"><span class="comment">rem 设置 Nginx 位于的盘符  </span></span><br><span class="line"><span class="built_in">set</span> NGINX_DRIVER=c:</span><br><span class="line"><span class="comment">rem 设置 Nginx 的主目录  </span></span><br><span class="line"><span class="built_in">set</span> NGINX_PATH=<span class="variable">%NGINX_DRIVER%</span>\nginx</span><br><span class="line"><span class="comment">rem 设置 Nginx 的日志目录  </span></span><br><span class="line"><span class="built_in">set</span> LOG_PATH=<span class="variable">%NGINX_PATH%</span>\logs</span><br><span class="line"><span class="comment">rem 设置Nginx日志备份路径</span></span><br><span class="line"><span class="built_in">set</span> Log_Back_Path=<span class="variable">%NGINX_PATH%</span>\logback</span><br><span class="line"><span class="comment">rem 移动文件  </span></span><br><span class="line"><span class="built_in">move</span> <span class="variable">%LOG_PATH%</span>\napi.access.log <span class="variable">%Log_Back_Path%</span>\napi\access_<span class="variable">%y%</span>-<span class="variable">%m%</span>-<span class="variable">%d%</span>.log</span><br><span class="line"><span class="built_in">move</span> <span class="variable">%LOG_PATH%</span>\vercode.access.log <span class="variable">%Log_Back_Path%</span>\vercode\access_<span class="variable">%y%</span>-<span class="variable">%m%</span>-<span class="variable">%d%</span>.log</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="nginx" scheme="https://guochen2.github.io/categories/nginx/"/>
    
    
      <category term="日志分割" scheme="https://guochen2.github.io/tags/%E6%97%A5%E5%BF%97%E5%88%86%E5%89%B2/"/>
    
  </entry>
  
  <entry>
    <title>mongodb日志切割</title>
    <link href="https://guochen2.github.io/2020/02/15/mongodb/%E6%97%A5%E5%BF%97%E5%88%87%E5%89%B2/"/>
    <id>https://guochen2.github.io/2020/02/15/mongodb/%E6%97%A5%E5%BF%97%E5%88%87%E5%89%B2/</id>
    <published>2020-02-15T06:55:49.000Z</published>
    <updated>2020-11-23T13:46:49.667Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>mongodb日志文件过大  使用命令分割</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use admin</span><br><span class="line">db.runCommand(&#123;logRotate:1&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="mongodb" scheme="https://guochen2.github.io/categories/mongodb/"/>
    
    
      <category term="日志分割" scheme="https://guochen2.github.io/tags/%E6%97%A5%E5%BF%97%E5%88%86%E5%89%B2/"/>
    
  </entry>
  
  <entry>
    <title>springcloud部分注意事项</title>
    <link href="https://guochen2.github.io/2020/02/15/java/springcloud%E9%83%A8%E5%88%86%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <id>https://guochen2.github.io/2020/02/15/java/springcloud%E9%83%A8%E5%88%86%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</id>
    <published>2020-02-15T06:44:41.000Z</published>
    <updated>2020-11-23T13:46:49.662Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="Eureka-服务注册"><a href="#Eureka-服务注册" class="headerlink" title="Eureka 服务注册"></a>Eureka 服务注册</h3><h3 id="Ribbon-客户端负载均衡"><a href="#Ribbon-客户端负载均衡" class="headerlink" title="Ribbon 客户端负载均衡"></a>Ribbon 客户端负载均衡</h3><h3 id="Feign-远程请求接口化"><a href="#Feign-远程请求接口化" class="headerlink" title="Feign 远程请求接口化"></a>Feign 远程请求接口化</h3><ul><li>@GetMapping不支持</li><li>@PathVarlable必须设置value</li><li>传递复杂对象强制使用的POST传递 若接收端必须是Get 则传递时方法里需要对复杂对象进行解析成单个参数</li></ul><h4 id="启动程序后首次调用超时问题"><a href="#启动程序后首次调用超时问题" class="headerlink" title="启动程序后首次调用超时问题"></a>启动程序后首次调用超时问题</h4><p>解决方案</p><ul><li>1.增加hystrix超时时间<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds: 5000</span><br></pre></td></tr></table></figure></li><li>2 关闭超时检测<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hystrix.command.default.execution.timeout.enabled: false</span><br></pre></td></tr></table></figure></li><li>3 禁用feign的hystrix<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">feign.hystrix.enabled: false</span><br></pre></td></tr></table></figure><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><h4 id="启动java-设置内存"><a href="#启动java-设置内存" class="headerlink" title="启动java 设置内存"></a>启动java 设置内存</h4>java -Xms64m -Xmx128m -jar microservice-provider-user-0.0.1-SNAPSHOT.jar  </li></ul><h4 id="启动java-设置不同的profile组"><a href="#启动java-设置不同的profile组" class="headerlink" title="启动java 设置不同的profile组"></a>启动java 设置不同的profile组</h4><p>  java -jar microservice-provider-user-0.0.1-SNAPSHOT.jar  –spring.profiles.active=a8000</p>  <figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">microservice-provider-user</span>  </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">a8000</span>  </span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8000</span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">a8001</span>  </span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8001</span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">a8002</span>  </span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8002</span></span><br></pre></td></tr></table></figure><h4 id="spring-cloud使用consul注册发现"><a href="#spring-cloud使用consul注册发现" class="headerlink" title="spring cloud使用consul注册发现"></a>spring cloud使用consul注册发现</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud&lt;<span class="symbol">&amp;#47;</span>groupId&gt;  </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-consul-discovery&lt;<span class="symbol">&amp;#47;</span>artifactId&gt;</span><br><span class="line">&lt;<span class="symbol">&amp;#47;</span>dependency&gt;</span><br></pre></td></tr></table></figure><p>若注册状态提示204</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot&lt;<span class="symbol">&amp;#47;</span>groupId&gt;  </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web&lt;<span class="symbol">&amp;#47;</span>artifactId&gt;</span><br><span class="line">&lt;<span class="symbol">&amp;#47;</span>dependency&gt;</span><br></pre></td></tr></table></figure><p>主类添加</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@EnableDiscoveryClient</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="java" scheme="https://guochen2.github.io/categories/java/"/>
    
    
      <category term="springcloud" scheme="https://guochen2.github.io/tags/springcloud/"/>
    
  </entry>
  
  <entry>
    <title>netcore2.2使用autofac</title>
    <link href="https://guochen2.github.io/2020/02/15/netcore2.2/autofac/"/>
    <id>https://guochen2.github.io/2020/02/15/netcore2.2/autofac/</id>
    <published>2020-02-15T06:18:20.000Z</published>
    <updated>2020-11-23T13:46:49.693Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="Nuget引用"><a href="#Nuget引用" class="headerlink" title="Nuget引用"></a>Nuget引用</h3><p>Autofac<br>Autofac.Extensions.DependencyInjection</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">public IServiceProvider ConfigureServices(IServiceCollection services)</span><br><span class="line">&#123;</span><br><span class="line">//使用autofac作为IOC</span><br><span class="line">var containerBuilder = new ContainerBuilder();</span><br><span class="line">containerBuilder.Populate(services);//将services里的内置的一些IOC和autofac整合</span><br><span class="line">containerBuilder.RegisterModule&amp;lt; DefaultModuleRegister&amp;gt; ();</span><br><span class="line">containerBuilder.RegisterType&amp;lt; BaseResponse&amp;gt; ().AsSelf();</span><br><span class="line">return new AutofacServiceProvider(containerBuilder.Build());</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="新模块组件注册"><a href="#新模块组件注册" class="headerlink" title="新模块组件注册"></a>新模块组件注册</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">containerBuilder.RegisterModule&amp;lt; DefaultModuleRegister&amp;gt; ();</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">using Autofac;</span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line">namespace YFJK.BasicServices.Host.Builder</span><br><span class="line">&#123;</span><br><span class="line">    public class DefaultModuleRegister : Module</span><br><span class="line">    &#123;</span><br><span class="line">        protected override void Load(ContainerBuilder builder)</span><br><span class="line">        &#123;</span><br><span class="line">            builder.RegisterType&amp;lt; Models.BaseResponse&amp;gt; ().AsSelf();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="指定构造函数参数注册"><a href="#指定构造函数参数注册" class="headerlink" title="指定构造函数参数注册"></a>指定构造函数参数注册</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">containerBuilder.RegisterType&amp;lt; Neo4jHelper&amp;gt; ().WithParameters(new List&amp;lt; NamedParameter&amp;gt; ()</span><br><span class="line">          &#123;</span><br><span class="line">              new NamedParameter(&quot;bolturl&quot;,Configuration[&quot;Neo4jSetting:Bolt&quot;]),</span><br><span class="line">              new NamedParameter(&quot;httpurl&quot;,Configuration[&quot;Neo4jSetting:Url&quot;]),</span><br><span class="line">              new NamedParameter(&quot;user&quot;,SecurityCommon.DecryptDES(Configuration[&quot;Neo4jSetting:User&quot;])),</span><br><span class="line">              new NamedParameter(&quot;password&quot;,SecurityCommon.DecryptDES(Configuration[&quot;Neo4jSetting:Password&quot;])),</span><br><span class="line">          &#125;).SingleInstance();</span><br></pre></td></tr></table></figure><h5 id="其他注入实例调用注册"><a href="#其他注入实例调用注册" class="headerlink" title="其他注入实例调用注册"></a>其他注入实例调用注册</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">containerBuilder.Register(a =&amp;gt; </span><br><span class="line">      &#123;</span><br><span class="line">          return new MongoClient(a.Resolve&amp;lt; YFConsulConfig&amp;gt; ().GetConfig(&quot;BertPreditMongoDBConfig:Conn&quot;));</span><br><span class="line">      &#125;).Named&amp;lt; MongoClient&amp;gt; (&quot;BertPredit&quot;);</span><br></pre></td></tr></table></figure><h4 id="封装使用common"><a href="#封装使用common" class="headerlink" title="封装使用common"></a>封装使用common</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">using Autofac;</span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Text;</span><br><span class="line"></span><br><span class="line">namespace YFJK.ScheduleTask.Library</span><br><span class="line">&#123;</span><br><span class="line">    public class AutoFacCommon</span><br><span class="line">    &#123;</span><br><span class="line">        private static IContainer AutofacContainer;</span><br><span class="line"></span><br><span class="line">        public static void Init(IContainer container)</span><br><span class="line">        &#123;</span><br><span class="line">            AutofacContainer = container;</span><br><span class="line">        &#125;</span><br><span class="line">        public static void Dispose()</span><br><span class="line">        &#123;</span><br><span class="line">            AutofacContainer.Dispose();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public static T GetInstance&amp;lt; T&amp;gt; (string name = null, ILifetimeScope scope = null)</span><br><span class="line">        &#123;</span><br><span class="line">            if (scope == null)</span><br><span class="line">            &#123;</span><br><span class="line">                using (scope = AutofacContainer.BeginLifetimeScope())</span><br><span class="line">                &#123;</span><br><span class="line">                    if (string.IsNullOrWhiteSpace(name))</span><br><span class="line">                    &#123;</span><br><span class="line">                        return scope.Resolve&amp;lt; T&amp;gt; ();</span><br><span class="line">                    &#125;</span><br><span class="line">                    return scope.ResolveNamed&amp;lt; T&amp;gt; (name);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                if (string.IsNullOrWhiteSpace(name))</span><br><span class="line">                &#123;</span><br><span class="line">                    return scope.Resolve&amp;lt; T&amp;gt; ();</span><br><span class="line">                &#125;</span><br><span class="line">                return scope.ResolveNamed&amp;lt; T&amp;gt; (name);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        public static ILifetimeScope GetScope()</span><br><span class="line">        &#123;</span><br><span class="line">            return AutofacContainer.BeginLifetimeScope();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意 使用sqlconnection等资源时  按需求可能需要先获取scope 主动释放</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="c#" scheme="https://guochen2.github.io/categories/c/"/>
    
    
      <category term="netcore" scheme="https://guochen2.github.io/tags/netcore/"/>
    
      <category term="autofac" scheme="https://guochen2.github.io/tags/autofac/"/>
    
  </entry>
  
  <entry>
    <title>netcore2.2跨域</title>
    <link href="https://guochen2.github.io/2020/02/15/netcore2.2/cors/"/>
    <id>https://guochen2.github.io/2020/02/15/netcore2.2/cors/</id>
    <published>2020-02-15T06:12:52.000Z</published>
    <updated>2020-11-23T13:46:49.694Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="NuGet引用"><a href="#NuGet引用" class="headerlink" title="NuGet引用"></a>NuGet引用</h4><p>Microsoft.AspNetCore.Cors<br>Startup.cs文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">services.AddCors(options =&gt;</span><br><span class="line">options.AddPolicy(&quot;AllowAllOrgin&quot;,</span><br><span class="line">builder =&gt; builder.AllowAnyMethod().AllowAnyHeader().AllowAnyOrigin().AllowCredentials()));</span><br></pre></td></tr></table></figure><p>启用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app.UseCors();</span><br></pre></td></tr></table></figure><p>控制器</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[EnableCors(&quot;AllowAllOrgin&quot;)]</span><br><span class="line">public class GetBatchJobHistoryController : ControllerBase</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="c#" scheme="https://guochen2.github.io/categories/c/"/>
    
    
      <category term="netcore" scheme="https://guochen2.github.io/tags/netcore/"/>
    
      <category term="跨域" scheme="https://guochen2.github.io/tags/%E8%B7%A8%E5%9F%9F/"/>
    
  </entry>
  
  <entry>
    <title>netcore2.2集成SqlSugar</title>
    <link href="https://guochen2.github.io/2020/02/15/netcore2.2/SqlSugar/"/>
    <id>https://guochen2.github.io/2020/02/15/netcore2.2/SqlSugar/</id>
    <published>2020-02-15T06:09:35.000Z</published>
    <updated>2020-11-23T13:46:49.688Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>文档地址 <a href="http://www.codeisbug.com/Doc/8">http://www.codeisbug.com/Doc/8</a></p><h4 id="nuget引用"><a href="#nuget引用" class="headerlink" title="nuget引用"></a>nuget引用</h4><p>sqlSugarCore<br>示例代码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">using SqlSugar;</span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Text;</span><br><span class="line">using EntityRiskUiBackend.Application;</span><br><span class="line">using System.Linq;</span><br><span class="line">using EntityRiskUiBackend.Entity.DTO;</span><br><span class="line">using EntityInfo = EntityRiskUiBackend.Entity.DTO.EntityInfo;</span><br><span class="line">using EntityRiskUiBackend.Repos.SqlSugar.Extensions.DataCache;</span><br><span class="line"></span><br><span class="line">namespace EntityRiskUiBackend.Repos.DB</span><br><span class="line">&#123;</span><br><span class="line">    public class SqlSugarDbContext</span><br><span class="line">    &#123;</span><br><span class="line">        public SqlSugarDbContext()</span><br><span class="line">        &#123;</span><br><span class="line">            Db = new SqlSugarClient(new ConnectionConfig()</span><br><span class="line">            &#123;</span><br><span class="line">                ConnectionString = EntityRiskUiBackend.Application.Config.DBConfig.DBConnectionString,</span><br><span class="line">                DbType = DbType.SqlServer,</span><br><span class="line">                InitKeyType = InitKeyType.SystemTable,//从特性读取主键和自增列信息</span><br><span class="line">                IsAutoCloseConnection = true,//开启自动释放模式和EF原理一样我就不多解释了</span><br><span class="line">                ConfigureExternalServices = new ConfigureExternalServices()</span><br><span class="line">                &#123;</span><br><span class="line">                    DataInfoCacheService = new MemoryCache() //MemoryCache是继承ICacheService自已实现的一个类</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            //调式代码 用来打印SQL </span><br><span class="line">            Db.Aop.OnLogExecuting = (sql, pars) =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(sql + &quot;\r\n&quot; +</span><br><span class="line">                    Db.Utilities.SerializeObject(pars.ToDictionary(it =&gt; it.ParameterName, it =&gt; it.Value)));</span><br><span class="line">                Console.WriteLine();</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            Db.Aop.OnDiffLogEvent = it =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                var editBeforeData = it.BeforeData;</span><br><span class="line">                var editAfterData = it.AfterData;</span><br><span class="line">                var sql = it.Sql;</span><br><span class="line">                var parameter = it.Parameters;</span><br><span class="line">                var data = it.BusinessData;</span><br><span class="line">                var time = it.Time;</span><br><span class="line">                var diffType = it.DiffType;//枚举值 insert 、update 和 delete 用来作业务区分</span><br><span class="line">                Console.WriteLine($&quot; 记录执行的日志 进行审计 &#123;editBeforeData&#125; &#123;editAfterData&#125; &#123;sql&#125; &#123;parameter&#125; &#123;data&#125; &#123;time&#125; &#123;diffType&#125;&quot;);</span><br><span class="line">                //你可以在这里面写日志方法</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        //注意：不能写成静态的，不能写成静态的</span><br><span class="line">        public SqlSugarClient Db;//用来处理事务多表查询和复杂的操作</span><br><span class="line"></span><br><span class="line">        public SimpleClient&lt;Enterpris&gt; EnterprisDb &#123; get &#123; return new SimpleClient&lt;Enterpris&gt;(Db); &#125; &#125;</span><br><span class="line"></span><br><span class="line">        public SimpleClient&lt;EntityInfo&gt; EntityInfoDb &#123; get &#123; return new SimpleClient&lt;EntityInfo&gt;(Db); &#125; &#125;</span><br><span class="line">        public SimpleClient&lt;CreditChinaEntityBasicInfo&gt; CreditChinaEntityBasicInfoDb &#123; get &#123; return new SimpleClient&lt;CreditChinaEntityBasicInfo&gt;(Db); &#125; &#125;</span><br><span class="line">        public SimpleClient&lt;SystemUsers&gt; SystemUserDb &#123; get &#123; return new SimpleClient&lt;SystemUsers&gt;(Db); &#125; &#125;</span><br><span class="line"></span><br><span class="line">        public SimpleClient&lt;News&gt; NewsDb &#123; get &#123; return new SimpleClient&lt;News&gt;(Db); &#125; &#125;</span><br><span class="line">        public SimpleClient&lt;RiskFactor&gt; RiskFactorDb &#123; get &#123; return new SimpleClient&lt;RiskFactor&gt;(Db); &#125; &#125;</span><br><span class="line">        public SimpleClient&lt;RiskUiJobHistory&gt; RiskUiJobHistoryDb &#123; get &#123; return new SimpleClient&lt;RiskUiJobHistory&gt;(Db); &#125; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>缓存</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">using EntityRiskUiBackend.Application.Helper;</span><br><span class="line">using SqlSugar;</span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Text;</span><br><span class="line"></span><br><span class="line">namespace EntityRiskUiBackend.Repos.SqlSugar.Extensions.DataCache</span><br><span class="line">&#123;</span><br><span class="line">    class MemoryCache : ICacheService</span><br><span class="line">    &#123;</span><br><span class="line">        public void Add&lt;V&gt;(string key, V value)</span><br><span class="line">        &#123;</span><br><span class="line">            MemoryCacheHelper&lt;V&gt;.GetInstance().Add(key, value);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public void Add&lt;V&gt;(string key, V value, int cacheDurationInSeconds)</span><br><span class="line">        &#123;</span><br><span class="line">            MemoryCacheHelper&lt;V&gt;.GetInstance().Add(key, value, cacheDurationInSeconds);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public bool ContainsKey&lt;V&gt;(string key)</span><br><span class="line">        &#123;</span><br><span class="line">            return MemoryCacheHelper&lt;V&gt;.GetInstance().ContainsKey(key);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public V Get&lt;V&gt;(string key)</span><br><span class="line">        &#123;</span><br><span class="line">            return MemoryCacheHelper&lt;V&gt;.GetInstance().Get(key);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public IEnumerable&lt;string&gt; GetAllKey&lt;V&gt;()</span><br><span class="line">        &#123;</span><br><span class="line">            throw new NotImplementedException();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public V GetOrCreate&lt;V&gt;(string cacheKey, Func&lt;V&gt; create, int cacheDurationInSeconds = int.MaxValue)</span><br><span class="line">        &#123;</span><br><span class="line">            var cacheManager = MemoryCacheHelper&lt;V&gt;.GetInstance();</span><br><span class="line">            if (cacheManager.ContainsKey(cacheKey))</span><br><span class="line">            &#123;</span><br><span class="line">                return cacheManager[cacheKey];</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                var result = create();</span><br><span class="line">                cacheManager.Add(cacheKey, result, cacheDurationInSeconds);</span><br><span class="line">                return result;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public void Remove&lt;V&gt;(string key)</span><br><span class="line">        &#123;</span><br><span class="line">            MemoryCacheHelper&lt;V&gt;.GetInstance().Remove(key);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="c#" scheme="https://guochen2.github.io/categories/c/"/>
    
    
      <category term="netcore" scheme="https://guochen2.github.io/tags/netcore/"/>
    
      <category term="Sqlsugar" scheme="https://guochen2.github.io/tags/Sqlsugar/"/>
    
  </entry>
  
  <entry>
    <title>netcore2.2集成Swagger</title>
    <link href="https://guochen2.github.io/2020/02/15/netcore2.2/Swagger/"/>
    <id>https://guochen2.github.io/2020/02/15/netcore2.2/Swagger/</id>
    <published>2020-02-15T05:58:45.000Z</published>
    <updated>2020-11-23T13:46:49.689Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="Nuget引用"><a href="#Nuget引用" class="headerlink" title="Nuget引用"></a>Nuget引用</h4><p>Swashbuckle.AspNetCore<br>安装 <a href="https://www.cnblogs.com/yilezhu/p/9241261.html">https://www.cnblogs.com/yilezhu/p/9241261.html</a><br>关键代码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">services.AddSwaggerGen(c =&gt;</span><br><span class="line">&#123;</span><br><span class="line">c.SwaggerDoc(&quot;v1&quot;, new Info</span><br><span class="line">&#123;</span><br><span class="line">Version = &quot;v1&quot;,</span><br><span class="line">Title = &quot;EntityRiskUiBackendApi API&quot;,</span><br><span class="line">Description = &quot;EntityRiskUiBackendApi ASP.NET Core Web API&quot;,</span><br><span class="line">Contact = new Contact</span><br><span class="line">&#123;</span><br><span class="line">Name = &quot;webname&quot;,</span><br><span class="line">Email = string.Empty,</span><br><span class="line">Url = &quot;http://emergingriskanalytics.com/cn/index.aspx&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">// 为 Swagger JSON and UI设置xml文档注释路径</span><br><span class="line">var basePath = System.IO.Path.GetDirectoryName(typeof(Program).Assembly.Location);//获取应用程序所在目录（绝对，不受工作目录影响，建议采用此方法获取路径）</span><br><span class="line">var xmlPath = System.IO.Path.Combine(basePath, xmlname);</span><br><span class="line">c.IncludeXmlComments(xmlPath);</span><br><span class="line">c.OperationFilter&lt;SwaggerOperationFilter&gt;(); // 手动高亮</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="启用中间件服务生成Swagger作为JSON终结点"><a href="#启用中间件服务生成Swagger作为JSON终结点" class="headerlink" title="启用中间件服务生成Swagger作为JSON终结点"></a>启用中间件服务生成Swagger作为JSON终结点</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app.UseSwagger();</span><br></pre></td></tr></table></figure><h4 id="启用中间件服务对swagger-ui，指定Swagger-JSON终结点"><a href="#启用中间件服务对swagger-ui，指定Swagger-JSON终结点" class="headerlink" title="启用中间件服务对swagger-ui，指定Swagger JSON终结点"></a>启用中间件服务对swagger-ui，指定Swagger JSON终结点</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app.UseSwaggerUI(c =&gt;</span><br><span class="line">&#123;</span><br><span class="line">c.SwaggerEndpoint(&quot;/swagger/v1/swagger.json&quot;, &quot;V1&quot;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>项目生成配置里<br><img src="/2020/02/15/netcore2.2/Swagger/image2019-3-27&#32;15_53_45.png" alt="a"><br>若要添加特殊的header</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class SwaggerOperationFilter : IOperationFilter</span><br><span class="line">&#123;</span><br><span class="line">public void Apply(Operation operation, OperationFilterContext context)</span><br><span class="line">&#123;</span><br><span class="line">operation.Parameters = operation.Parameters ?? new List&lt;IParameter&gt;();</span><br><span class="line">var info = context.MethodInfo;</span><br><span class="line">context.ApiDescription.TryGetMethodInfo(out info);</span><br><span class="line">try</span><br><span class="line">&#123;</span><br><span class="line">Attribute attribute = info.GetCustomAttribute(typeof(Microsoft.AspNetCore.Authorization.AuthorizeAttribute));</span><br><span class="line">if (attribute != null)</span><br><span class="line">&#123;</span><br><span class="line">operation.Parameters.Add(new BodyParameter</span><br><span class="line">&#123;</span><br><span class="line">Name = &quot;auth&quot;,</span><br><span class="line">@In = &quot;header&quot;,</span><br><span class="line">Description = &quot;access_token&quot;,</span><br><span class="line">Required = true</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">catch</span><br><span class="line">&#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="c#" scheme="https://guochen2.github.io/categories/c/"/>
    
    
      <category term="netcore" scheme="https://guochen2.github.io/tags/netcore/"/>
    
      <category term="Swagger" scheme="https://guochen2.github.io/tags/Swagger/"/>
    
  </entry>
  
  <entry>
    <title>netcore2.2集成链路追踪SkyWalking</title>
    <link href="https://guochen2.github.io/2020/02/15/netcore2.2/SkyWalking/"/>
    <id>https://guochen2.github.io/2020/02/15/netcore2.2/SkyWalking/</id>
    <published>2020-02-15T05:42:14.000Z</published>
    <updated>2020-11-23T13:46:49.681Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h4><p>要想使用skywalking，首先得安装相关环境。本文以windows为例。</p><p>1 安装java sdk（如果不会配置java环境的话，请参考百度百科：<a href="https://jingyan.baidu.com/article/08b6a591bdb18314a80922a0.html）">https://jingyan.baidu.com/article/08b6a591bdb18314a80922a0.html）</a></p><p>2 java环境安装完成后，下载Elasticsearch进行安装 <a href="https://www.elastic.co/downloads/elasticsearch">https://www.elastic.co/downloads/elasticsearch</a> （本文使用skywalking 6.x版本，6.x版本对应使用ES 6.x版本，请自行下载对应版本）</p><p>3 下载完Elasticsearch 后将Elasticsearch解压到安装位置，以我电脑为例，我安装在D:\Program Files</p><p>4 修改ES配置，进入ES文件下的：\config，找到elasticsearch.yml，打开后修改如下配置：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># ======================== Elasticsearch Configuration =========================</span><br><span class="line">#</span><br><span class="line"># NOTE: Elasticsearch comes with reasonable defaults for most settings.</span><br><span class="line">#       Before you set out to tweak and tune the configuration, make sure you</span><br><span class="line">#       understand what are you trying to accomplish and the consequences.</span><br><span class="line">#</span><br><span class="line"># The primary way of configuring a node is via this file. This template lists</span><br><span class="line"># the most important settings you may want to configure for a production cluster.</span><br><span class="line">#</span><br><span class="line"># Please consult the documentation for further information on configuration options:</span><br><span class="line"># https://www.elastic.co/guide/en/elasticsearch/reference/index.html</span><br><span class="line">#</span><br><span class="line"># ---------------------------------- Cluster -----------------------------------</span><br><span class="line">#</span><br><span class="line"># Use a descriptive name for your cluster:</span><br><span class="line">#</span><br><span class="line">cluster.name: myskywalking</span><br><span class="line">#</span><br><span class="line"># ------------------------------------ Node ------------------------------------</span><br><span class="line">#</span><br><span class="line"># Use a descriptive name for the node:</span><br><span class="line">#</span><br><span class="line">node.name: node-1</span><br><span class="line">#</span><br><span class="line"># Add custom attributes to the node:</span><br><span class="line">#</span><br><span class="line">#node.attr.rack: r1</span><br><span class="line">#</span><br><span class="line"># ----------------------------------- Paths ------------------------------------</span><br><span class="line">#</span><br><span class="line"># Path to directory where to store the data (separate multiple locations by comma):</span><br><span class="line">#</span><br><span class="line">path.data: D:/Program Files/elasticsearch-6.6.2/path/to/data</span><br><span class="line">#</span><br><span class="line"># Path to log files:</span><br><span class="line">#</span><br><span class="line">path.logs: D:/Program Files/elasticsearch-6.6.2/path/to/logs</span><br><span class="line">#</span><br><span class="line"># ----------------------------------- Memory -----------------------------------</span><br><span class="line">#</span><br><span class="line"># Lock the memory on startup:</span><br><span class="line">#</span><br><span class="line">bootstrap.memory_lock: false</span><br><span class="line">#</span><br><span class="line"># Make sure that the heap size is set to about half the memory available</span><br><span class="line"># on the system and that the owner of the process is allowed to use this</span><br><span class="line"># limit.</span><br><span class="line">#</span><br><span class="line"># Elasticsearch performs poorly when the system is swapping the memory.</span><br><span class="line">#</span><br><span class="line"># ---------------------------------- Network -----------------------------------</span><br><span class="line">#</span><br><span class="line"># Set the bind address to a specific IP (IPv4 or IPv6):</span><br><span class="line">#</span><br><span class="line">network.host: 0.0.0.0</span><br><span class="line">http.port: 9200</span><br><span class="line">http.cors.enabled: true </span><br><span class="line">http.cors.allow-origin: &quot;*&quot; </span><br><span class="line">http.cors.allow-methods: OPTIONS,HEAD,GET,POST,PUT,DELETE</span><br><span class="line">http.cors.allow-headers: &quot;X-Requested-With, Content-Type, Content-Length, X-Users&quot;</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># For more information, consult the network module documentation.</span><br><span class="line">#</span><br><span class="line"># --------------------------------- Discovery ----------------------------------</span><br><span class="line">#</span><br><span class="line"># Pass an initial list of hosts to perform discovery when new node is started:</span><br><span class="line"># The default list of hosts is [&quot;127.0.0.1&quot;, &quot;[::1]&quot;]</span><br><span class="line">#</span><br><span class="line">#discovery.zen.ping.unicast.hosts: [&quot;host1&quot;, &quot;host2&quot;]</span><br><span class="line">#</span><br><span class="line"># Prevent the &quot;split brain&quot; by configuring the majority of nodes (total number of master-eligible nodes / 2 + 1):</span><br><span class="line">#</span><br><span class="line">#discovery.zen.minimum_master_nodes: </span><br><span class="line">#</span><br><span class="line"># For more information, consult the zen discovery module documentation.</span><br><span class="line">#</span><br><span class="line"># ---------------------------------- Gateway -----------------------------------</span><br><span class="line">#</span><br><span class="line"># Block initial recovery after a full cluster restart until N nodes are started:</span><br><span class="line">#</span><br><span class="line">#gateway.recover_after_nodes: 3</span><br><span class="line">#</span><br><span class="line"># For more information, consult the gateway module documentation.</span><br><span class="line">#</span><br><span class="line"># ---------------------------------- Various -----------------------------------</span><br><span class="line">#</span><br><span class="line"># Require explicit names when deleting indices:</span><br><span class="line">#</span><br><span class="line">#action.destructive_requires_name: true</span><br></pre></td></tr></table></figure><p>修改好elasticsearch.yml文件后，打开cmd命令，进入到D:\Program Files\elasticsearch-6.6.2\bin，bin文件夹下，输入如下命令：  elasticsearch-service.bat install  将ES安装成windows，这样就可以方便系统重启后自动启动</p><p>然后将服务启动后即可<br>5 接下来下载skywalking，<a href="http://skywalking.apache.org/downloads/">http://skywalking.apache.org/downloads/</a><br>6 选择版本为 ：6.0.0-GA 的下载</p><h4 id="配置和效果"><a href="#配置和效果" class="headerlink" title="配置和效果"></a>配置和效果</h4><p>1 在本地电脑中创建一个文件夹（注意：本人亲自躺过的坑，skywalking服务必须放在无空格的文件夹，比如：Program Files这个文件是绝对不能放的，不然服务运行的时候只会一闪而过，连log日志都不会生成，切记！切记！切记！）</p><p>我在D盘下创建了一个叫skyworkingService文件，路径如下：D:\skyworkingService</p><p>将下好的skywalking解压到该目录下，命名为skywalking-apm-GA，路径如下：D:\skyworkingService\skywalking-apm-GA</p><p>接着，打开config文件，找到application.yml文件，修改其配置如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Licensed to the Apache Software Foundation (ASF) under one</span><br><span class="line"># or more contributor license agreements.  See the NOTICE file</span><br><span class="line"># distributed with this work for additional information</span><br><span class="line"># regarding copyright ownership.  The ASF licenses this file</span><br><span class="line"># to you under the Apache License, Version 2.0 (the</span><br><span class="line"># &quot;License&quot;); you may not use this file except in compliance</span><br><span class="line"># with the License.  You may obtain a copy of the License at</span><br><span class="line">#</span><br><span class="line">#     http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="line">#</span><br><span class="line"># Unless required by applicable law or agreed to in writing, software</span><br><span class="line"># distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="line"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="line"># See the License for the specific language governing permissions and</span><br><span class="line"># limitations under the License.</span><br><span class="line"></span><br><span class="line">cluster:</span><br><span class="line">  standalone:</span><br><span class="line">  # Please check your ZooKeeper is 3.5+, However, it is also compatible with ZooKeeper 3.4.x. Replace the ZooKeeper 3.5+</span><br><span class="line">  # library the oap-libs folder with your ZooKeeper 3.4.x library.</span><br><span class="line">#  zookeeper:</span><br><span class="line">#    nameSpace: $&#123;SW_NAMESPACE:&quot;&quot;&#125;</span><br><span class="line">#    hostPort: $&#123;SW_CLUSTER_ZK_HOST_PORT:localhost:2181&#125;</span><br><span class="line">#    #Retry Policy</span><br><span class="line">#    baseSleepTimeMs: $&#123;SW_CLUSTER_ZK_SLEEP_TIME:1000&#125; # initial amount of time to wait between retries</span><br><span class="line">#    maxRetries: $&#123;SW_CLUSTER_ZK_MAX_RETRIES:3&#125; # max number of times to retry</span><br><span class="line">#  kubernetes:</span><br><span class="line">#    watchTimeoutSeconds: $&#123;SW_CLUSTER_K8S_WATCH_TIMEOUT:60&#125;</span><br><span class="line">#    namespace: $&#123;SW_CLUSTER_K8S_NAMESPACE:default&#125;</span><br><span class="line">#    labelSelector: $&#123;SW_CLUSTER_K8S_LABEL:app=collector,release=skywalking&#125;</span><br><span class="line">#    uidEnvName: $&#123;SW_CLUSTER_K8S_UID:SKYWALKING_COLLECTOR_UID&#125;</span><br><span class="line">#  consul:</span><br><span class="line">#    serviceName: $&#123;SW_SERVICE_NAME:&quot;SkyWalking_OAP_Cluster&quot;&#125;</span><br><span class="line">#     Consul cluster nodes, example: 10.0.0.1:8500,10.0.0.2:8500,10.0.0.3:8500</span><br><span class="line">#    hostPort: $&#123;SW_CLUSTER_CONSUL_HOST_PORT:localhost:8500&#125;</span><br><span class="line">core:</span><br><span class="line">  default:</span><br><span class="line">    restHost: $&#123;SW_CORE_REST_HOST:0.0.0.0&#125;</span><br><span class="line">    restPort: $&#123;SW_CORE_REST_PORT:12800&#125;</span><br><span class="line">    restContextPath: $&#123;SW_CORE_REST_CONTEXT_PATH:/&#125;</span><br><span class="line">    gRPCHost: $&#123;SW_CORE_GRPC_HOST:0.0.0.0&#125;</span><br><span class="line">    gRPCPort: $&#123;SW_CORE_GRPC_PORT:11800&#125;</span><br><span class="line">    downsampling:</span><br><span class="line">    - Hour</span><br><span class="line">    - Day</span><br><span class="line">    - Month</span><br><span class="line">    # Set a timeout on metric data. After the timeout has expired, the metric data will automatically be deleted.</span><br><span class="line">    recordDataTTL: $&#123;SW_CORE_RECORD_DATA_TTL:90&#125; # Unit is minute</span><br><span class="line">    minuteMetricsDataTTL: $&#123;SW_CORE_MINUTE_METRIC_DATA_TTL:90&#125; # Unit is minute</span><br><span class="line">    hourMetricsDataTTL: $&#123;SW_CORE_HOUR_METRIC_DATA_TTL:36&#125; # Unit is hour</span><br><span class="line">    dayMetricsDataTTL: $&#123;SW_CORE_DAY_METRIC_DATA_TTL:45&#125; # Unit is day</span><br><span class="line">    monthMetricsDataTTL: $&#123;SW_CORE_MONTH_METRIC_DATA_TTL:18&#125; # Unit is month</span><br><span class="line">storage:</span><br><span class="line">  # h2:</span><br><span class="line">    # driver: $&#123;SW_STORAGE_H2_DRIVER:org.h2.jdbcx.JdbcDataSource&#125;</span><br><span class="line">    # url: $&#123;SW_STORAGE_H2_URL:jdbc:h2:mem:skywalking-oap-db&#125;</span><br><span class="line">    # user: $&#123;SW_STORAGE_H2_USER:sa&#125;</span><br><span class="line"> elasticsearch:</span><br><span class="line">   nameSpace: $&#123;SW_NAMESPACE:&quot;myskywalking&quot;&#125;</span><br><span class="line">   clusterNodes: $&#123;SW_STORAGE_ES_CLUSTER_NODES:localhost:9200&#125;</span><br><span class="line">   indexShardsNumber: $&#123;SW_STORAGE_ES_INDEX_SHARDS_NUMBER:2&#125;</span><br><span class="line">   indexReplicasNumber: $&#123;SW_STORAGE_ES_INDEX_REPLICAS_NUMBER:0&#125;</span><br><span class="line">   # Batch process setting, refer to https://www.elastic.co/guide/en/elasticsearch/client/java-api/5.5/java-docs-bulk-processor.html</span><br><span class="line">   bulkActions: $&#123;SW_STORAGE_ES_BULK_ACTIONS:2000&#125; # Execute the bulk every 2000 requests</span><br><span class="line">   bulkSize: $&#123;SW_STORAGE_ES_BULK_SIZE:20&#125; # flush the bulk every 20mb</span><br><span class="line">   flushInterval: $&#123;SW_STORAGE_ES_FLUSH_INTERVAL:10&#125; # flush the bulk every 10 seconds whatever the number of requests</span><br><span class="line">   concurrentRequests: $&#123;SW_STORAGE_ES_CONCURRENT_REQUESTS:2&#125; # the number of concurrent requests</span><br><span class="line">receiver-register:</span><br><span class="line">  default:</span><br><span class="line">receiver-trace:</span><br><span class="line">  default:</span><br><span class="line">    bufferPath: $&#123;SW_RECEIVER_BUFFER_PATH:../trace-buffer/&#125;  # Path to trace buffer files, suggest to use absolute path</span><br><span class="line">    bufferOffsetMaxFileSize: $&#123;SW_RECEIVER_BUFFER_OFFSET_MAX_FILE_SIZE:100&#125; # Unit is MB</span><br><span class="line">    bufferDataMaxFileSize: $&#123;SW_RECEIVER_BUFFER_DATA_MAX_FILE_SIZE:500&#125; # Unit is MB</span><br><span class="line">    bufferFileCleanWhenRestart: $&#123;SW_RECEIVER_BUFFER_FILE_CLEAN_WHEN_RESTART:false&#125;</span><br><span class="line">    sampleRate: $&#123;SW_TRACE_SAMPLE_RATE:10000&#125; # The sample rate precision is 1/10000. 10000 means 100% sample in default.</span><br><span class="line">receiver-jvm:</span><br><span class="line">  default:</span><br><span class="line">#service-mesh:</span><br><span class="line">#  default:</span><br><span class="line">#    bufferPath: $&#123;SW_SERVICE_MESH_BUFFER_PATH:../mesh-buffer/&#125;  # Path to trace buffer files, suggest to use absolute path</span><br><span class="line">#    bufferOffsetMaxFileSize: $&#123;SW_SERVICE_MESH_OFFSET_MAX_FILE_SIZE:100&#125; # Unit is MB</span><br><span class="line">#    bufferDataMaxFileSize: $&#123;SW_SERVICE_MESH_BUFFER_DATA_MAX_FILE_SIZE:500&#125; # Unit is MB</span><br><span class="line">#    bufferFileCleanWhenRestart: $&#123;SW_SERVICE_MESH_BUFFER_FILE_CLEAN_WHEN_RESTART:false&#125;</span><br><span class="line">#istio-telemetry:</span><br><span class="line">#  default:</span><br><span class="line">#receiver_zipkin:</span><br><span class="line">#  default:</span><br><span class="line">#    host: $&#123;SW_RECEIVER_ZIPKIN_HOST:0.0.0.0&#125;</span><br><span class="line">#    port: $&#123;SW_RECEIVER_ZIPKIN_PORT:9411&#125;</span><br><span class="line">#    contextPath: $&#123;SW_RECEIVER_ZIPKIN_CONTEXT_PATH:/&#125;</span><br><span class="line">query:</span><br><span class="line">  graphql:</span><br><span class="line">    path: $&#123;SW_QUERY_GRAPHQL_PATH:/graphql&#125;</span><br><span class="line">alarm:</span><br><span class="line">  default:</span><br><span class="line">telemetry:</span><br><span class="line">  none:</span><br></pre></td></tr></table></figure><p>修改完成后，进入到bin文件中，右键单击startup.bat，以管理员权限运行，即可看到如下弹框<br><img src="https://img2018.cnblogs.com/blog/454803/201903/454803-20190328180936010-948518283.png" alt="a"></p><p>弹出这两个框说明服务已经启动了</p><p>这个时候访问<a href="http://localhost:8080">http://localhost:8080</a> 即可看到如下界面：<br><img src="https://img2018.cnblogs.com/blog/454803/201903/454803-20190328181139381-1448090552.png" alt="a"><br>默认账号admin，密码admin，登录后看看到想要的监控数据和各服务直接的拓扑图，因为我的服务跑了一段时间，所以下面的界面是有数据的：<br><img src="https://img2018.cnblogs.com/blog/454803/201903/454803-20190328181321564-2076207334.png" alt="a"><br><img src="https://img2018.cnblogs.com/blog/454803/201903/454803-20190328181332395-1500346165.png" alt="a"><br>2 由于启动skywalking后会弹出两个命令窗口，所以如果运维人员不小心关了窗口的话服务自然就停掉了，所以为了避免这种问题，我们还可以将bin文件夹下的oapService.bat和webappService.bat进行配置，如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@REM</span><br><span class="line">@REM  Licensed to the Apache Software Foundation (ASF) under one or more</span><br><span class="line">@REM  contributor license agreements.  See the NOTICE file distributed with</span><br><span class="line">@REM  this work for additional information regarding copyright ownership.</span><br><span class="line">@REM  The ASF licenses this file to You under the Apache License, Version 2.0</span><br><span class="line">@REM  (the &quot;License&quot;); you may not use this file except in compliance with</span><br><span class="line">@REM  the License.  You may obtain a copy of the License at</span><br><span class="line">@REM</span><br><span class="line">@REM      http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="line">@REM</span><br><span class="line">@REM  Unless required by applicable law or agreed to in writing, software</span><br><span class="line">@REM  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="line">@REM  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="line">@REM  See the License for the specific language governing permissions and</span><br><span class="line">@REM  limitations under the License.</span><br><span class="line"></span><br><span class="line">@echo off</span><br><span class="line"></span><br><span class="line">setlocal</span><br><span class="line">set OAP_PROCESS_TITLE=Skywalking-Collector</span><br><span class="line">set OAP_HOME=%~dp0%..</span><br><span class="line">set OAP_OPTS=&quot;-Xms256M -Xmx512M -Doap.logDir=%OAP_HOME%\logs&quot;</span><br><span class="line"></span><br><span class="line">set CLASSPATH=%OAP_HOME%\config;.;</span><br><span class="line">set CLASSPATH=%OAP_HOME%\oap-libs\*;%CLASSPATH%</span><br><span class="line"></span><br><span class="line">if defined JAVA_HOME (</span><br><span class="line"> set _EXECJAVA=&quot;%JAVA_HOME%\bin\javaw&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">if not defined JAVA_HOME (</span><br><span class="line"> echo &quot;JAVA_HOME not set.&quot;</span><br><span class="line"> set _EXECJAVA=javaw</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">start &quot;%OAP_PROCESS_TITLE%&quot; %_EXECJAVA% &quot;%OAP_OPTS%&quot; -cp &quot;%CLASSPATH%&quot; org.apache.skywalking.oap.server.starter.OAPServerStartUp</span><br><span class="line">endlocal</span><br><span class="line"></span><br><span class="line">oapService.bat</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@REM</span><br><span class="line">@REM  Licensed to the Apache Software Foundation (ASF) under one or more</span><br><span class="line">@REM  contributor license agreements.  See the NOTICE file distributed with</span><br><span class="line">@REM  this work for additional information regarding copyright ownership.</span><br><span class="line">@REM  The ASF licenses this file to You under the Apache License, Version 2.0</span><br><span class="line">@REM  (the &quot;License&quot;); you may not use this file except in compliance with</span><br><span class="line">@REM  the License.  You may obtain a copy of the License at</span><br><span class="line">@REM</span><br><span class="line">@REM      http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="line">@REM</span><br><span class="line">@REM  Unless required by applicable law or agreed to in writing, software</span><br><span class="line">@REM  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="line">@REM  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="line">@REM  See the License for the specific language governing permissions and</span><br><span class="line">@REM  limitations under the License.</span><br><span class="line"></span><br><span class="line">@echo off</span><br><span class="line"></span><br><span class="line">setlocal</span><br><span class="line">set WEBAPP_PROCESS_TITLE=Skywalking-Webapp</span><br><span class="line">set WEBAPP_HOME=%~dp0%..</span><br><span class="line">set JARPATH=%WEBAPP_HOME%\webapp</span><br><span class="line">set WEBAPP_LOG_DIR=%WEBAPP_HOME%\logs</span><br><span class="line"></span><br><span class="line">if exist &quot;%WEBAPP_LOG_DIR%&quot; (</span><br><span class="line">    mkdir &quot;%WEBAPP_LOG_DIR%&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">set LOG_FILE_LOCATION=%WEBAPP_LOG_DIR%\webapp.log</span><br><span class="line"></span><br><span class="line">if defined JAVA_HOME (</span><br><span class="line"> set _EXECJAVA=&quot;%JAVA_HOME%\bin\javaw&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">if not defined JAVA_HOME (</span><br><span class="line"> echo &quot;JAVA_HOME not set.&quot;</span><br><span class="line"> set _EXECJAVA=javaw</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">start &quot;%WEBAPP_PROCESS_TITLE%&quot; %_EXECJAVA%  -jar %JARPATH%/skywalking-webapp.jar --spring.config.location=%JARPATH%/webapp.yml --logging.file=%LOG_FILE_LOCATION%</span><br><span class="line">endlocal</span><br><span class="line"></span><br><span class="line">webappService.bat</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其实只是将文件里的java改成了javaw，这样就可以在后台运行了，保存后再次运行startup.bat文件，这个时候界面上会有个cmd命令界面一闪而过，不要慌，我们打开资源管理器看看，会发现进程中多了两个名为“javaw.exe”的进程</p><p>这个时候访问：<a href="http://localhost:8080">http://localhost:8080</a> 一样可以看到上面的ui界面！</p><p>至此，skywalking的所有环境皆搭建完毕，接下来，在我们项目中添加skywalking的探针，方便skywalking收集我们项目中的数据</p><h4 id="项目引用skywalking探针"><a href="#项目引用skywalking探针" class="headerlink" title="项目引用skywalking探针"></a>项目引用skywalking探针</h4><p>新建一个NetCore的webapi，然后在引用中引用 SkyAPM.Agent.AspNetCore 0.8.0 如图：</p><p><img src="https://img2018.cnblogs.com/blog/454803/201903/454803-20190329161450123-59197023.png" alt="a"></p><p>项目引用后，在项目中添加环境变量，可以使用skywalking 官网使用说明书中的命令，进入项目文件夹，给项目配置环境变量并运行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set ASPNETCORE_HOSTINGSTARTUPASSEMBLIES=SkyAPM.Agent.AspNetCore</span><br><span class="line">set SKYWALKING__SERVICENAME=sample_app</span><br><span class="line">dotnet run</span><br></pre></td></tr></table></figure><p>也可以自己手动给项目添加环境变量，本文以给项目添加环境变量为例：</p><p><img src="https://img2018.cnblogs.com/blog/454803/201903/454803-20190329162040093-1533463993.png" alt="a"></p><p>在项目的Properties下找到launchSettings.json，按上图所示，在environmentVariables节点下分别添加一下环境变量：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&quot;ASPNETCORE_HOSTINGSTARTUPASSEMBLIES&quot;: &quot;SkyAPM.Agent.AspNetCore&quot;,</span><br><span class="line">&quot;SKYWALKING__SERVICENAME&quot;: &quot;sample_app&quot;</span><br></pre></td></tr></table></figure><p>添加完环境变量后，打开cmd，进入到项目根目录（比如我项目是在F:\NEW_TMS\OtherProject\V1.0\XiangYu.AreaModules\WebApi.AreaServer 这个目录下，切记一定要进入到项目根目录，不然配置文件就生成到别的地方去了）</p><p>运行一下代码 安装SkyAPM.Dotnet.CLI：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dotnet tool install -g SkyAPM.DotNet.CLI</span><br></pre></td></tr></table></figure><p>然使用skyapm生成配置文件，命令如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dotnet skyapm config sample_app 192.168.0.1:11800</span><br></pre></td></tr></table></figure><p>其中192.168.0.1:11800是上面我们安装完成的skywalking服务端里配置的，将这个ip改成上面服务器的ip即可</p><p>执行完上面的命令后，项目下会生成一个名为skyapm.json的文件，其中的代码如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;SkyWalking&quot;: &#123;</span><br><span class="line">    &quot;ServiceName&quot;: &quot;sample_app&quot;,</span><br><span class="line">    &quot;Namespace&quot;: &quot;&quot;,</span><br><span class="line">    &quot;HeaderVersions&quot;: [</span><br><span class="line">      &quot;sw6&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;Sampling&quot;: &#123;</span><br><span class="line">      &quot;SamplePer3Secs&quot;: -1,</span><br><span class="line">      &quot;Percentage&quot;: -1.0</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;Logging&quot;: &#123;</span><br><span class="line">      &quot;Level&quot;: &quot;Information&quot;,</span><br><span class="line">      &quot;FilePath&quot;: &quot;logs\\skyapm-&#123;Date&#125;.log&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;Transport&quot;: &#123;</span><br><span class="line">      &quot;Interval&quot;: 3000,</span><br><span class="line">      &quot;ProtocolVersion&quot;: &quot;v6&quot;,</span><br><span class="line">      &quot;QueueSize&quot;: 30000,</span><br><span class="line">      &quot;BatchSize&quot;: 3000,</span><br><span class="line">      &quot;gRPC&quot;: &#123;</span><br><span class="line">        &quot;Servers&quot;: &quot;192.168.0.1:11800&quot;,</span><br><span class="line">        &quot;Timeout&quot;: 10000,</span><br><span class="line">        &quot;ConnectTimeout&quot;: 10000,</span><br><span class="line">        &quot;ReportTimeout&quot;: 600000</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>skyapm.json文件不一定要使用命令生成，也可自己在项目中创建一个名为skyapm.json的文件，然后将上面代码复制进去，修改其ip即可</p><p>在vs中右键单击skyapm.json，选择属性——》复制到输出目录——》如果较新则复制</p><p><img src="https://img2018.cnblogs.com/blog/454803/201904/454803-20190401134411940-1347480936.png" alt="a"></p><p><img src="https://img2018.cnblogs.com/blog/454803/201904/454803-20190401134421683-2079287191.png" alt="a"></p><p>然后选择控制台运行项目即可</p><p><img src="https://img2018.cnblogs.com/blog/454803/201904/454803-20190401134431802-853454945.png" alt="a"></p><p>运行代码后，项目根目录下会自动生成logs文件夹，该日志文件已skyapm- 为开头命名，打开后可以查看当前服务的skywalking探针运行情况，</p><p><img src="https://img2018.cnblogs.com/blog/454803/201904/454803-20190401134705530-1888161346.png" alt="a"></p><p>日志如上图所示，即证明skywalking探针已经成功，接下来请求一下你的接口，然后进入skywalking的ui中看看你的成果吧！<br>如果服务运行在docker中，请在docker-compose中设置环境变量，不然skywalking是运行不起来的，我们是将docker环境变量存入到一个.env文件中，如图</p><p><img src="https://img2018.cnblogs.com/blog/454803/201904/454803-20190401134915678-383246142.png" alt="a"></p><p><img src="https://img2018.cnblogs.com/blog/454803/201904/454803-20190401134932847-1080043093.png" alt="a"></p><p>　这样docker运行之后会就会有相关环境变量了</p><p><img src="/2020/02/15/netcore2.2/SkyWalking/image2019-9-4&#32;17_50_52.png" alt="a"><br><img src="/2020/02/15/netcore2.2/SkyWalking/image2019-9-4&#32;17_52_3.png" alt="a"><br><img src="/2020/02/15/netcore2.2/SkyWalking/image2019-9-4&#32;17_53_37.png" alt="a"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="c#" scheme="https://guochen2.github.io/categories/c/"/>
    
    
      <category term="netcore" scheme="https://guochen2.github.io/tags/netcore/"/>
    
      <category term="SkyWalking" scheme="https://guochen2.github.io/tags/SkyWalking/"/>
    
  </entry>
  
  <entry>
    <title>netcore2.2集成nlog</title>
    <link href="https://guochen2.github.io/2020/02/15/netcore2.2/nlog/"/>
    <id>https://guochen2.github.io/2020/02/15/netcore2.2/nlog/</id>
    <published>2020-02-15T04:32:19.000Z</published>
    <updated>2020-11-23T13:46:49.697Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="Nuget引用"><a href="#Nuget引用" class="headerlink" title="Nuget引用"></a>Nuget引用</h4><p>NLog.Web.AspNetCore</p><h4 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">using Microsoft.Extensions.Logging;</span><br><span class="line">using NLog.Web;</span><br><span class="line">using NLog.Extensions.Logging;</span><br><span class="line">public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory)</span><br><span class="line">&#123;</span><br><span class="line">    //引入Nlog配置文件</span><br><span class="line">    env.ConfigureNLog(&quot;nlog.config&quot;);</span><br><span class="line">    //使用NLog作为日志记录工具</span><br><span class="line">    loggerFactory.AddNLog();</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">using Microsoft.Extensions.Logging;</span><br><span class="line">using NLog;</span><br><span class="line">        </span><br><span class="line">private Logger _logger;</span><br><span class="line"> </span><br><span class="line">public BondNewsController(YfjkDbContext context,</span><br><span class="line">ILogger&lt;BondNewsController&gt; logger)</span><br><span class="line">&#123;</span><br><span class="line">    _db = context;</span><br><span class="line">    _logger = LogManager.GetCurrentClassLogger();</span><br><span class="line">    _logger.Debug(&quot;BondNewsController Init!!!!!!!!!!!!!!!&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="nlog-config"><a href="#nlog-config" class="headerlink" title="nlog.config"></a>nlog.config</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nlog</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.nlog-project.org/schemas/NLog.xsd&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">autoReload</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">internalLogLevel</span>=<span class="string">&quot;Warn&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">internalLogFile</span>=<span class="string">&quot;internal-nlog.txt&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--define various log targets--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">targets</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--write logs to file--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;target xsi:type=&quot;File&quot; name=&quot;allfile&quot; fileName=&quot;logs/all/nlog-all-$&#123;shortdate&#125;.log&quot;</span></span><br><span class="line"><span class="comment">                  layout=&quot;$&#123;longdate&#125;||$&#123;logger&#125;||$&#123;uppercase:$&#123;level&#125;&#125;||$&#123;message&#125; $&#123;exception&#125;&quot; /&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;target  name=&quot;ownFile-web&quot; xsi:type=&quot;File&quot; fileName=&quot;logs/my/nlog-my-$&#123;shortdate&#125;.log&quot;</span></span><br><span class="line"><span class="comment">             layout=&quot;$&#123;longdate&#125;||$&#123;logger&#125;||$&#123;uppercase:$&#123;level&#125;&#125;||$&#123;message&#125; $&#123;exception&#125;&quot; /&gt;</span></span><br><span class="line"><span class="comment">     </span></span><br><span class="line"><span class="comment">    &lt;target name=&quot;error_file&quot; xsi:type=&quot;File&quot;</span></span><br><span class="line"><span class="comment">                       fileName=&quot;logs/my/nlog-error-$&#123;shortdate&#125;.log&quot; maxArchiveFiles=&quot;30&quot;</span></span><br><span class="line"><span class="comment">                       layout=&quot;$&#123;longdate&#125; || $&#123;level:uppercase=false&#125; || $&#123;message&#125; $&#123;onexception:$&#123;exception:format=tostring&#125; $&#123;newline&#125; $&#123;stacktrace&#125; $&#123;newline&#125;&#125;&quot; /&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">xsi:type</span>=<span class="string">&quot;Null&quot;</span> <span class="attr">name</span>=<span class="string">&quot;blackhole&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">&quot;allfile&quot;</span> <span class="attr">xsi:type</span>=<span class="string">&quot;File&quot;</span> <span class="attr">fileName</span>=<span class="string">&quot;logs/all/nlog-all-$&#123;shortdate&#125;.log&quot;</span>   <span class="attr">encoding</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">layout</span> <span class="attr">xsi:type</span>=<span class="string">&quot;JsonLayout&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attribute</span> <span class="attr">name</span>=<span class="string">&quot;@timestamp&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;longdate&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attribute</span> <span class="attr">name</span>=<span class="string">&quot;level&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;uppercase:$&#123;level&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attribute</span> <span class="attr">name</span>=<span class="string">&quot;logger&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;logger&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attribute</span> <span class="attr">name</span>=<span class="string">&quot;content&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;message&#125;&quot;</span>  <span class="attr">escapeUnicode</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attribute</span> <span class="attr">name</span>=<span class="string">&quot;exceptionmessage&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;exception:format=Message&#125;&quot;</span> <span class="attr">escapeUnicode</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attribute</span> <span class="attr">name</span>=<span class="string">&quot;stacktrace&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;exception:format=StackTrace&#125;&quot;</span> <span class="attr">escapeUnicode</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">&quot;info-file&quot;</span> <span class="attr">xsi:type</span>=<span class="string">&quot;File&quot;</span> <span class="attr">fileName</span>=<span class="string">&quot;logs/info/nlog-info-$&#123;shortdate&#125;.log&quot;</span> &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">layout</span> <span class="attr">xsi:type</span>=<span class="string">&quot;JsonLayout&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attribute</span> <span class="attr">name</span>=<span class="string">&quot;@timestamp&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;longdate&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attribute</span> <span class="attr">name</span>=<span class="string">&quot;level&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;uppercase:$&#123;level&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attribute</span> <span class="attr">name</span>=<span class="string">&quot;timelytype&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;event-properties:timelytype&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attribute</span> <span class="attr">name</span>=<span class="string">&quot;timelycontent&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;event-properties:timelycontent&#125;&quot;</span>  <span class="attr">escapeUnicode</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attribute</span> <span class="attr">name</span>=<span class="string">&quot;logger&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;logger&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attribute</span> <span class="attr">name</span>=<span class="string">&quot;content&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;message&#125;&quot;</span>  <span class="attr">escapeUnicode</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">&quot;error_file&quot;</span> <span class="attr">xsi:type</span>=<span class="string">&quot;File&quot;</span> <span class="attr">fileName</span>=<span class="string">&quot;logs/info/nlog-error-$&#123;shortdate&#125;.log&quot;</span>   <span class="attr">encoding</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">layout</span> <span class="attr">xsi:type</span>=<span class="string">&quot;JsonLayout&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attribute</span> <span class="attr">name</span>=<span class="string">&quot;@timestamp&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;longdate&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attribute</span> <span class="attr">name</span>=<span class="string">&quot;level&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;uppercase:$&#123;level&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attribute</span> <span class="attr">name</span>=<span class="string">&quot;timelytype&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;event-properties:timelytype&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attribute</span> <span class="attr">name</span>=<span class="string">&quot;timelycontent&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;event-properties:timelycontent&#125;&quot;</span>  <span class="attr">escapeUnicode</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attribute</span> <span class="attr">name</span>=<span class="string">&quot;logger&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;logger&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attribute</span> <span class="attr">name</span>=<span class="string">&quot;content&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;message&#125;&quot;</span>  <span class="attr">escapeUnicode</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attribute</span> <span class="attr">name</span>=<span class="string">&quot;exceptionmessage&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;exception:format=Message&#125;&quot;</span> <span class="attr">escapeUnicode</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attribute</span> <span class="attr">name</span>=<span class="string">&quot;stacktrace&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;exception:format=StackTrace&#125;&quot;</span> <span class="attr">escapeUnicode</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">&quot;coloredConsole&quot;</span> <span class="attr">xsi:type</span>=<span class="string">&quot;ColoredConsole&quot;</span> <span class="attr">useDefaultRowHighlightingRules</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">layout</span>=<span class="string">&quot;$&#123;longdate&#125;|$&#123;pad:padding=5:inner=$&#123;level:uppercase=true&#125;&#125;|$&#123;message&#125;&quot;</span> &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">highlight-row</span> <span class="attr">condition</span>=<span class="string">&quot;level == LogLevel.Debug&quot;</span> <span class="attr">foregroundColor</span>=<span class="string">&quot;DarkGray&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">highlight-row</span> <span class="attr">condition</span>=<span class="string">&quot;level == LogLevel.Info&quot;</span> <span class="attr">foregroundColor</span>=<span class="string">&quot;Gray&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">highlight-row</span> <span class="attr">condition</span>=<span class="string">&quot;level == LogLevel.Warn&quot;</span> <span class="attr">foregroundColor</span>=<span class="string">&quot;Yellow&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">highlight-row</span> <span class="attr">condition</span>=<span class="string">&quot;level == LogLevel.Error&quot;</span> <span class="attr">foregroundColor</span>=<span class="string">&quot;Red&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">highlight-row</span> <span class="attr">condition</span>=<span class="string">&quot;level == LogLevel.Fatal&quot;</span> <span class="attr">foregroundColor</span>=<span class="string">&quot;Red&quot;</span> <span class="attr">backgroundColor</span>=<span class="string">&quot;White&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">targets</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rules</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--All logs, including from Microsoft--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;*&quot;</span> <span class="attr">minlevel</span>=<span class="string">&quot;Trace&quot;</span> <span class="attr">writeTo</span>=<span class="string">&quot;allfile&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Skip Microsoft logs and so log only own logs--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;Microsoft.*&quot;</span> <span class="attr">minlevel</span>=<span class="string">&quot;Trace&quot;</span> <span class="attr">writeTo</span>=<span class="string">&quot;blackhole&quot;</span> <span class="attr">final</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;*&quot;</span> <span class="attr">level</span>=<span class="string">&quot;Info&quot;</span> <span class="attr">writeTo</span>=<span class="string">&quot;info-file&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;*&quot;</span> <span class="attr">level</span>=<span class="string">&quot;Error&quot;</span> <span class="attr">writeTo</span>=<span class="string">&quot;error_file&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;*&quot;</span> <span class="attr">minlevel</span>=<span class="string">&quot;Trace&quot;</span> <span class="attr">writeTo</span>=<span class="string">&quot;coloredConsole&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">rules</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nlog</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="添加自定义的日志内容"><a href="#添加自定义的日志内容" class="headerlink" title="添加自定义的日志内容"></a>添加自定义的日志内容</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">attribute</span> <span class="attr">name</span>=<span class="string">&quot;@timestamp&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;longdate&#125;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">attribute</span> <span class="attr">name</span>=<span class="string">&quot;level&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;uppercase:$&#123;level&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">attribute</span> <span class="attr">name</span>=<span class="string">&quot;timelytype&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;event-properties:timelytype&#125;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">attribute</span> <span class="attr">name</span>=<span class="string">&quot;timelycontent&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;event-properties:timelycontent&#125;&quot;</span>  <span class="attr">escapeUnicode</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">attribute</span> <span class="attr">name</span>=<span class="string">&quot;logger&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;logger&#125;&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--由于使用filebeat 这里不能使用message作为key--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">attribute</span> <span class="attr">name</span>=<span class="string">&quot;content&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;message&#125;&quot;</span>  <span class="attr">escapeUnicode</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">attribute</span> <span class="attr">name</span>=<span class="string">&quot;exceptionmessage&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;exception:format=Message&#125;&quot;</span> <span class="attr">escapeUnicode</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">attribute</span> <span class="attr">name</span>=<span class="string">&quot;stacktrace&quot;</span> <span class="attr">layout</span>=<span class="string">&quot;$&#123;exception:format=StackTrace&#125;&quot;</span> <span class="attr">escapeUnicode</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h4 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">using Castle.Core.Logging;</span><br><span class="line">using NLog;</span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.Text;</span><br><span class="line">namespace EntityRiskUiBackendApi.Extensions</span><br><span class="line">&#123;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// NetCore Nlog扩展</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public static class NLoggerExtensions</span><br><span class="line">    &#123;</span><br><span class="line">        private static NLog.ILogger nlogger;</span><br><span class="line">        static NLoggerExtensions()</span><br><span class="line">        &#123;</span><br><span class="line">            nlogger = LogManager.GetCurrentClassLogger();</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 自定义日志</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=&quot;logger&quot;&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=&quot;message&quot;&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=&quot;keyValuePairs&quot;&gt;nlog配置里的event-properties自定义项&lt;/param&gt;</span><br><span class="line">        public static void CustomInfoLog(this Microsoft.Extensions.Logging.ILogger logger, string message, Dictionary&lt;string, object&gt; keyValuePairs)</span><br><span class="line">        &#123;</span><br><span class="line">            if (keyValuePairs != null)</span><br><span class="line">            &#123;</span><br><span class="line">                LogEventInfo theEvent = new LogEventInfo(LogLevel.Info, logger.ToString(), message);</span><br><span class="line">                foreach (var item in keyValuePairs)</span><br><span class="line">                &#123;</span><br><span class="line">                    theEvent.Properties[item.Key] = item.Value;</span><br><span class="line">                &#125;</span><br><span class="line">                nlogger.Log(theEvent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        /// &lt;summary&gt;</span><br><span class="line">        /// 往钉钉推送的消息</span><br><span class="line">        /// &lt;/summary&gt;</span><br><span class="line">        /// &lt;param name=&quot;logger&quot;&gt;&lt;/param&gt;</span><br><span class="line">        /// &lt;param name=&quot;message&quot;&gt;&lt;/param&gt;</span><br><span class="line">        public static void CustomInfoLogToDingDing(this Microsoft.Extensions.Logging.ILogger logger, string message)</span><br><span class="line">        &#123;</span><br><span class="line">            Dictionary&lt;string, object&gt; keyValuePairs = new Dictionary&lt;string, object&gt;();</span><br><span class="line">            keyValuePairs.Add(&quot;timelytype&quot;, &quot;dingding&quot;);</span><br><span class="line">            keyValuePairs.Add(&quot;timelycontent&quot;, message);</span><br><span class="line">            logger.CustomInfoLog(message, keyValuePairs);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="扩展调用"><a href="#扩展调用" class="headerlink" title="扩展调用"></a>扩展调用</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_logger.CustomInfoLogToDingDing($&quot;裁判系统用户&#123;userName&#125;登录成功了&quot;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="c#" scheme="https://guochen2.github.io/categories/c/"/>
    
    
      <category term="netcore" scheme="https://guochen2.github.io/tags/netcore/"/>
    
      <category term="log" scheme="https://guochen2.github.io/tags/log/"/>
    
  </entry>
  
  <entry>
    <title>netcore2.2集成jwt</title>
    <link href="https://guochen2.github.io/2020/02/15/netcore2.2/jwt/"/>
    <id>https://guochen2.github.io/2020/02/15/netcore2.2/jwt/</id>
    <published>2020-02-15T04:25:08.000Z</published>
    <updated>2020-11-23T13:46:49.695Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="NuGet引用"><a href="#NuGet引用" class="headerlink" title="NuGet引用"></a>NuGet引用</h4><p>System.IdentityModel.Tokens.Jwt</p><h4 id="appsettings-json里添加"><a href="#appsettings-json里添加" class="headerlink" title="appsettings.json里添加"></a>appsettings.json里添加</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;JwtSettings&quot;</span>: &#123;</span><br><span class="line"><span class="attr">&quot;Issuer&quot;</span>: <span class="string">&quot;thisisissuer&quot;</span>,</span><br><span class="line"><span class="attr">&quot;Audience&quot;</span>: <span class="string">&quot;thisisaudience&quot;</span>,</span><br><span class="line"><span class="attr">&quot;SecretKey&quot;</span>: <span class="string">&quot;abcdefglsdkfjlsdkfd1&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="添加扩展"><a href="#添加扩展" class="headerlink" title="添加扩展"></a>添加扩展</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> </span><br><span class="line">public static IServiceCollection AddJwtBearerProvider(this IServiceCollection services, IConfiguration Configuration)</span><br><span class="line">&#123;</span><br><span class="line">services.Configure&lt;JwtSettings&gt;(Configuration.GetSection(&quot;JwtSettings&quot;));</span><br><span class="line">JwtSettings setting = new JwtSettings();</span><br><span class="line">Configuration.Bind(&quot;JwtSettings&quot;, setting);</span><br><span class="line">services.AddAuthentication(option =&gt;</span><br><span class="line">&#123;</span><br><span class="line">option.DefaultAuthenticateScheme = JwtBearerDefaults.AuthenticationScheme;</span><br><span class="line">option.DefaultChallengeScheme = JwtBearerDefaults.AuthenticationScheme;</span><br><span class="line">&#125;).AddJwtBearer(config =&gt;</span><br><span class="line">&#123;</span><br><span class="line">//jwt默认是Authorization:&#x27;Bearer&#x27; Token 形式 自定义成 Bearer</span><br><span class="line">config.Events = new JwtBearerEvents()</span><br><span class="line">&#123;</span><br><span class="line">OnMessageReceived = context =&gt;</span><br><span class="line">&#123;</span><br><span class="line">var token = context.Request.Headers[&quot;auth&quot;];</span><br><span class="line">context.Token = token.FirstOrDefault();</span><br><span class="line">return Task.CompletedTask;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">config.TokenValidationParameters = new Microsoft.IdentityModel.Tokens.TokenValidationParameters</span><br><span class="line">&#123;</span><br><span class="line">//NameClaimType = JwtClaimTypes.Name,</span><br><span class="line">//RoleClaimType = JwtClaimTypes.Role,</span><br><span class="line">//Token颁发机构</span><br><span class="line">ValidIssuer = setting.Issuer,</span><br><span class="line">//颁发给谁</span><br><span class="line">ValidAudience = setting.Audience,</span><br><span class="line">//这里的key要进行加密，需要引用Microsoft.IdentityModel.Tokens</span><br><span class="line">IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(setting.SecretKey)),</span><br><span class="line">ValidateIssuerSigningKey = true,</span><br><span class="line">ValidateIssuer = true, //Whether or not validate Issuer</span><br><span class="line">ValidateAudience = true, //Whether or not validate Audience</span><br><span class="line">////是否验证Token有效期，使用当前时间与Token的Claims中的NotBefore和Expires对比</span><br><span class="line">ValidateLifetime = true,</span><br><span class="line">////允许的服务器时间偏移量</span><br><span class="line">ClockSkew = TimeSpan.FromSeconds(1)</span><br><span class="line">&#125;;</span><br><span class="line">&#125;);</span><br><span class="line">return services;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="启用验证-此处会启用jwt验证"><a href="#启用验证-此处会启用jwt验证" class="headerlink" title="启用验证 此处会启用jwt验证"></a>启用验证 此处会启用jwt验证</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">app.UseAuthentication();</span><br></pre></td></tr></table></figure><h4 id="登陆接口生成token"><a href="#登陆接口生成token" class="headerlink" title="登陆接口生成token"></a>登陆接口生成token</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var claims = new Claim[] &#123;</span><br><span class="line">new Claim(ClaimTypes.Name,authInfo.un),</span><br><span class="line">//new Claim(ClaimTypes.Role, &quot;ma&quot;),//多个权限重复添加</span><br><span class="line">//new Claim(ClaimTypes.Role, &quot;mamama&quot;),</span><br><span class="line">//new Claim(&quot;EmployeeNumber&quot;, &quot;true&quot;),//添加用户访问权限</span><br><span class="line">new Claim(&quot;emp&quot;,JsonConvert.SerializeObject(authInfo)),</span><br><span class="line">new Claim(JwtRegisteredClaimNames.Sub, &quot;Client&quot;),</span><br><span class="line">new Claim(JwtRegisteredClaimNames.Jti, Guid.NewGuid().ToString()),</span><br><span class="line">new Claim(JwtRegisteredClaimNames.Iat, $&quot;&#123;new DateTimeOffset(DateTime.Now).ToUnixTimeSeconds()&#125;&quot;),</span><br><span class="line">new Claim(JwtRegisteredClaimNames.Nbf, $&quot;&#123;new DateTimeOffset(DateTime.Now).ToUnixTimeSeconds()&#125;&quot;) ,</span><br><span class="line">//这个就是过期时间，目前是8小时，可自定义，注意JWT有自己的缓冲过期时间</span><br><span class="line">new Claim(JwtRegisteredClaimNames.Exp, $&quot;&#123;new DateTimeOffset(DateTime.Now.AddHours(1)).ToUnixTimeSeconds()&#125;&quot;),</span><br><span class="line">&#125;;</span><br><span class="line">var key = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(setting.SecretKey));</span><br><span class="line">var creds = new SigningCredentials(key, SecurityAlgorithms.HmacSha256);</span><br><span class="line">var token = new JwtSecurityToken(</span><br><span class="line">setting.Issuer,</span><br><span class="line">setting.Audience,</span><br><span class="line">claims,</span><br><span class="line">signingCredentials: creds);</span><br><span class="line">string token=new JwtSecurityTokenHandler().WriteToken(token);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="c#" scheme="https://guochen2.github.io/categories/c/"/>
    
    
      <category term="netcore" scheme="https://guochen2.github.io/tags/netcore/"/>
    
  </entry>
  
  <entry>
    <title>vuecli3注意事项</title>
    <link href="https://guochen2.github.io/2020/01/07/vue-1/"/>
    <id>https://guochen2.github.io/2020/01/07/vue-1/</id>
    <published>2020-01-07T07:46:45.000Z</published>
    <updated>2020-11-23T13:46:49.753Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="关闭prefetch"><a href="#关闭prefetch" class="headerlink" title="关闭prefetch"></a>关闭prefetch</h3><p>vuecli3.0默认会启用prefetch 会将所有js都放到index.html里导致首页加载时间较长，从vue.config.js里关闭<br><a href="https://cli.vuejs.org/zh/guide/html-and-static-assets.html#prefetch">https://cli.vuejs.org/zh/guide/html-and-static-assets.html#prefetch</a></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// vue.config.js</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">chainWebpack</span>: <span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 移除 prefetch 插件</span></span><br><span class="line">    config.plugins.delete(<span class="string">&#x27;prefetch&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 或者</span></span><br><span class="line">    <span class="comment">// 修改它的选项：</span></span><br><span class="line">    config.plugin(<span class="string">&#x27;prefetch&#x27;</span>).tap(<span class="function"><span class="params">options</span> =&gt;</span> &#123;</span><br><span class="line">      options[<span class="number">0</span>].fileBlacklist = options[<span class="number">0</span>].fileBlacklist || []</span><br><span class="line">      options[<span class="number">0</span>].fileBlacklist.push(<span class="regexp">/myasyncRoute(.)+?\.js$/</span>)</span><br><span class="line">      <span class="keyword">return</span> options</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="设置输出目录"><a href="#设置输出目录" class="headerlink" title="设置输出目录"></a>设置输出目录</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// vue.config.js</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="attr">outputDir</span>: <span class="string">&#x27;../src/wwwroot&#x27;</span>,  <span class="comment">//可以设置相对当前目录得相对路径</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="打包关闭map"><a href="#打包关闭map" class="headerlink" title="打包关闭map"></a>打包关闭map</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// vue.config.js</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">       <span class="attr">productionSourceMap</span>: <span class="literal">false</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="前端" scheme="https://guochen2.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="vue" scheme="https://guochen2.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>anaconda部分命令</title>
    <link href="https://guochen2.github.io/2020/01/07/python/python-anaconda-1/"/>
    <id>https://guochen2.github.io/2020/01/07/python/python-anaconda-1/</id>
    <published>2020-01-07T04:07:52.000Z</published>
    <updated>2020-11-23T13:46:49.737Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="https://anaconda.org/">anaconda官网</a><br><a href="https://www.anaconda.com/distribution/">下载地址</a></p><h4 id="window设置环境变量"><a href="#window设置环境变量" class="headerlink" title="window设置环境变量"></a>window设置环境变量</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">D:\Anaconda3\condabin</span><br></pre></td></tr></table></figure><h3 id="创建环境"><a href="#创建环境" class="headerlink" title="创建环境"></a>创建环境</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda create --name python37 python=3.7</span><br></pre></td></tr></table></figure><h3 id="切换环境"><a href="#切换环境" class="headerlink" title="切换环境"></a>切换环境</h3><h4 id="window"><a href="#window" class="headerlink" title="window"></a>window</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">activate python37</span><br></pre></td></tr></table></figure><h4 id="linux切换"><a href="#linux切换" class="headerlink" title="linux切换"></a>linux切换</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source activate python37</span><br></pre></td></tr></table></figure><h3 id="退出环境"><a href="#退出环境" class="headerlink" title="退出环境"></a>退出环境</h3><h4 id="window-1"><a href="#window-1" class="headerlink" title="window"></a>window</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deactivate</span><br></pre></td></tr></table></figure><h4 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source deactivate</span><br></pre></td></tr></table></figure><h3 id="显示已创建环境"><a href="#显示已创建环境" class="headerlink" title="显示已创建环境"></a>显示已创建环境</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda info -e</span><br></pre></td></tr></table></figure><h3 id="删除环境"><a href="#删除环境" class="headerlink" title="删除环境"></a>删除环境</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda remove --name python37 --all</span><br></pre></td></tr></table></figure><h3 id="克隆环境-从AAA-克隆到BBB"><a href="#克隆环境-从AAA-克隆到BBB" class="headerlink" title="克隆环境 从AAA 克隆到BBB"></a>克隆环境 从AAA 克隆到BBB</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda create -n BBB --clone AAA</span><br></pre></td></tr></table></figure><h3 id="conda-修改国内源"><a href="#conda-修改国内源" class="headerlink" title="conda 修改国内源"></a>conda 修改国内源</h3><ul><li><p>查看当前的配置</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda config --show channels </span><br></pre></td></tr></table></figure></li><li><p>若无提示  初始化配置</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda config</span><br></pre></td></tr></table></figure></li><li><p>添加国内源</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/</span><br><span class="line">conda config --set show_channel_urls yes</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="python" scheme="https://guochen2.github.io/categories/python/"/>
    
    
      <category term="anaconda" scheme="https://guochen2.github.io/tags/anaconda/"/>
    
  </entry>
  
  <entry>
    <title>pm2-安装与部分命令</title>
    <link href="https://guochen2.github.io/2020/01/07/pm2-1/"/>
    <id>https://guochen2.github.io/2020/01/07/pm2-1/</id>
    <published>2020-01-07T03:53:44.000Z</published>
    <updated>2021-09-01T07:37:56.582Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i -g pm2</span><br></pre></td></tr></table></figure><h3 id="window"><a href="#window" class="headerlink" title="window"></a>window</h3><h4 id="安装并配置-pm2-windows-service"><a href="#安装并配置-pm2-windows-service" class="headerlink" title="安装并配置 pm2-windows-service"></a>安装并配置 pm2-windows-service</h4><p>pm2-windows-service可以将 pm2 安装成 windows service, 达到开机运行的目的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i -g pm2-windows-service</span><br></pre></td></tr></table></figure><h4 id="添加pm2环境变量"><a href="#添加pm2环境变量" class="headerlink" title="添加pm2环境变量"></a>添加pm2环境变量</h4><p>添加系统环境变量 PM2_HOME=D:.pm2<br>右键 [我的电脑] - [属性] - [高级系统设置] - [环境变量] - 新建 [系统变量]<br>名称PM2_HOME<br>路径D:.pm2（这路径根据自己需要定）</p><h4 id="安装服务"><a href="#安装服务" class="headerlink" title="安装服务"></a>安装服务</h4><p>以管理员权限打开新的命令行窗口,执行以下命令来安装服务</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pm2-service-install</span><br></pre></td></tr></table></figure><p>Perform environment setup ? 选 n, 继续<br>此时, PM2服务已安装成功并已启动, 可以通过 Wn+R来查看，输入services.msc即可看到服务,可直接关闭cmd窗口</p><h4 id="卸载服务"><a href="#卸载服务" class="headerlink" title="卸载服务"></a>卸载服务</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pm2-service-uninstall</span><br></pre></td></tr></table></figure><h3 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h3><h4 id="创建service"><a href="#创建service" class="headerlink" title="创建service"></a>创建service</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pm2 startup</span><br></pre></td></tr></table></figure><h3 id="启动node程序"><a href="#启动node程序" class="headerlink" title="启动node程序"></a>启动node程序</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pm2 start app.js --name myapp</span><br></pre></td></tr></table></figure><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><h4 id="查看服务列表"><a href="#查看服务列表" class="headerlink" title="查看服务列表"></a>查看服务列表</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pm2 l 或 pm2 list</span><br></pre></td></tr></table></figure><h4 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pm2 log id</span><br></pre></td></tr></table></figure><h4 id="监控程序性能"><a href="#监控程序性能" class="headerlink" title="监控程序性能"></a>监控程序性能</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pm2 monit</span><br><span class="line">pm2 imonit</span><br></pre></td></tr></table></figure><h3 id="启动bat等不需要node的程序"><a href="#启动bat等不需要node的程序" class="headerlink" title="启动bat等不需要node的程序"></a>启动bat等不需要node的程序</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pm2 start XXX.bat --interpreter none</span><br></pre></td></tr></table></figure><h3 id="启动特殊程序"><a href="#启动特殊程序" class="headerlink" title="启动特殊程序"></a>启动特殊程序</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pm2 start npm -- run &lt;scriptname&gt;</span><br><span class="line">相当于 npm run &lt;scriptname&gt;</span><br><span class="line">-- 表示后面的是执行参数</span><br></pre></td></tr></table></figure><p>示例<br>bat或cmd需要执行以下命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">consul agent -server -datacenter=dc1 -bootstrap -data-dir ./data -node=n1 -bind 127.0.0.1 -client=0.0.0.0 -ui</span><br></pre></td></tr></table></figure><p>通过pm2创建 在consul程序目录下执行cmd  若有环境变量，可以在任意地方执行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pm2 start consul.exe --name=consul -- agent -server -datacenter=dc1 -bootstrap -data-dir ./data -node=n1 -bind 127.0.0.1 -client=0.0.0.0 -ui</span><br></pre></td></tr></table></figure><h3 id="禁用程序结束或异常退出后的自动重启"><a href="#禁用程序结束或异常退出后的自动重启" class="headerlink" title="禁用程序结束或异常退出后的自动重启"></a>禁用程序结束或异常退出后的自动重启</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pm2 start app.js --no-autorestart</span><br></pre></td></tr></table></figure><h3 id="pm2-备份与重启"><a href="#pm2-备份与重启" class="headerlink" title="pm2 备份与重启"></a>pm2 备份与重启</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pm2 dump // 此时会备份 pm2 list 中的所有项目启动方式</span><br><span class="line">pm2 resurrect // 重启备份的所有项目</span><br></pre></td></tr></table></figure><h3 id="执行python程序"><a href="#执行python程序" class="headerlink" title="执行python程序"></a>执行python程序</h3><ul><li>直接使用python解释器<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pm2 start a.py</span><br></pre></td></tr></table></figure></li><li>创建一个sh文件 执行sh<br>start.sh<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python a.py</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pm2 start start.sh</span><br></pre></td></tr></table></figure></li></ul><h2 id="部分问题"><a href="#部分问题" class="headerlink" title="部分问题"></a>部分问题</h2><ul><li><p>通过pm2执行python可能会有 ‘gbk’ codec can’t encode character 的异常 通过node执行也会有这个异常，但是通过cmd直接运行python无异常</p></li><li><p>Anaconda管理的多环境python 需要先activate到指定的环境后 再执行pm2 start 即可</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="运维" scheme="https://guochen2.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="pm2" scheme="https://guochen2.github.io/tags/pm2/"/>
    
  </entry>
  
  <entry>
    <title>tensorflow部分命令</title>
    <link href="https://guochen2.github.io/2020/01/07/python/python-tensorflow-1/"/>
    <id>https://guochen2.github.io/2020/01/07/python/python-tensorflow-1/</id>
    <published>2020-01-07T02:14:58.000Z</published>
    <updated>2020-11-23T13:46:49.739Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="检测Tensorflow可用设备-比如-显卡"><a href="#检测Tensorflow可用设备-比如-显卡" class="headerlink" title="检测Tensorflow可用设备(比如:显卡)"></a>检测Tensorflow可用设备(比如:显卡)</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python -c <span class="string">&quot;from tensorflow.python.client import device_lib;device_lib.list_local_devices()&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="python" scheme="https://guochen2.github.io/categories/python/"/>
    
    
      <category term="tensorflow" scheme="https://guochen2.github.io/tags/tensorflow/"/>
    
  </entry>
  
  <entry>
    <title>在Windows环境中使用Nginx, Consul, Consul Template搭建负载均衡和服务发现服务</title>
    <link href="https://guochen2.github.io/2019/12/26/nginx/nginx-consul-2/"/>
    <id>https://guochen2.github.io/2019/12/26/nginx/nginx-consul-2/</id>
    <published>2019-12-26T11:15:59.000Z</published>
    <updated>2020-11-23T13:46:49.700Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="搭建负载均衡和服务发现服务的目的"><a href="#搭建负载均衡和服务发现服务的目的" class="headerlink" title="搭建负载均衡和服务发现服务的目的"></a>搭建负载均衡和服务发现服务的目的</h4><p>随着网站业务的不断提升，单个服务器的性能越来越难满足客户的业务需求，所以很多情况下，需要使用多服务器实例和负载均衡器来满足业务需要。Nginx#什么是Nginx#Nginx一款高性能的Web服务器，它既可以单独使用，也可以作为负载均衡器与其他Web服务器组合使用。</p><p><img src="/2019/12/26/nginx/nginx-consul-2/localimg11.png" alt="a"></p><h3 id="Nginx安装"><a href="#Nginx安装" class="headerlink" title="Nginx安装"></a>Nginx安装</h3><p>我们可用从Nginx官网上（ <a href="http://nginx.org/">http://nginx.org/</a> ）下载最新的Windows版本压缩包。压缩包解压之后目录结构如下：<br><img src="/2019/12/26/nginx/nginx-consul-2/nginxlocal.png" alt="a"></p><h4 id="Nginx的配置"><a href="#Nginx的配置" class="headerlink" title="Nginx的配置"></a>Nginx的配置</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">events &#123;</span><br><span class="line">worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">upstream backend</span><br><span class="line">&#123;</span><br><span class="line">server 127.0.0.1:91 weight=1;</span><br><span class="line">server 127.0.0.1:92 weight=1;</span><br><span class="line">&#125;</span><br><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">location / &#123;</span><br><span class="line">proxy_pass http://backend;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中upstream部分定义了对于HTTP请求的负载均衡。 当用户发送请求到 <a href="http://backend">http://backend</a> 的时候，Nginx会将这个请求转发到指定服务器IP列表中的一个。配置中的weight字段设置了指定服务器IP的权重，权重越高，转发的可能性越高。</p><h4 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h4><p>Nginx默认会占用80端口，这个和IIS有冲突, 所以需要在nginx.conf中修改Nginx的默认端口</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">events &#123;</span><br><span class="line">worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">upstream backend</span><br><span class="line">&#123;</span><br><span class="line">server 127.0.0.1:92 weight=1;</span><br><span class="line">server 127.0.0.1:93 weight=1;</span><br><span class="line">&#125;</span><br><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">listen 81;</span><br><span class="line">server_name localhost;</span><br><span class="line">location / &#123;</span><br><span class="line">proxy_pass http://backend;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当前网站有2个实例部署在IIS中，siteA IP 127.0.0.1:92, siteB IP 127.0.0.1:93。siteA和siteB都只有一个index.html页面。<br>代码如下:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Nginx Sample<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>This is site A<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Nginx Sample<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>This is site B<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Nginx服务器使用81端口。 我们希望实现的效果是当用户访问<br><a href="http://127.0.0.1:81">http://127.0.0.1:81</a> 时<br>Nginx随机将请求转发到 <a href="http://127.0.0.1:92">http://127.0.0.1:92</a> 或者 <a href="http://127.0.0.1:93">http://127.0.0.1:93</a> 上</p><p><img src="/2019/12/26/nginx/nginx-consul-2/siteab.png" alt="a"></p><p>实现步骤a. 首先我们修改Nginx的配置文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">events &#123;</span><br><span class="line">worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">upstream 127.0.0.1</span><br><span class="line">&#123;</span><br><span class="line">server 127.0.0.1:91 weight=1;</span><br><span class="line">server 127.0.0.1:92 weight=1;</span><br><span class="line">&#125;</span><br><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">listen 81;</span><br><span class="line">server_name localhost;</span><br><span class="line">location / &#123;</span><br><span class="line">proxy_pass http://127.0.0.1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在命令行启动NginX<br><img src="/2019/12/26/nginx/nginx-consul-2/nginx1.png" alt="a"></p><p>打开浏览器，输入<a href="http://127.0.0.1:81">http://127.0.0.1:81</a>, 反复按F5刷新， 网站内容在siteA和siteB之间切换，这说明负载均衡已经成功启用。<br><img src="/2019/12/26/nginx/nginx-consul-2/siteabc.gif" alt="a"></p><h3 id="Consul"><a href="#Consul" class="headerlink" title="Consul"></a>Consul</h3><h4 id="什么是Consul"><a href="#什么是Consul" class="headerlink" title="什么是Consul"></a>什么是Consul</h4><p>Consul是一款用高性能服务注册/服务健康检查组件</p><h4 id="Consul安装"><a href="#Consul安装" class="headerlink" title="Consul安装"></a>Consul安装</h4><p>我们可以从官网(<a href="https://www.consul.io/downloads.html">https://www.consul.io/downloads.html</a>) 中对应版本的32位或64位程序。下载之后就是一个可执行文件consul.exe</p><h4 id="如何启动Consul"><a href="#如何启动Consul" class="headerlink" title="如何启动Consul"></a>如何启动Consul</h4><p>使用命令consul agent -dev, consul就会已开发模式启动（开发模式不会启用持久化，程序关闭后所有配置会丢失）</p><h4 id="Consul服务后台"><a href="#Consul服务后台" class="headerlink" title="Consul服务后台"></a>Consul服务后台</h4><p>Consul服务启动之后，我们可以访问，<a href="http://localhost:8500">http://localhost:8500</a> 来访问Consul的管理后台，界面如下。<br><img src="/2019/12/26/nginx/nginx-consul-2/65831-20180414221845184-1028038944.png" alt="a"><br>在这个管理后台中可以查看Consul注册的所有服务和所有主机节点。</p><h4 id="注册服务"><a href="#注册服务" class="headerlink" title="注册服务"></a>注册服务</h4><p>Consul服务启动之后，我们可以调用一些相应的Api来注册服务(相关Api列表 <a href="https://www.consul.io/api/index.html）">https://www.consul.io/api/index.html）</a></p><h4 id="继续我们的实例"><a href="#继续我们的实例" class="headerlink" title="继续我们的实例"></a>继续我们的实例</h4><p>现在我们尝试将之前的siteA, siteB注册到Consul中。</p><p>a. 首先这里我们去下载一个Curl程序（ <a href="https://curl.haxx.se/">https://curl.haxx.se/</a> ） 来调用Api(这里可以用POSTMAN代替)</p><p>b. 创建2个json文件siteA.json, siteB.json。其内容如下<br>siteA.json</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;ID&quot;:&quot;webA&quot;,</span><br><span class="line">    &quot;Name&quot;:&quot;web&quot;,</span><br><span class="line">    &quot;Tags&quot;:[],</span><br><span class="line">    &quot;Address&quot;:&quot;127.0.0.1&quot;,</span><br><span class="line">    &quot;Port&quot;:92,</span><br><span class="line">    &quot;EnableTagOverride&quot;:false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>siteB.json</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;ID&quot;:&quot;webB&quot;,</span><br><span class="line">    &quot;Name&quot;:&quot;web&quot;,</span><br><span class="line">    &quot;Tags&quot;:[],</span><br><span class="line">    &quot;Address&quot;:&quot;127.0.0.1&quot;,</span><br><span class="line">    &quot;Port&quot;:93,</span><br><span class="line">    &quot;EnableTagOverride&quot;:false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的Name就是服务名称，ID就是该服务的一个实例ID。</p><p>使用curl调用注册服务Api，将siteA和siteB注册到Consul中</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl --request PUT --data @siteA.json http://localhost:8500/v1/agent/service/register</span><br><span class="line">curl --request PUT --data @siteB.json http://localhost:8500/v1/agent/service/register</span><br></pre></td></tr></table></figure><p>回到Consul管理页面，我们会发现服务列表中会出现一个名为web的服务，这个服务有2个实例<br><img src="/2019/12/26/nginx/nginx-consul-2/ddddd.png" alt="a"><br>如果看到以上结果，就说明2个Web服务实例注册成功了。</p><h4 id="添加服务健康检查"><a href="#添加服务健康检查" class="headerlink" title="添加服务健康检查"></a>添加服务健康检查</h4><p>将服务注册到Consul之后，得到的第一个好处就是可以借助Consul对每个服务实例进行健康检查。</p><h4 id="继续修改我们的实例"><a href="#继续修改我们的实例" class="headerlink" title="继续修改我们的实例"></a>继续修改我们的实例</h4><p>关闭之前打开的Consul服务，新开一个命令行窗口，使用consul agent -dev重新开启一个新的Consul服务</p><p>在siteA和siteB网站目录中，分别添加一个healthcheck.html文件，其内容如下</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">title</span>&gt;</span>Nginx Sample<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>This is health check page<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>修改之前的siteA.json和siteB.json</p><p>siteA.json</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;ID&quot;:&quot;webA&quot;,</span><br><span class="line">    &quot;Name&quot;:&quot;web&quot;,</span><br><span class="line">    &quot;Tags&quot;:[],</span><br><span class="line">    &quot;Address&quot;:&quot;127.0.0.1&quot;,</span><br><span class="line">    &quot;Port&quot;:92,</span><br><span class="line">    &quot;Checks&quot;:[&#123;</span><br><span class="line">        &quot;http&quot;:&quot;http://127.0.0.1:92/healthcheck.html&quot;,</span><br><span class="line">        &quot;interval&quot;:&quot;5s&quot;</span><br><span class="line">    &#125;],</span><br><span class="line">    &quot;EnableTagOverride&quot;:false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>siteB.json</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;ID&quot;:&quot;webB&quot;,</span><br><span class="line">   &quot;Name&quot;:&quot;web&quot;,</span><br><span class="line">    &quot;Tags&quot;:[],</span><br><span class="line">    &quot;Address&quot;:&quot;127.0.0.1&quot;,</span><br><span class="line">    &quot;Port&quot;:93,</span><br><span class="line">    &quot;Checks&quot;:[&#123;</span><br><span class="line">        &quot;http&quot;:&quot;http://127.0.0.1:93/healthcheck.html&quot;,</span><br><span class="line">        &quot;interval&quot;:&quot;5s&quot;</span><br><span class="line">    &#125;],</span><br><span class="line">    &quot;EnableTagOverride&quot;:false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重新使用curl调用注册服务Api, 将siteA和siteB注册到Consul中</p><p>打开siteA目录，将healthcheck.html改名为healthcheck1.html（这个操作相当于模拟siteA所在的服务器崩溃, consul请求不到healthcheck.html文件了）</p><p>回到Consul管理界面，我们看一下结果，它会显示webA检查失败<br><img src="/2019/12/26/nginx/nginx-consul-2/65831-20180414222735648-762322917.png" alt="a"></p><p>将healthcheck1.html改名会healthcheck.html, 等待5秒后，返回consul界面中，webA已经变回检测通过状态。</p><h3 id="Consul-Template"><a href="#Consul-Template" class="headerlink" title="Consul Template"></a>Consul Template</h3><h4 id="什么是Consul-Template"><a href="#什么是Consul-Template" class="headerlink" title="什么是Consul Template"></a>什么是Consul Template</h4><p>Consul Template是Consul的一个扩展组件，可以读取Consul中的服务配置，根据指定模板生成不同的配置文件。</p><p>所以这里我们就可以组合使用Consul, Consul Template来动态生成Nginx的配置文件, 并自动重启Nginx。</p><h4 id="安装Consul-Template"><a href="#安装Consul-Template" class="headerlink" title="安装Consul Template"></a>安装Consul Template</h4><p>我们可以从官网（<a href="https://releases.hashicorp.com/consul-template）">https://releases.hashicorp.com/consul-template）</a><br>中下载consul-template.exe</p><h4 id="启动Consul-Template"><a href="#启动Consul-Template" class="headerlink" title="启动Consul Template"></a>启动Consul Template</h4><p>consul-template -consul-addr 127.0.0.1:8500 -template “./2.tpl:./conf/nginx.conf:nginx -s reload”</p><p>这里-consul-addr参数是指定consul服务的地址, -template是指定consul template使用的模板，生成的新文件地址，以及生成新文件之后的执行的命令。</p><h4 id="继续我们的案例"><a href="#继续我们的案例" class="headerlink" title="继续我们的案例"></a>继续我们的案例</h4><p>现在我们添加一个新的siteC, ip为127.0.0.1:94, siteC中也只有index.html和healthcheck.html2个文件</p><p>a. 创建2.tpl, 文件内容如下, 这里使用的是consul-template的模板语法（相应语法介绍可以查看<a href="https://github.com/hashicorp/consul-template）">https://github.com/hashicorp/consul-template）</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">events &#123;</span><br><span class="line">    worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">   upstream 127.0.0.1&#123;</span><br><span class="line">        &#123;&#123; range service &quot;web&quot; &#125;&#125;</span><br><span class="line">    server &#123;&#123; .Address &#125;&#125;:&#123;&#123; .Port &#125;&#125; weight=1;&#123;&#123; end &#125;&#125; </span><br><span class="line">    &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       81;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">           proxy_pass http://127.0.0.1;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用命令 启动consul-template</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">consul-template -consul-addr 127.0.0.1:8500 -template &quot;2.tpl:conf/nginx.conf:nginx -s reload&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;ID&quot;:&quot;webC&quot;,</span><br><span class="line">    &quot;Name&quot;:&quot;web&quot;,</span><br><span class="line">    &quot;Tags&quot;:[],</span><br><span class="line">    &quot;Address&quot;:&quot;127.0.0.1&quot;,</span><br><span class="line">    &quot;Port&quot;:94,</span><br><span class="line">    &quot;Checks&quot;:[&#123;</span><br><span class="line">        &quot;http&quot;:&quot;http://127.0.0.1:94/healthcheck.html&quot;,</span><br><span class="line">        &quot;interval&quot;:&quot;5s&quot;</span><br><span class="line">    &#125;],</span><br><span class="line">    &quot;EnableTagOverride&quot;:false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打开浏览器，输入<a href="http://localhost:81">http://localhost:81</a>, 反复按F5刷新，你会发现siteC已经加入到了Nginx负载均衡配置中。<br><img src="/2019/12/26/nginx/nginx-consul-2/65831-20180414223157442-1873910755.gif" alt="a"><br>然后我们进行一个测试，我们将siteA的healthcheck.html重命名为healthcheck1.html</p><p>回到刚才页面中继续按F5刷新，我们会发现现在只显示siteB和siteC的内容了，这是因为siteA已经被consul认定为不健康的服务，所以consul-template重新生成Nginx的配置文件，将siteA中配置文件中抹除，并重新启动了Nginx。<br><img src="/2019/12/26/nginx/nginx-consul-2/65831-20180414223222806-2097252779.gif" alt="a"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="nginx" scheme="https://guochen2.github.io/categories/nginx/"/>
    
      <category term="consul" scheme="https://guochen2.github.io/categories/nginx/consul/"/>
    
    
      <category term="consul" scheme="https://guochen2.github.io/tags/consul/"/>
    
      <category term="nginx" scheme="https://guochen2.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>nginx+consul+consul-template</title>
    <link href="https://guochen2.github.io/2019/12/26/nginx/nginx-consul-1/"/>
    <id>https://guochen2.github.io/2019/12/26/nginx/nginx-consul-1/</id>
    <published>2019-12-26T11:12:00.000Z</published>
    <updated>2020-11-23T13:46:49.698Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>下载consul-template</p><p><a href="https://releases.hashicorp.com/consul-template/0.20.0/">https://releases.hashicorp.com/consul-template/0.20.0/</a></p><p><a href="https://releases.hashicorp.com/consul-template/0.20.0/consul-template_0.20.0_windows_amd64.zip">https://releases.hashicorp.com/consul-template/0.20.0/consul-template_0.20.0_windows_amd64.zip</a></p><p>开始监听</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">consul-template -consul-addr 127.0.0.1:8500 -template &quot;./consulconf/1.tpl:./consulconf/1.conf:nginx -s reload</span><br></pre></td></tr></table></figure><p>nginx配置<br>stream</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">stream &#123;</span><br><span class="line">upstream demo &#123;</span><br><span class="line">        &#123;&#123; range service &quot;grpc&quot; &#125;&#125;</span><br><span class="line">        server &#123;&#123; .Address &#125;&#125;:&#123;&#123; .Port &#125;&#125; weight=1;&#123;&#123; end &#125;&#125;</span><br><span class="line">        </span><br><span class="line">        server 127.0.0.1:79 fail_timeout=0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">        listen 12345;</span><br><span class="line">        proxy_connect_timeout 10s;</span><br><span class="line">        proxy_timeout 30s;</span><br><span class="line">        proxy_pass demo;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>http</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upstream aa&#123;</span><br><span class="line">        &#123;&#123; range service &quot;web&quot; &#125;&#125;</span><br><span class="line">    server &#123;&#123; .Address &#125;&#125;:&#123;&#123; .Port &#125;&#125; weight=1;&#123;&#123; end &#125;&#125;</span><br><span class="line">    </span><br><span class="line">    server 127.0.0.1:79 fail_timeout=0;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen       81;</span><br><span class="line">    server_name  localhost;</span><br><span class="line">    location / &#123;</span><br><span class="line">       proxy_pass http://aa;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>删除consul服务</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl --request PUT http://127.0.0.1:8500/v1/agent/service/deregister/webB</span><br></pre></td></tr></table></figure><p>添加服务</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl --request PUT --data @siteA.json http://localhost:8500/v1/agent/service/register</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;ID&quot;:&quot;webA&quot;,</span><br><span class="line">    &quot;Name&quot;:&quot;web&quot;,</span><br><span class="line">    &quot;Tags&quot;:[],</span><br><span class="line">    &quot;Address&quot;:&quot;192.168.2.101&quot;,</span><br><span class="line">    &quot;Port&quot;:8080,</span><br><span class="line">    &quot;Checks&quot;:[&#123;</span><br><span class="line">        &quot;http&quot;:&quot;http://192.168.2.101:8080/1.html&quot;,</span><br><span class="line">        &quot;interval&quot;:&quot;5s&quot;</span><br><span class="line">    &#125;],    </span><br><span class="line">    &quot;EnableTagOverride&quot;:false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意事项</p><p>consul 以服务方式启动 才会持久化数据</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">consul agent -server -ui -bootstrap-expect=1 -data-dir=./consul -node=agent-one -advertise=127.0.0.1 -bind=0.0.0.0 -client=0.0.0.0</span><br></pre></td></tr></table></figure><p>-server：服务器模式</p><p>-ui:能webui展示</p><p>-bootstrap-expect：server为1时即选择server集群leader</p><p>-data-dir:consul状态存储文件地址</p><p>-node：指定结点名</p><p>advertise：本地ip地址</p><p>-client:指定可访问这个服务结点的ip </p><p>注意 Cluster Addr集群地址是我们上面advertise指定的ip地址</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="nginx" scheme="https://guochen2.github.io/categories/nginx/"/>
    
      <category term="consul" scheme="https://guochen2.github.io/categories/nginx/consul/"/>
    
    
      <category term="consul" scheme="https://guochen2.github.io/tags/consul/"/>
    
      <category term="nginx" scheme="https://guochen2.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>nginx常用指令</title>
    <link href="https://guochen2.github.io/2019/12/26/nginx/nginx-%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/"/>
    <id>https://guochen2.github.io/2019/12/26/nginx/nginx-%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</id>
    <published>2019-12-26T11:05:12.000Z</published>
    <updated>2020-11-23T13:46:49.717Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h3><ul><li>sub_filter指令： sub_filter string（原字符串） replacement（用于替换的字符串）;</li></ul><p>用于设置需要使用说明字符串替换说明字符串.string是要被替换的字符串，replacement是 新的字符串，它里面可以带变量。</p><ul><li>sub_filter_last_modified指令： sub_filter_last_modified on | off;</li></ul><p>用于设置网页内替换后是否修改 可在nginx.conf的 http, server, location三个位置配置使 用，默认值是off；</p><ul><li>sub_filter_once指令：sub_filter_once on | off;</li></ul><p>用于设置字符串替换次数，默认只替换一次。如果是on，默认只替换第一次匹配到的到字 符，如果是off，那么所有匹配到的字符都会被替换；</p><ul><li>sub_filter_types指令：sub_filter_types *</li></ul><p>用于指定需要被替换的MIME类型,默认为“text/html”，如果制定为*，那么所有的；<br>说明：以上指令可在nginx.conf的http, server, location三个位置配置使用；<br>示例</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">            sub_filter &quot;http://127.0.0.1:8110&quot; &quot;https://aaa.bbb.com&quot; ;</span><br><span class="line">            sub_filter_once off;</span><br><span class="line">            sub_filter_types application/atom+xml;</span><br><span class="line">            sub_filter_last_modified on;</span><br><span class="line"></span><br><span class="line">            proxy_pass http://127.0.0.1:8110;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="限制并发"><a href="#限制并发" class="headerlink" title="限制并发"></a>限制并发</h3><p>同时限制ip和虚拟主机最大并发连接</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    limit_conn_zone $binary_remote_addr zone=perip:10m;</span><br><span class="line">    limit_conn_zone $server_name zone=perserver:10m;</span><br><span class="line">    server &#123;</span><br><span class="line">        location / &#123;</span><br><span class="line">            limit_conn perip 10;</span><br><span class="line">            limit_conn perserver 1000;</span><br><span class="line">            limit_conn addr 5; #是限制每个IP只能发起5个连接</span><br><span class="line">            limit_rate 100k; #限速为 100KB/秒</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="隐藏服务器信息"><a href="#隐藏服务器信息" class="headerlink" title="隐藏服务器信息"></a>隐藏服务器信息</h3><h4 id="移除X-AspNet-Version"><a href="#移除X-AspNet-Version" class="headerlink" title="移除X-AspNet-Version"></a>移除X-AspNet-Version</h4><p>只需要在Web.config中增加这个配置节</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">httpRuntime</span> <span class="attr">enableVersionHeader</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h4 id="移除nginx版本号"><a href="#移除nginx版本号" class="headerlink" title="移除nginx版本号"></a>移除nginx版本号</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http&#123;</span><br><span class="line">     server_tokens  off;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="移除X-AspNetMvc-Version"><a href="#移除X-AspNetMvc-Version" class="headerlink" title="移除X-AspNetMvc-Version"></a>移除X-AspNetMvc-Version</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MvcHandler.DisableMvcResponseHeader =true;</span><br></pre></td></tr></table></figure><h3 id="支持与请求端建立keepalive"><a href="#支持与请求端建立keepalive" class="headerlink" title="支持与请求端建立keepalive"></a>支持与请求端建立keepalive</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    keepalive_timeout  120s 120s;</span><br><span class="line">    keepalive_requests 10000;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="支持与负载后端的keepalive"><a href="#支持与负载后端的keepalive" class="headerlink" title="支持与负载后端的keepalive"></a>支持与负载后端的keepalive</h3><p><a href="https://blog.csdn.net/maquealone/article/details/87347292">keepalive详解</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upstream s1&#123;</span><br><span class="line">    server 172.26.154.20:8090 ;</span><br><span class="line">       keepalive 1000; #重点需要添加</span><br><span class="line">&#125;</span><br><span class="line">server&#123;</span><br><span class="line">    listen 4010;</span><br><span class="line">    access_log  logs/ai.log   json;</span><br><span class="line">    #location /s1/ &#123;</span><br><span class="line">          location ~* ^\/(.*)\/* &#123;</span><br><span class="line">            proxy_set_header Host $host;</span><br><span class="line">            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">            proxy_pass http://$1;</span><br><span class="line">            proxy_http_version 1.1; ## 重点需要添加</span><br><span class="line">            proxy_set_header Connection &quot;&quot;; ##重点需要添加</span><br><span class="line">        &#125;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="防止出现status-499"><a href="#防止出现status-499" class="headerlink" title="防止出现status 499"></a>防止出现status 499</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http&#123;</span><br><span class="line">    proxy_ignore_client_abort on;#代理服务端不要主要主动关闭客户端连接。</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="设置不缓存"><a href="#设置不缓存" class="headerlink" title="设置不缓存"></a>设置不缓存</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">add_header Cache-Control no-store;</span><br></pre></td></tr></table></figure><h3 id="支持tsl1-2"><a href="#支持tsl1-2" class="headerlink" title="支持tsl1.2"></a>支持tsl1.2</h3><p>配置ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</p><p>注意  所有conf里的ssl配置都要改成这个 否则还是tsl1.0</p><h3 id="支持websocket"><a href="#支持websocket" class="headerlink" title="支持websocket"></a>支持websocket</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http&#123;</span><br><span class="line">map $http_upgrade $connection_upgrade &#123;  </span><br><span class="line">    default upgrade;  </span><br><span class="line">    &#x27;&#x27; close;  </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">proxy_set_header Host $host;</span><br><span class="line">proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">proxy_pass http://127.0.0.1:5000;</span><br><span class="line">           proxy_http_version 1.1;</span><br><span class="line">proxy_set_header Upgrade $http_upgrade;  </span><br><span class="line">proxy_set_header Connection $connection_upgrade; </span><br><span class="line">           # 这是配置webpysessoin丢失的问题</span><br><span class="line">           fastcgi_param SCRIPT_NAME &quot;&quot;;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h3 id="设置后端超时时间"><a href="#设置后端超时时间" class="headerlink" title="设置后端超时时间"></a>设置后端超时时间</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fastcgi_connect_timeout 300;        </span><br><span class="line">fastcgi_send_timeout 300;        </span><br><span class="line">fastcgi_read_timeout 300;      </span><br><span class="line">proxy_connect_timeout   300; </span><br><span class="line">proxy_send_timeout      300; </span><br><span class="line">proxy_read_timeout      300; </span><br></pre></td></tr></table></figure><h3 id="默认配置"><a href="#默认配置" class="headerlink" title="默认配置"></a>默认配置</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> default_type  application/octet-stream;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">    server_names_hash_bucket_size 64;</span><br><span class="line">    #log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class="line">    #                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class="line">    #                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class="line">log_format json &#x27;&#123;&quot;@timestamp&quot;:&quot;$time_iso8601&quot;,&#x27;</span><br><span class="line">  &#x27;&quot;server_host&quot;:&quot;$server_addr&quot;,&#x27;</span><br><span class="line">  &#x27;&quot;remote_addr&quot;:&quot;$remote_addr&quot;,&#x27;</span><br><span class="line">  &#x27;&quot;remote_user&quot;:&quot;$remote_user&quot;,&#x27;</span><br><span class="line">  &#x27;&quot;request&quot;:&quot;$request&quot;,&#x27;</span><br><span class="line">  &#x27;&quot;http_user_agent&quot;:&quot;$http_user_agent&quot;,&#x27;</span><br><span class="line">  &#x27;&quot;size&quot;:$body_bytes_sent,&#x27;</span><br><span class="line">  &#x27;&quot;responsetime&quot;:$request_time,&#x27;</span><br><span class="line">  &#x27;&quot;upstreamtime&quot;:&quot;$upstream_response_time&quot;,&#x27;</span><br><span class="line">  &#x27;&quot;upstreamhost&quot;:&quot;$upstream_addr&quot;,&#x27;</span><br><span class="line">  &#x27;&quot;http_host&quot;:&quot;$host&quot;,&#x27;</span><br><span class="line">  &#x27;&quot;url&quot;:&quot;$uri&quot;,&#x27;</span><br><span class="line">  &#x27;&quot;domain&quot;:&quot;$host&quot;,&#x27;</span><br><span class="line">  &#x27;&quot;xff&quot;:&quot;$http_x_forwarded_for&quot;,&#x27;</span><br><span class="line">  &#x27;&quot;referer&quot;:&quot;$http_referer&quot;,&#x27;</span><br><span class="line">  &#x27;&quot;status&quot;:&quot;$status&quot;&#125;&#x27;;</span><br><span class="line">    #access_log  logs/access.log  main;</span><br><span class="line">include ext/*.conf;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">add_header X-Frame-Options DENY;</span><br><span class="line">server_tokens off;</span><br><span class="line">    #keepalive_timeout  0;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">large_client_header_buffers 4 16k;</span><br><span class="line">client_max_body_size 30m;</span><br><span class="line">client_body_buffer_size 128k;</span><br><span class="line"></span><br><span class="line">    #FastCGI相关参数是为了改善网站的性能：减少资源占用，提高访问速度。下面参数看字面意思都能理解。        </span><br><span class="line">    fastcgi_connect_timeout 300;        </span><br><span class="line">    fastcgi_send_timeout 300;        </span><br><span class="line">    fastcgi_read_timeout 300;        </span><br><span class="line">    fastcgi_buffer_size 64k;        </span><br><span class="line">    fastcgi_buffers 4 64k;        </span><br><span class="line">    fastcgi_busy_buffers_size 128k;        </span><br><span class="line">    fastcgi_temp_file_write_size 128k;         </span><br><span class="line">    proxy_connect_timeout   300; </span><br><span class="line">    proxy_send_timeout      300; </span><br><span class="line">    proxy_read_timeout      300; </span><br><span class="line">    #gzip模块设置        </span><br><span class="line">    gzip on; #开启gzip压缩输出        </span><br><span class="line">    gzip_min_length 1k; #最小压缩文件大小        </span><br><span class="line">    gzip_buffers 4 16k; #压缩缓冲区        </span><br><span class="line">    gzip_http_version 1.0; #压缩版本（默认1.1，前端如果是squid2.5请使用1.0）        </span><br><span class="line">    gzip_comp_level 2; #压缩等级        </span><br><span class="line">    gzip_types text/plain text/javascript application/x-javascript text/css application/xml;  </span><br></pre></td></tr></table></figure><h3 id="更改路径转发后端代理"><a href="#更改路径转发后端代理" class="headerlink" title="更改路径转发后端代理"></a>更改路径转发后端代理</h3><p>例如 前端地址是 <a href="http://localhost/a/b/c">http://localhost/a/b/c</a><br>后端服务器应该访问的地址是 /b/c</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> location /a/ &#123;</span><br><span class="line">    proxy_set_header Host $host;</span><br><span class="line">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">    proxy_pass http://server/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upstream server&#123;</span><br><span class="line">server 47.104.237.193:10006;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="nginx" scheme="https://guochen2.github.io/categories/nginx/"/>
    
    
      <category term="nginx" scheme="https://guochen2.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>搭建nuget服务器</title>
    <link href="https://guochen2.github.io/2019/12/26/netcore-nuget-1/"/>
    <id>https://guochen2.github.io/2019/12/26/netcore-nuget-1/</id>
    <published>2019-12-26T10:54:14.000Z</published>
    <updated>2020-11-23T13:46:49.668Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><ul><li>新建一个项目<br><img src="/2019/12/26/netcore-nuget-1/Image123.png" alt="image123"><br><img src="/2019/12/26/netcore-nuget-1/Image3123123.png" alt="a"><br>这里使用3.0版本的NuGet.Server，<br>需要 .Net Framework 4.6支持。<br>然后引用NuGet.Server库包 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Install-Package NuGet.Server</span><br></pre></td></tr></table></figure>安装完成后，编译启动即可，就是这么简单，然后托管到IIS上。</li></ul><p>上传库包的时候可能需要apikey，需要在web.config中设置。<br><img src="/2019/12/26/netcore-nuget-1/Imageapikey.png" alt="a"></p><h3 id="部分坑"><a href="#部分坑" class="headerlink" title="部分坑"></a>部分坑</h3><pre><code>1. 发布到服务器上后 如果使用了代理 则返回的内容里面地址是错的 需要替换成外部可访问的的</code></pre><p>   可以使用nginx来进行替换</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">            sub_filter &quot;http://127.0.0.1:8110&quot; &quot;https://aaa.bbb.com&quot; ;</span><br><span class="line">            sub_filter_once off;</span><br><span class="line">            sub_filter_types application/atom+xml;</span><br><span class="line">            sub_filter_last_modified on;</span><br><span class="line"></span><br><span class="line">            proxy_pass http://127.0.0.1:8110;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="如何使用NuGetPackageExplorer创建有依赖项的引用包"><a href="#如何使用NuGetPackageExplorer创建有依赖项的引用包" class="headerlink" title="如何使用NuGetPackageExplorer创建有依赖项的引用包"></a>如何使用NuGetPackageExplorer创建有依赖项的引用包</h3><p><a href="https://blog.csdn.net/u011523479/article/details/82012340">https://blog.csdn.net/u011523479/article/details/82012340</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="c#" scheme="https://guochen2.github.io/categories/c/"/>
    
    
      <category term="nuget" scheme="https://guochen2.github.io/tags/nuget/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 18 下安装zookeeper</title>
    <link href="https://guochen2.github.io/2019/12/25/ubuntu/ubuntu-zookeeper/"/>
    <id>https://guochen2.github.io/2019/12/25/ubuntu/ubuntu-zookeeper/</id>
    <published>2019-12-25T14:02:14.000Z</published>
    <updated>2020-11-23T13:46:49.751Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>下载zookeeper的压缩包</p><p>下载地址： <a href="http://apache.fayea.com/zookeeper/">http://apache.fayea.com/zookeeper/</a></p><p>下载完成后，解压安装包，解压到/home/wsk1103/software/zookeeper目录下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar zxvf zookeeper-3.4.12.tar.gz -C /home/wsk1103/software/zookeeper</span><br></pre></td></tr></table></figure><p>拷贝zookeeper/conf/目录下的zoo_sample.cfg，重新命名为zoo.cfg</p><p>编辑该配置文件，gedit zoo.cfg 修改为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># The number of milliseconds of each tick</span><br><span class="line"># 心跳间隔，毫秒</span><br><span class="line">tickTime=2000</span><br><span class="line"># The number of ticks that the initial</span><br><span class="line"># synchronization phase can take</span><br><span class="line"># 配置zookeeper接受客户端初始化连接时最长能忍受多少个时间心跳间隔。</span><br><span class="line">initLimit=10</span><br><span class="line"># The number of ticks that can pass between</span><br><span class="line"># sending a request and getting an acknowledgement</span><br><span class="line"># 这个配置项标识 Leader 与 Follower 之间发送消息，请求和应答时间长度，最长不能超过多少个 tickTime 的时间长度。</span><br><span class="line">syncLimit=5</span><br><span class="line"># the directory where the snapshot is stored.</span><br><span class="line"># do not use /tmp for storage, /tmp here is just</span><br><span class="line"># example sakes.</span><br><span class="line"># 数据存放的位置</span><br><span class="line">dataDir=/home/wsk1103/sofrware/zookeeper/zookeeperData</span><br><span class="line">#日志存放的位置</span><br><span class="line">dataLogDir=/home/wsk1103/sofrware/zookeeper/zookeeperLog</span><br><span class="line"># the port at which the clients will connect</span><br><span class="line"># 服务器客户端的接口</span><br><span class="line">clientPort=2181</span><br><span class="line"># the maximum number of client connections.</span><br><span class="line"># increase this if you need to handle more clients</span><br><span class="line">#maxClientCnxns=60</span><br><span class="line">#</span><br><span class="line"># Be sure to read the maintenance section of the</span><br><span class="line"># administrator guide before turning on autopurge.</span><br><span class="line">#</span><br><span class="line"># http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance</span><br><span class="line">#</span><br><span class="line"># The number of snapshots to retain in dataDir</span><br><span class="line">#autopurge.snapRetainCount=3</span><br><span class="line"># Purge task interval in hours</span><br><span class="line"># Set to &quot;0&quot; to disable auto purge feature</span><br><span class="line">#autopurge.purgeInterval=1</span><br><span class="line"></span><br><span class="line"># 2888,3888 are election port</span><br><span class="line"># 2888端口是zookeeper服务之间的通讯的端口，3888是zookeeper与其他应用程序通讯的端口。</span><br><span class="line">server.1=localhost:2888:3888</span><br></pre></td></tr></table></figure><p>重点是中间添加了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dataDir=/home/wsk1103/sofrware/zookeeper/zookeeperData</span><br><span class="line">dataLogDir=/home/wsk1103/sofrware/zookeeper/zookeeperLog</span><br></pre></td></tr></table></figure><p>结尾添加了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server.1=localhost:2888:3888</span><br></pre></td></tr></table></figure><p>根据中间添加的文件路径，创建相应的文件夹，并在zookeeperData目录下创建新的文件-myid，里面的内容为1</p><p>1表示当前的zookeeper定义为第一台服务器</p><p>新建文件命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">touch myid</span><br></pre></td></tr></table></figure><p>启动zookeeper服务器，进入zookeeper/bin目录，执行 </p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./zkServer.sh start</span><br></pre></td></tr></table></figure><p>检验服务器命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./zkCli.sh -server localhost:2181</span><br></pre></td></tr></table></figure><p>停止服务器命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./zkServer.sh stop</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="linux" scheme="https://guochen2.github.io/categories/linux/"/>
    
      <category term="zookeeper" scheme="https://guochen2.github.io/categories/linux/zookeeper/"/>
    
    
      <category term="ubuntu" scheme="https://guochen2.github.io/tags/ubuntu/"/>
    
      <category term="zookeeper" scheme="https://guochen2.github.io/tags/zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu18.04下Kafka安装与部署</title>
    <link href="https://guochen2.github.io/2019/12/25/ubuntu/ubuntu-kafka/"/>
    <id>https://guochen2.github.io/2019/12/25/ubuntu/ubuntu-kafka/</id>
    <published>2019-12-25T13:59:39.000Z</published>
    <updated>2020-11-23T13:46:49.750Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="安装Java"><a href="#安装Java" class="headerlink" title="安装Java"></a>安装Java</h3><p>更新软件包</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><p>安装openjdk-8-jdk</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install openjdk-8-jdk</span><br></pre></td></tr></table></figure><p>查看java版本，看看是否安装成功</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wzj@wzj-ThinkPad-T61:~$ java -version</span><br><span class="line">java version &quot;1.8.0_171&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_171-b11)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.171-b11, mixed mode)</span><br></pre></td></tr></table></figure><h3 id="安装Kafka"><a href="#安装Kafka" class="headerlink" title="安装Kafka"></a>安装Kafka</h3><p>下载地址：<a href="https://kafka.apache.org/downloads">https://kafka.apache.org/downloads</a><br>ubuntu下可以用wget直接下载，我是下载到了/home/wzj/kafka目录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget http://mirrors.shuosc.org/apache/kafka/1.0.0/kafka_2.11-1.0.0.tgz</span><br></pre></td></tr></table></figure><p>解压</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxvf kafka_2.11-1.0.0.tgz</span><br></pre></td></tr></table></figure><p>创建日志存储目录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd kafka/</span><br><span class="line">mkdir logs-1</span><br></pre></td></tr></table></figure><p>进入kafka解压目录，修改kafka-server 的配置文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim config/server.properties</span><br></pre></td></tr></table></figure><p>修改配置文件中21、31、36和60行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">broker.id=1</span><br><span class="line">listeners=PLAINTEXT://本机IP:9092</span><br><span class="line">advertised.listeners=PLAINTEXT://本机ip:9092</span><br><span class="line">log.dirs=/home/wzj/kafka/logs-1</span><br></pre></td></tr></table></figure><p>启动Kafka服务 使用kafka-server-start.sh启动 kafka 服务</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bin/kafka-server-start.sh config/server.properties</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="linux" scheme="https://guochen2.github.io/categories/linux/"/>
    
      <category term="kafka" scheme="https://guochen2.github.io/categories/linux/kafka/"/>
    
    
      <category term="ubuntu" scheme="https://guochen2.github.io/tags/ubuntu/"/>
    
      <category term="kafka" scheme="https://guochen2.github.io/tags/kafka/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu部分基本命令</title>
    <link href="https://guochen2.github.io/2019/12/25/ubuntu/ubuntu-6/"/>
    <id>https://guochen2.github.io/2019/12/25/ubuntu/ubuntu-6/</id>
    <published>2019-12-25T13:56:32.000Z</published>
    <updated>2020-11-23T13:46:49.747Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h3><h4 id="查找程序执行目录"><a href="#查找程序执行目录" class="headerlink" title="查找程序执行目录"></a>查找程序执行目录</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ps -ef | grep nginx</span><br><span class="line">cd /proc/$pid 例如 cd /proc/13198</span><br><span class="line">ll</span><br></pre></td></tr></table></figure><p><img src="/2019/12/25/ubuntu/ubuntu-6/Image.png" alt="a"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ps -ef |grep redis</span><br><span class="line">ps -e 查看所有程序的pid</span><br><span class="line">cd /proc/pid  通过ll 查看信息 其中exe是执行目录</span><br><span class="line">cwd符号链接的就是进程3093的运行目录；</span><br><span class="line">exe符号连接就是执行程序的绝对路径；</span><br><span class="line">cmdline就是程序运行时输入的命令行命令；本例为：。/cbs</span><br><span class="line">cpu记录了进程可能运行在其上的cpu；显示虚拟的cpu信息</span><br><span class="line">environ记录了进程运行时的环境变量</span><br><span class="line">fd目录下是进程打开或使用的文件的符号连接 </span><br></pre></td></tr></table></figure><h4 id="文件夹"><a href="#文件夹" class="headerlink" title="文件夹"></a>文件夹</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">du -h --max-depth=1 查看当前文件夹大小 会列出一级目录</span><br><span class="line">du -h --max-depth=1 /home  查看指定目录大小  会列出一级目录</span><br></pre></td></tr></table></figure><h3 id="磁盘"><a href="#磁盘" class="headerlink" title="磁盘"></a>磁盘</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">df -h 查看磁盘占用信息  </span><br></pre></td></tr></table></figure><h3 id="系统信息"><a href="#系统信息" class="headerlink" title="系统信息"></a>系统信息</h3><h4 id="Linux内核版本"><a href="#Linux内核版本" class="headerlink" title="Linux内核版本"></a>Linux内核版本</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /proc/version</span><br><span class="line">uname -a</span><br></pre></td></tr></table></figure><h4 id="Linux系统版本"><a href="#Linux系统版本" class="headerlink" title="Linux系统版本"></a>Linux系统版本</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lsb_release -a 列出所有版本信息 这个命令适用于所有的Linux发行版，包括RedHat、SUSE、Debian…等发行版。</span><br><span class="line"></span><br><span class="line">cat /etc/redhat-release，这种方法只适合Redhat系的Linux：</span><br><span class="line"></span><br><span class="line">cat /etc/issue，此命令也适用于所有的Linux发行版。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="重启命令"><a href="#重启命令" class="headerlink" title="重启命令"></a>重启命令</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">reboot</span><br><span class="line">shutdown -r now 立刻重启</span><br><span class="line">shutdown -r 10 过10分钟自动重启</span><br><span class="line">shutdown -r 20:35 在时间为20:35时候重启</span><br><span class="line">如果是通过shutdown命令设置重启的话，可以用shutdown -c命令取消重启</span><br></pre></td></tr></table></figure><h3 id="关机命令"><a href="#关机命令" class="headerlink" title="关机命令"></a>关机命令</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">halt   立刻关机（一般加-p 关闭电源）</span><br><span class="line">poweroff 立刻关机</span><br><span class="line">shutdown -h now 立刻关机</span><br><span class="line">shutdown -h 10 10分钟后自动关机</span><br><span class="line">如果是通过shutdown命令设置关机的话，可以用shutdown -c命令取消关机</span><br></pre></td></tr></table></figure><h3 id="查看TCP端口状态"><a href="#查看TCP端口状态" class="headerlink" title="查看TCP端口状态"></a>查看TCP端口状态</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netstat -ano -t</span><br></pre></td></tr></table></figure><h3 id="结束进程"><a href="#结束进程" class="headerlink" title="结束进程"></a>结束进程</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pkill 进程名 </span><br><span class="line">killall 进程名</span><br><span class="line">kill -9 $(ps -ef|grep 进程名关键字|grep -v grep|awk &#x27;&#123;print $2&#125;&#x27;)这个是利用管道和替换将 进程名对应的进程号提出来作为kill的参数。</span><br><span class="line">kill -9 $(pidof 进程名关键字)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="linux" scheme="https://guochen2.github.io/categories/linux/"/>
    
    
      <category term="ubuntu" scheme="https://guochen2.github.io/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu 提升普通用户的root权限</title>
    <link href="https://guochen2.github.io/2019/12/25/ubuntu/ubuntu-5/"/>
    <id>https://guochen2.github.io/2019/12/25/ubuntu/ubuntu-5/</id>
    <published>2019-12-25T13:52:36.000Z</published>
    <updated>2020-11-23T13:46:49.746Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><ul><li>编辑passwd文件<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/passwd</span><br></pre></td></tr></table></figure></li><li>找到你想提权的用户（比如test），将用户名后面的数字改成0<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">test:x:1000:1000::/home/test</span><br></pre></td></tr></table></figure></li><li>修改权限<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">test:x:0:0::/home/test</span><br></pre></td></tr></table></figure>也可以改得和root一样 只要第一个不b变</li><li>重启电脑，登录test账户。reboot</li></ul><p>设置后 可能无法登陆ssh 需要设置</p><ul><li><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure>找到 并编辑为<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Authentication:</span><br><span class="line">LoginGraceTime 120</span><br><span class="line">#PermitRootLogin without-password</span><br><span class="line">PermitRootLogin yes</span><br><span class="line">StrictModes yes</span><br></pre></td></tr></table></figure>保存后重启服务 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/etc/init.d/ssh restart </span><br><span class="line">或者 </span><br><span class="line">service ssh restart</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="linux" scheme="https://guochen2.github.io/categories/linux/"/>
    
    
      <category term="ubuntu" scheme="https://guochen2.github.io/tags/ubuntu/"/>
    
      <category term="root" scheme="https://guochen2.github.io/tags/root/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu使用apt-get下载速度慢的解决方法</title>
    <link href="https://guochen2.github.io/2019/12/25/ubuntu/ubuntu-4/"/>
    <id>https://guochen2.github.io/2019/12/25/ubuntu/ubuntu-4/</id>
    <published>2019-12-25T13:50:23.000Z</published>
    <updated>2020-11-23T13:46:49.744Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="查看所用的源"><a href="#查看所用的源" class="headerlink" title="查看所用的源"></a>查看所用的源</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>由于安装的Ubuntu Server 16.04.1 LTS是英文版的，软件源就默认都是 us.archive.ubuntu.com（英国） 的，所以很慢。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># deb cdrom:[Ubuntu-Server 16.04.1 LTS _Xenial Xerus_ - Release amd64 (20160719)]/ xenial main restricted</span><br><span class="line"></span><br><span class="line">#deb cdrom:[Ubuntu-Server 16.04.1 LTS _Xenial Xerus_ - Release amd64 (20160719)]/ xenial main restricted</span><br><span class="line"></span><br><span class="line"># See http://help.ubuntu.com/community/UpgradeNotes for how to upgrade to</span><br><span class="line"># newer versions of the distribution.</span><br><span class="line">deb http://us.archive.ubuntu.com/ubuntu/ xenial main restricted</span><br><span class="line"># deb-src http://us.archive.ubuntu.com/ubuntu/ xenial main restricted</span><br><span class="line"></span><br><span class="line">## Major bug fix updates produced after the final release of the</span><br><span class="line">## distribution.</span><br><span class="line">deb http://us.archive.ubuntu.com/ubuntu/ xenial-updates main restricted</span><br><span class="line"># deb-src http://us.archive.ubuntu.com/ubuntu/ xenial-updates main restricted</span><br><span class="line"></span><br><span class="line">## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu</span><br><span class="line">## team. Also, please note that software in universe WILL NOT receive any</span><br><span class="line">## review or updates from the Ubuntu security team.</span><br><span class="line">deb http://us.archive.ubuntu.com/ubuntu/ xenial universe</span><br><span class="line"># deb-src http://us.archive.ubuntu.com/ubuntu/ xenial universe</span><br><span class="line">deb http://us.archive.ubuntu.com/ubuntu/ xenial-updates universe</span><br><span class="line"># deb-src http://us.archive.ubuntu.com/ubuntu/ xenial-updates universe</span><br><span class="line"></span><br><span class="line">## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu</span><br><span class="line">## team, and may not be under a free licence. Please satisfy yourself as to</span><br><span class="line">## your rights to use the software. Also, please note that software in</span><br><span class="line">## multiverse WILL NOT receive any review or updates from the Ubuntu</span><br><span class="line">## security team.</span><br><span class="line">deb http://us.archive.ubuntu.com/ubuntu/ xenial multiverse</span><br><span class="line"># deb-src http://us.archive.ubuntu.com/ubuntu/ xenial multiverse</span><br><span class="line">deb http://us.archive.ubuntu.com/ubuntu/ xenial-updates multiverse</span><br><span class="line"># deb-src http://us.archive.ubuntu.com/ubuntu/ xenial-updates multiverse</span><br><span class="line"></span><br><span class="line">## N.B. software from this repository may not have been tested as</span><br><span class="line">## extensively as that contained in the main release, although it includes</span><br><span class="line">## newer versions of some applications which may provide useful features.</span><br><span class="line">## Also, please note that software in backports WILL NOT receive any review</span><br><span class="line">## or updates from the Ubuntu security team.</span><br><span class="line">deb http://us.archive.ubuntu.com/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class="line"># deb-src http://us.archive.ubuntu.com/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">## Uncomment the following two lines to add software from Canonical&#x27;s</span><br><span class="line">## &#x27;partner&#x27; repository.</span><br><span class="line">## This software is not part of Ubuntu, but is offered by Canonical and the</span><br><span class="line">## respective vendors as a service to Ubuntu users.</span><br><span class="line"># deb http://archive.canonical.com/ubuntu xenial partner</span><br><span class="line"># deb-src http://archive.canonical.com/ubuntu xenial partner</span><br><span class="line"></span><br><span class="line">deb http://security.ubuntu.com/ubuntu xenial-security main restricted</span><br><span class="line"># deb-src http://security.ubuntu.com/ubuntu xenial-security main restricted</span><br><span class="line">deb http://security.ubuntu.com/ubuntu xenial-security universe</span><br><span class="line"># deb-src http://security.ubuntu.com/ubuntu xenial-security universe</span><br><span class="line">deb http://security.ubuntu.com/ubuntu xenial-security multiverse</span><br><span class="line"># deb-src http://security.ubuntu.com/ubuntu xenial-security multiverse</span><br></pre></td></tr></table></figure><p>为了提高下载速度，将源改为国内的 cn.archive.ubuntu.com ，现在 cn.archive.ubuntu.com 指向阿里云的开源镜像站 mirrors.aliyun.com，下载速度很快。</p><ul><li>重命名原来的源作为备份：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo mv /etc/apt/sources.list sources.list_backup</span><br></pre></td></tr></table></figure></li><li>新建一个sources.list文件<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure>输入如下内容并保存退出：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deb http://cn.archive.ubuntu.com/ubuntu/ xenial main restricted</span><br><span class="line">deb http://cn.archive.ubuntu.com/ubuntu/ xenial-updates main restricted</span><br><span class="line">deb http://cn.archive.ubuntu.com/ubuntu/ xenial universe</span><br><span class="line">deb http://cn.archive.ubuntu.com/ubuntu/ xenial-updates universe</span><br><span class="line">deb http://cn.archive.ubuntu.com/ubuntu/ xenial multiverse</span><br><span class="line">deb http://cn.archive.ubuntu.com/ubuntu/ xenial-updates multiverse</span><br><span class="line">deb http://cn.archive.ubuntu.com/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class="line">deb http://security.ubuntu.com/ubuntu xenial-security main restricted</span><br><span class="line">deb http://security.ubuntu.com/ubuntu xenial-security universe</span><br><span class="line">deb http://security.ubuntu.com/ubuntu xenial-security multiverse</span><br></pre></td></tr></table></figure></li><li>更新apt软件源：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="linux" scheme="https://guochen2.github.io/categories/linux/"/>
    
    
      <category term="ubuntu" scheme="https://guochen2.github.io/tags/ubuntu/"/>
    
      <category term="apt-get" scheme="https://guochen2.github.io/tags/apt-get/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu 无法使用 SSH root 账户远程访问</title>
    <link href="https://guochen2.github.io/2019/12/25/ubuntu/ubuntu-3/"/>
    <id>https://guochen2.github.io/2019/12/25/ubuntu/ubuntu-3/</id>
    <published>2019-12-25T13:21:15.000Z</published>
    <updated>2020-11-23T13:46:49.743Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><ul><li>系统启用root 并设置密码<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo passwd root</span><br></pre></td></tr></table></figure></li><li>首先，确保服务器在安装过程中，选择安装openssh软件。<br>如没有进行安装，请使用以下命令进行安装：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt-get install -y openssh-server</span><br></pre></td></tr></table></figure></li><li>安装完成后，使用root登录系统</li><li>编辑 SSH 的文件<ul><li>将PermitRootLogin 的值改为yes</li><li>因为为root账户设置了密码，所以还要更改PermitEmptyPasswords为 no</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><ul><li>然后重启ssh服务<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service ssh restart</span><br></pre></td></tr></table></figure>如果没有services<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/etc/init.d/ssh start</span><br><span class="line">sudo /etc/init.d/ssh restart</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="linux" scheme="https://guochen2.github.io/categories/linux/"/>
    
    
      <category term="ssh" scheme="https://guochen2.github.io/tags/ssh/"/>
    
      <category term="ubuntu" scheme="https://guochen2.github.io/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu安装jdk的两种方式</title>
    <link href="https://guochen2.github.io/2019/12/25/ubuntu/ubuntu-2/"/>
    <id>https://guochen2.github.io/2019/12/25/ubuntu/ubuntu-2/</id>
    <published>2019-12-25T13:11:21.000Z</published>
    <updated>2020-11-23T13:46:49.743Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><ul><li>通过ppa(源) 方式安装.</li><li>通过官网下载安装包安装.</li></ul><p>这里推荐第1种,因为可以通过 apt-get upgrade 方式方便获得jdk的升级</p><h2 id="使用ppa-源方式安装"><a href="#使用ppa-源方式安装" class="headerlink" title="使用ppa/源方式安装"></a>使用ppa/源方式安装</h2><h4 id="添加ppa"><a href="#添加ppa" class="headerlink" title="添加ppa"></a>添加ppa</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:webupd8team/java</span><br><span class="line"></span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><h4 id="安装oracle-java-installer"><a href="#安装oracle-java-installer" class="headerlink" title="安装oracle-java-installer"></a>安装oracle-java-installer</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install oracle-java8-installer</span><br></pre></td></tr></table></figure><p>安装器会提示你同意 oracle 的服务条款,选择 ok</p><p>然后选择yes 即可</p><p>如果你懒,不想自己手动点击.也可以加入下面的这条命令,默认同意条款:</p><p>JDK8 默认选择条款</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> oracle-java8-installer shared/accepted-oracle-license-v1-1 select <span class="literal">true</span> | sudo /usr/bin/debconf-set-selections</span><br></pre></td></tr></table></figure><p>如果你因为防火墙或者其他原因,导致installer 下载速度很慢,可以中断操作.然后下载好相应jdk的tar.gz 包,放在:<br>   /var/cache/oracle-jdk8-installer              (jdk8)<br>下面,然后安装一次installer. installer 则会默认使用 你下载的tar.gz包</p><h4 id="设置系统默认jdk"><a href="#设置系统默认jdk" class="headerlink" title="设置系统默认jdk"></a>设置系统默认jdk</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo update-java-alternatives -s java-8-oracle</span><br></pre></td></tr></table></figure><p>如果即安装了jdk7,又安装了jdk8,要实现两者的切换,可以:</p><p>jdk8 切换到jdk7</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo update-java-alternatives -s java-7-oracle</span><br></pre></td></tr></table></figure><p>jdk7 切换到jdk8</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo update-java-alternatives -s java-8-oracle</span><br></pre></td></tr></table></figure><h4 id="测试jdk-是是否安装成功"><a href="#测试jdk-是是否安装成功" class="headerlink" title="测试jdk 是是否安装成功"></a>测试jdk 是是否安装成功</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -version</span><br><span class="line"></span><br><span class="line">javac -version</span><br></pre></td></tr></table></figure><h2 id="直接下载jdk压缩包方式安装-这里只介绍jdk7的-jdk8-的原理完全一致"><a href="#直接下载jdk压缩包方式安装-这里只介绍jdk7的-jdk8-的原理完全一致" class="headerlink" title="直接下载jdk压缩包方式安装(这里只介绍jdk7的,jdk8 的原理完全一致)"></a>直接下载jdk压缩包方式安装(这里只介绍jdk7的,jdk8 的原理完全一致)</h2><ul><li>官网下载JDK</li><li>解压缩,放到指定目录</li><li>配置环境变量</li><li>设置系统默认JDK</li><li>测试jdk</li></ul><h4 id="官网下载JDK"><a href="#官网下载JDK" class="headerlink" title="官网下载JDK　　　"></a>官网下载JDK　　　</h4><p> 地址: <a href="http://www.oracle.com/technetwork/articles/javase/index-jsp-138363.html">http://www.oracle.com/technetwork/articles/javase/index-jsp-138363.html</a>　　选择相应的 .gz包下载 </p><h4 id="解压缩-放到指定目录-以jdk-7u60-linux-x64-gz为例"><a href="#解压缩-放到指定目录-以jdk-7u60-linux-x64-gz为例" class="headerlink" title="解压缩,放到指定目录(以jdk-7u60-linux-x64.gz为例)"></a>解压缩,放到指定目录(以jdk-7u60-linux-x64.gz为例)</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mkdir /usr/lib/jvm</span><br><span class="line">sudo tar -zxvf jdk-7u60-linux-x64.gz -C /usr/lib/jvm</span><br></pre></td></tr></table></figure><h4 id="修改环境变量"><a href="#修改环境变量" class="headerlink" title="修改环境变量:　　"></a>修改环境变量:　　</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim ~/.bashrc</span><br></pre></td></tr></table></figure><p>　文件的末尾追加下面内容:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#set oracle jdk environment</span><br><span class="line">export JAVA_HOME=/usr/lib/jvm/jdk1.7.0_60 ## 这里要注意目录要换成自己解压的jdk 目录</span><br><span class="line">export JRE_HOME=$&#123;JAVA_HOME&#125;/jre</span><br><span class="line">export CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib:$&#123;JRE_HOME&#125;/lib</span><br><span class="line">export PATH=$&#123;JAVA_HOME&#125;/bin:$PATH</span><br></pre></td></tr></table></figure><p>使环境变量马上生效</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><h4 id="设置系统默认jdk-版本"><a href="#设置系统默认jdk-版本" class="headerlink" title="设置系统默认jdk 版本"></a>设置系统默认jdk 版本</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk1.7.0_60/bin/java 300</span><br><span class="line">sudo update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/jdk1.7.0_60/bin/javac 300</span><br><span class="line">sudo update-alternatives --install /usr/bin/jar jar /usr/lib/jvm/jdk1.7.0_60/bin/jar 300</span><br><span class="line">sudo update-alternatives --install /usr/bin/javah javah /usr/lib/jvm/jdk1.7.0_60/bin/javah 300</span><br><span class="line">sudo update-alternatives --install /usr/bin/javap javap /usr/lib/jvm/jdk1.7.0_60/bin/javap 300</span><br></pre></td></tr></table></figure><p>然后执行:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo update-alternatives --config java</span><br></pre></td></tr></table></figure><p>  若是初次安装jdk,会有下面的提示     </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">There is only one alternative in link group java (providing /usr/bin/java): /usr/lib/jvm/jdk1.7.0_60/bin/java</span><br></pre></td></tr></table></figure><p>否者,选择合适的jdk</p><h4 id="测试jdk"><a href="#测试jdk" class="headerlink" title="测试jdk"></a>测试jdk</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java -versionjava version &quot;1.7.0_60&quot;</span><br><span class="line"></span><br><span class="line">  Java(TM) SE Runtime Environment (build 1.7.0_60-b19)</span><br><span class="line">  Java HotSpot(TM) 64-Bit Server VM (build 24.60-b09, mixed mode)</span><br></pre></td></tr></table></figure><p> 参考文章:  </p><ul><li><p><a href="http://www.webupd8.org/2012/01/install-oracle-java-jdk-7-in-ubuntu-via.html">http://www.webupd8.org/2012/01/install-oracle-java-jdk-7-in-ubuntu-via.html</a> </p></li><li><p><a href="http://www.webupd8.org/2012/09/install-oracle-java-8-in-ubuntu-via-ppa.html">http://www.webupd8.org/2012/09/install-oracle-java-8-in-ubuntu-via-ppa.html</a></p><h2 id="Ubuntu-18-04-安装java8"><a href="#Ubuntu-18-04-安装java8" class="headerlink" title="Ubuntu 18.04 安装java8"></a>Ubuntu 18.04 安装java8</h2><ul><li>添加ppa<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:webupd8team/java</span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure></li><li>安装oracle-java-installer<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install oracle-java8-installer</span><br></pre></td></tr></table></figure></li><li>设置系统默认jdk<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo update-java-alternatives -s java-8-oracle</span><br></pre></td></tr></table></figure></li><li>java安装测试<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java -version</span><br><span class="line">javac -version</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="linux" scheme="https://guochen2.github.io/categories/linux/"/>
    
    
      <category term="ubuntu" scheme="https://guochen2.github.io/tags/ubuntu/"/>
    
      <category term="jdk" scheme="https://guochen2.github.io/tags/jdk/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 14.04 “无法修正错误，因为您要求某些软件包保持现状，就是它们破坏了软件包间的依赖关” 解决办法</title>
    <link href="https://guochen2.github.io/2019/12/25/ubuntu/ubuntu-1/"/>
    <id>https://guochen2.github.io/2019/12/25/ubuntu/ubuntu-1/</id>
    <published>2019-12-25T13:02:07.000Z</published>
    <updated>2020-11-23T13:46:49.742Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>ubuntu下apt-get install 安装软件， 报</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">无法修正错误，因为您要求某些软件包保持现状，就是它们破坏了软件包间的依赖关系</span><br></pre></td></tr></table></figure><p>这个错误出现的主要原因是，系统中已经安装了被依赖的包的高版本。例如在我安装 openssh-server 时，有一个对于 openssh-client 的依赖，但是我系统中已经提前安装了openssh-client 这个包，并且版本高于所要求的这个版本，导致安装失败。 </p><ul><li>解决方法之一：安装制定版本号的被依赖包：<ul><li>sudo apt-get install openssh-client=1:7.2p2-4ubuntu2.4</li></ul></li><li>解决方法之二：使用aptitude进行安装<ul><li>首先需要安装 aptitude：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install aptitude</span><br></pre></td></tr></table></figure></li><li>然后使用 aptitude 安装包：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo aptitude install openssh-server</span><br></pre></td></tr></table></figure>据说如果方案中仍然存在未解决的依赖，可以选择 n，aptitude 会重新计算可行方案，包括对已存在的包进行降级等。</li></ul></li></ul><p>另外我自己福至心灵想到的解决方法：</p><p>先卸载已安装好的被依赖包即 openssh-client，然后再次安装 openssh-server。这时因为系统中已经没有了openssh-client，因此apt-get 会首先选择合适版本的 openssh-client 安装，然后再安装 openssh-server。</p><p>卸载安装好的包，及其依赖的包，及配置文件：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get --purge remove openssh-server</span><br></pre></td></tr></table></figure><p>另外，apt-get 还可能会因为 source 错误而下载失败，这个时候可以手工更改 source 列表，指定下载源。</p><p>源列表维护在：/etc/apt/sources.list 中。可以备份后手工更改。</p><p>此外，也可以在“系统设置”-“软件和更新”-“ubuntu软件”中更改</p><p>apt-get update 更新源列表，</p><p>apt-get upgrade 更新已安装的包到最新版本</p><p>apt-get dist-upgrade 升级系统</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="linux" scheme="https://guochen2.github.io/categories/linux/"/>
    
    
      <category term="ubuntu" scheme="https://guochen2.github.io/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>suse11</title>
    <link href="https://guochen2.github.io/2019/12/25/suse11/"/>
    <id>https://guochen2.github.io/2019/12/25/suse11/</id>
    <published>2019-12-25T10:00:00.000Z</published>
    <updated>2020-11-23T13:46:49.740Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service SuSEfirewall2_setup stop</span><br><span class="line">service SuSEfirewall2_init  stop</span><br></pre></td></tr></table></figure><h4 id="取消开机启动防火墙"><a href="#取消开机启动防火墙" class="headerlink" title="取消开机启动防火墙"></a>取消开机启动防火墙</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chkconfig SuSEfirewall2_init off</span><br><span class="line">chkconfig SuSEfirewall2_setup off</span><br></pre></td></tr></table></figure><h4 id="启动ssh服务"><a href="#启动ssh服务" class="headerlink" title="启动ssh服务"></a>启动ssh服务</h4><ul><li>修改sshd_config文件，命令为：vi /etc/ssh/sshd_config <ul><li>将#PasswordAuthentication no的注释去掉，并且将NO修改为YES </li><li>将#PermitRootLogin yes的注释去掉</li></ul></li><li>重新启动SSH服务，命令为：/etc/init.d/sshd restart </li><li>验证SSH服务状态，命令为：/etc/init.d/sshd status</li></ul><h4 id="安装GCC、G"><a href="#安装GCC、G" class="headerlink" title="安装GCC、G++"></a>安装GCC、G++</h4><ul><li>搜索软件包<ul><li>zypper se gcc-c++或zypper se gcc<ul><li>安装GCC软件包</li></ul></li><li>zypper install gcc-c++或zypper install gcc</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="linux" scheme="https://guochen2.github.io/categories/linux/"/>
    
    
      <category term="suse" scheme="https://guochen2.github.io/tags/suse/"/>
    
  </entry>
  
</feed>
